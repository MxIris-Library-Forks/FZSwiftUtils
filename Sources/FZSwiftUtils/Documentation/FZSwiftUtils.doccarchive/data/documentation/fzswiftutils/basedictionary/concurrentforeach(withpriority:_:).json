{"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary\/concurrentForEach(withPriority:_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary\/Sequence-Implementations"]]},"variants":[{"paths":["\/documentation\/fzswiftutils\/basedictionary\/concurrentforeach(withpriority:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Run an async closure for each element within the sequence.","type":"text"}],"metadata":{"role":"symbol","externalID":"s:ST12FZSwiftUtilsE17concurrentForEach12withPriority_yScPSg_y7ElementQzYactYaF::SYNTHESIZED::s:12FZSwiftUtils14BaseDictionaryV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"text":"?, (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"FZSwiftUtils"}],"roleHeading":"Instance Method","title":"concurrentForEach(withPriority:_:)","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"concurrentForEach","kind":"identifier"},{"kind":"text","text":"("},{"text":"withPriority","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"priority"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]}]},{"parameters":[{"name":"priority","content":[{"type":"paragraph","inlineContent":[{"text":"Any specific ","type":"text"},{"code":"TaskPriority","type":"codeVoice"},{"type":"text","text":" to assign to"},{"type":"text","text":" "},{"type":"text","text":"the async tasks that will perform the closure calls. The"},{"text":" ","type":"text"},{"type":"text","text":"default is "},{"code":"nil","type":"codeVoice"},{"text":" (meaning that the system picks a priority).","type":"text"}]}]},{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"text":"The closure to run for each element.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The closure calls will be performed concurrently, but the call","type":"text"},{"text":" ","type":"text"},{"text":"to this function wonâ€™t return until all of the closure calls","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"have completed."}]}],"kind":"content"}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"role":"collection","abstract":[{"type":"text","text":"Swift Foundation extensions and useful classes & utilities."}],"url":"\/documentation\/fzswiftutils","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","title":"FZSwiftUtils","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/BaseDictionary/Sequence-Implementations":{"abstract":[],"url":"\/documentation\/fzswiftutils\/basedictionary\/sequence-implementations","title":"Sequence Implementations","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary\/Sequence-Implementations"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/BaseDictionary/concurrentForEach(withPriority:_:)":{"role":"symbol","title":"concurrentForEach(withPriority:_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary\/concurrentForEach(withPriority:_:)","abstract":[{"text":"Run an async closure for each element within the sequence.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"text":"?, (","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/fzswiftutils\/basedictionary\/concurrentforeach(withpriority:_:)"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/BaseDictionary":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/BaseDictionary","title":"BaseDictionary","abstract":[{"text":"A synchronized dictionary.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"BaseDictionary","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseDictionary","kind":"identifier"}],"url":"\/documentation\/fzswiftutils\/basedictionary"}}}