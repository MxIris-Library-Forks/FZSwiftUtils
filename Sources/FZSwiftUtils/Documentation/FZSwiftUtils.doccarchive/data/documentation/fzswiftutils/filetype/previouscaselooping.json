{"variants":[{"paths":["\/documentation\/fzswiftutils\/filetype\/previouscaselooping"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousCaseLooping","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType\/previousCaseLooping"},"metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"previousCaseLooping","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"FZSwiftUtils"}],"externalID":"s:s12CaseIterableP12FZSwiftUtilsSHRzrlE08previousA7LoopingxSgvp::SYNTHESIZED::s:12FZSwiftUtils8FileTypeO","roleHeading":"Instance Property","title":"previousCaseLooping"},"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType\/CaseIterable-Implementations"]]},"abstract":[{"text":"Returns the previous case from ","type":"text"},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there isn´t a previous case. If the current case is the first case, it returns the last case."}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/FileType/previousCaseLooping":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType\/previousCaseLooping","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousCaseLooping","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","title":"previousCaseLooping","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Returns the previous case from "},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there isn´t a previous case. If the current case is the first case, it returns the last case."}],"url":"\/documentation\/fzswiftutils\/filetype\/previouscaselooping"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/FileType/CaseIterable-Implementations":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType\/CaseIterable-Implementations","type":"topic","abstract":[],"url":"\/documentation\/fzswiftutils\/filetype\/caseiterable-implementations","role":"collectionGroup","title":"CaseIterable Implementations","kind":"article"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/FileType":{"kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/FileType","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileType"}],"navigatorTitle":[{"text":"FileType","kind":"identifier"}],"title":"FileType","type":"topic","abstract":[{"text":"The type of a file.","type":"text"}],"url":"\/documentation\/fzswiftutils\/filetype","role":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"role":"collection","abstract":[{"type":"text","text":"Swift Foundation extensions and useful classes & utilities."}],"url":"\/documentation\/fzswiftutils","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","title":"FZSwiftUtils","type":"topic"}}}