{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/nextCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/nextCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/previousCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/previousCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/randomCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/randomNewCase"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/caseiterable-implementations"]}],"metadata":{"modules":[{"name":"FZSwiftUtils"}],"title":"CaseIterable Implementations","role":"collectionGroup"},"kind":"article","identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/CaseIterable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey"]]},"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation":{"kind":"symbol","type":"topic","url":"\/documentation\/fzswiftutils\/foundation","title":"Foundation","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation","role":"collection","abstract":[]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/nextCase":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/nextCase","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/nextcase","abstract":[{"type":"text","text":"Returns the next case from "},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there isn´t a next case."}],"title":"nextCase","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextCase"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/previousCaseLooping":{"title":"previousCaseLooping","abstract":[{"type":"text","text":"Returns the previous case from "},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there isn´t a previous case. If the current case is the first case, it returns the last case."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/previousCaseLooping","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousCaseLooping","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/previouscaselooping","role":"symbol","kind":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/randomNewCase":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/randomNewCase","title":"randomNewCase","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a random new case from "},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" excluding self or "},{"type":"codeVoice","code":"nil"},{"text":" if there isn´t a new random case.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"randomNewCase","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/randomnewcase","kind":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/previousCase":{"title":"previousCase","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousCase","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"abstract":[{"text":"Returns the previous case from ","type":"text"},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there isn´t a previous case."}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/previousCase","url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/previouscase","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]}},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey":{"type":"topic","url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey","title":"HTTPURLResponse.HTTPHeaderFieldKey","kind":"symbol","abstract":[{"text":"Enumeration of all HTTP response header field keys.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPHeaderFieldKey"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPHeaderFieldKey","kind":"identifier"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse":{"type":"topic","url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse","title":"HTTPURLResponse","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"HTTPURLResponse","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"HTTPURLResponse","kind":"identifier","preciseIdentifier":"c:objc(cs)NSHTTPURLResponse"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/nextCaseLooping":{"title":"nextCaseLooping","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextCaseLooping"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/nextcaselooping","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/nextCaseLooping","abstract":[{"type":"text","text":"Returns the next case from "},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there isn´t a next case. If the current case is the last case, it returns the first case."}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]}},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/HTTPURLResponse/HTTPHeaderFieldKey/randomCase":{"role":"symbol","kind":"symbol","url":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/randomcase","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomCase"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/HTTPURLResponse\/HTTPHeaderFieldKey\/randomCase","type":"topic","title":"randomCase","abstract":[{"text":"Returns a random case from ","type":"text"},{"type":"codeVoice","code":"Self.allCases"},{"text":".","type":"text"}]}}}