{"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/nextCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/nextCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/previousCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/previousCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/randomCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/randomNewCase"]},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/allCases"]}],"variants":[{"paths":["\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/caseiterable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"collectionGroup","modules":[{"name":"FZSwiftUtils"}],"title":"CaseIterable Implementations"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/CaseIterable-Implementations"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum"]]},"kind":"article","references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL":{"role":"symbol","navigatorTitle":[{"text":"URL","kind":"identifier"}],"kind":"symbol","abstract":[],"fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"}],"url":"\/documentation\/fzswiftutils\/foundation\/url","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL","title":"URL","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation":{"kind":"symbol","type":"topic","url":"\/documentation\/fzswiftutils\/foundation","title":"Foundation","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation","role":"collection","abstract":[]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/nextCaseLooping":{"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/nextCaseLooping","title":"nextCaseLooping","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol","abstract":[{"text":"Returns the next case from ","type":"text"},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there isn´t a next case. If the current case is the last case, it returns the first case."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextCaseLooping"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/nextcaselooping","kind":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/previousCaseLooping":{"title":"previousCaseLooping","abstract":[{"text":"Returns the previous case from ","type":"text"},{"code":"Self.allCases","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there isn´t a previous case. If the current case is the first case, it returns the last case."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/previousCaseLooping","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/previouscaselooping","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousCaseLooping"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/nextCase":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextCase","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/nextCase","title":"nextCase","url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/nextcase","abstract":[{"type":"text","text":"Returns the next case from "},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if there isn´t a next case.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/allCases":{"url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/allcases","title":"allCases","role":"symbol","kind":"symbol","abstract":[{"text":"An array of all file types.","type":"text"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/allCases","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allCases","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV12FZSwiftUtilsE8FileTypeO","text":"FileType","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/randomCase":{"role":"symbol","title":"randomCase","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/randomCase","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomCase"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/randomcase","abstract":[{"type":"text","text":"Returns a random case from "},{"code":"Self.allCases","type":"codeVoice"},{"type":"text","text":"."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileType"}],"title":"URL.FileType","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum","url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum","abstract":[{"type":"text","text":"The type of a file."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"FileType","kind":"identifier"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/previousCase":{"role":"symbol","kind":"symbol","url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/previouscase","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousCase"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/previousCase","type":"topic","abstract":[{"type":"text","text":"Returns the previous case from "},{"type":"codeVoice","code":"Self.allCases"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"text":" if there isn´t a previous case.","type":"text"}],"title":"previousCase"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Foundation/URL/FileType-swift.enum/randomNewCase":{"kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Foundation\/URL\/FileType-swift.enum\/randomNewCase","url":"\/documentation\/fzswiftutils\/foundation\/url\/filetype-swift.enum\/randomnewcase","role":"symbol","title":"randomNewCase","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"randomNewCase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"type":"text","text":"Returns a random new case from "},{"type":"codeVoice","code":"Self.allCases"},{"type":"text","text":" excluding self or "},{"type":"codeVoice","code":"nil"},{"text":" if there isn´t a new random case.","type":"text"}]}}}