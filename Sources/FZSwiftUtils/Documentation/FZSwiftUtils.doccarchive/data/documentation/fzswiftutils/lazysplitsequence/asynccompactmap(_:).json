{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/lazysplitsequence\/asynccompactmap(_:)"]}],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/asyncCompactMap(_:)"},"abstract":[{"type":"text","text":"Transform the sequence into an array of new values using"},{"type":"text","text":" "},{"type":"text","text":"an async closure that returns optional values. Only the"},{"text":" ","type":"text"},{"text":"non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return values will be included in the new array.","type":"text"}],"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asyncCompactMap"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Swift","title":"asyncCompactMap(_:)","externalID":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF::SYNTHESIZED::s:12FZSwiftUtils17LazySplitSequenceV","modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asyncCompactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp"},{"text":"]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The transform to run on each element."}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The transformed values as an array. The order of"},{"text":" ","type":"text"},{"text":"the transformed values will match the original sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"except for the values that were transformed into "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure calls will be performed in order, by waiting for"},{"text":" ","type":"text"},{"text":"each call to complete before proceeding with the next one. If","type":"text"},{"type":"text","text":" "},{"text":"any of the closure calls throw an error, then the iteration","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will be terminated and the error rethrown."}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":"Rethrows any error thrown by the passed closure."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/asyncCompactMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncCompactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE15asyncCompactMapySayqd__Gqd__Sg7ElementQzYaKXEYaKlF1TL_qd__mfp"},{"kind":"text","text":"]"}],"url":"\/documentation\/fzswiftutils\/lazysplitsequence\/asynccompactmap(_:)","role":"symbol","title":"asyncCompactMap(_:)","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/asyncCompactMap(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Transform the sequence into an array of new values using"},{"type":"text","text":" "},{"type":"text","text":"an async closure that returns optional values. Only the"},{"type":"text","text":" "},{"text":"non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return values will be included in the new array.","type":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazySplitSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazySplitSequence","kind":"identifier"}],"abstract":[{"type":"text","text":"A sequence from splitting a Collection lazily."}],"kind":"symbol","title":"LazySplitSequence","url":"\/documentation\/fzswiftutils\/lazysplitsequence","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","role":"symbol","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/Sequence-Implementations":{"abstract":[],"kind":"article","title":"Sequence Implementations","url":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations","role":"collectionGroup","type":"topic"}}}