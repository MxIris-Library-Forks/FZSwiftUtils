{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/concurrentFlatMap(withPriority:_:)-6cnyn"},"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-6cnyn"]}],"kind":"symbol","abstract":[{"text":"Transform the sequence into an array of new values using","type":"text"},{"type":"text","text":" "},{"text":"an async closure that returns sequences. The returned sequences","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will be flattened into the array returned from this function."}],"metadata":{"modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"method","externalID":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF::SYNTHESIZED::s:12FZSwiftUtils17LazySplitSequenceV","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"concurrentFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"kind":"text","text":"?, ("},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"concurrentFlatMap(withPriority:_:)","extendedModule":"Swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"concurrentFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp","text":"T"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Any specific ","type":"text"},{"type":"codeVoice","code":"TaskPriority"},{"type":"text","text":" to assign to"},{"type":"text","text":" "},{"text":"the async tasks that will perform the closure calls. The","type":"text"},{"text":" ","type":"text"},{"text":"default is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" (meaning that the system picks a priority)."}]}],"name":"priority"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The transform to run on each element.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The transformed values as an array. The order of","type":"text"},{"type":"text","text":" "},{"text":"the transformed values will match the original sequence,","type":"text"},{"type":"text","text":" "},{"text":"with the results of each closure call appearing in-order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"within the returned array."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The closure calls will be performed concurrently, but the call","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to this function wonâ€™t return until all of the closure calls"},{"text":" ","type":"text"},{"text":"have completed.","type":"text"}]}],"kind":"content"}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"role":"collection","abstract":[{"type":"text","text":"Swift Foundation extensions and useful classes & utilities."}],"url":"\/documentation\/fzswiftutils","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","title":"FZSwiftUtils","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/concurrentFlatMap(withPriority:_:)-6cnyn":{"role":"symbol","url":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-6cnyn","abstract":[{"type":"text","text":"Transform the sequence into an array of new values using"},{"type":"text","text":" "},{"text":"an async closure that returns sequences. The returned sequences","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will be flattened into the array returned from this function."}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/concurrentFlatMap(withPriority:_:)-6cnyn","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"concurrentFlatMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:ST12FZSwiftUtilsE17concurrentFlatMap12withPriority_Say7ElementQyd__GScPSg_qd__ADQzYactYaSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","title":"concurrentFlatMap(withPriority:_:)"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/Sequence-Implementations":{"kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","role":"collectionGroup"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence":{"kind":"symbol","url":"\/documentation\/fzswiftutils\/lazysplitsequence","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","abstract":[{"text":"A sequence from splitting a Collection lazily.","type":"text"}],"title":"LazySplitSequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazySplitSequence","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"LazySplitSequence","kind":"identifier"}]}}}