{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentforeach(withpriority:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:ST12FZSwiftUtilsE17concurrentForEach12withPriority_yScPSg_y7ElementQzYactYaF::SYNTHESIZED::s:12FZSwiftUtils17LazySplitSequenceV","roleHeading":"Instance Method","modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"text":"?, (","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"role":"symbol","extendedModule":"Swift","title":"concurrentForEach(withPriority:_:)"},"kind":"symbol","identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/concurrentForEach(withPriority:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations"]]},"abstract":[{"type":"text","text":"Run an async closure for each element within the sequence."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"concurrentForEach"},{"kind":"text","text":"("},{"text":"withPriority","kind":"externalParam"},{"kind":"text","text":" "},{"text":"priority","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","text":"? = nil, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"priority","content":[{"inlineContent":[{"type":"text","text":"Any specific "},{"type":"codeVoice","code":"TaskPriority"},{"type":"text","text":" to assign to"},{"type":"text","text":" "},{"type":"text","text":"the async tasks that will perform the closure calls. The"},{"text":" ","type":"text"},{"text":"default is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" (meaning that the system picks a priority)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The closure to run for each element.","type":"text"}],"type":"paragraph"}],"name":"operation"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure calls will be performed concurrently, but the call"},{"text":" ","type":"text"},{"text":"to this function wonâ€™t return until all of the closure calls","type":"text"},{"text":" ","type":"text"},{"text":"have completed.","type":"text"}]}]}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LazySplitSequence","kind":"identifier"}],"navigatorTitle":[{"text":"LazySplitSequence","kind":"identifier"}],"abstract":[{"type":"text","text":"A sequence from splitting a Collection lazily."}],"kind":"symbol","title":"LazySplitSequence","url":"\/documentation\/fzswiftutils\/lazysplitsequence","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence","role":"symbol","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/Sequence-Implementations":{"abstract":[],"kind":"article","title":"Sequence Implementations","url":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/Sequence-Implementations","role":"collectionGroup","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/LazySplitSequence/concurrentForEach(withPriority:_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentforeach(withpriority:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"text":"TaskPriority","preciseIdentifier":"s:ScP","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/LazySplitSequence\/concurrentForEach(withPriority:_:)","type":"topic","title":"concurrentForEach(withPriority:_:)","abstract":[{"text":"Run an async closure for each element within the sequence.","type":"text"}]}}}