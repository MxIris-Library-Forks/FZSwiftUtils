{"sections":[],"metadata":{"modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"externalID":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF::SYNTHESIZED::s:12FZSwiftUtils30PartialSourceLazySplitSequenceV","extendedModule":"Swift","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">((","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"title":"asyncFlatMap(_:)"},"kind":"symbol","abstract":[{"text":"Transform the sequence into an array of new values using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an async closure that returns sequences. The returned sequences"},{"type":"text","text":" "},{"text":"will be flattened into the array returned from this function.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asyncFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The transform to run on each element.","type":"text"}]}],"name":"transform"}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"The transformed values as an array. The order of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the transformed values will match the original sequence,"},{"type":"text","text":" "},{"text":"with the results of each closure call appearing in-order","type":"text"},{"type":"text","text":" "},{"type":"text","text":"within the returned array."}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The closure calls will be performed in order, by waiting for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"each call to complete before proceeding with the next one. If"},{"text":" ","type":"text"},{"text":"any of the closure calls throw an error, then the iteration","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will be terminated and the error rethrown."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Rethrows any error thrown by the passed closure."}],"type":"paragraph"}],"style":"note","name":"Throws"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncflatmap(_:)"]}],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/asyncFlatMap(_:)","interfaceLanguage":"swift"},"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/asyncFlatMap(_:)":{"abstract":[{"type":"text","text":"Transform the sequence into an array of new values using"},{"type":"text","text":" "},{"text":"an async closure that returns sequences. The returned sequences","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will be flattened into the array returned from this function."}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/asyncFlatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asyncFlatMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE12asyncFlatMapySay7ElementQyd__Gqd__ACQzYaKXEYaKSTRd__lF1TL_qd__mfp"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":"]"}],"type":"topic","title":"asyncFlatMap(_:)","kind":"symbol","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncflatmap(_:)","role":"symbol"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/Sequence-Implementations":{"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article"},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"abstract":[{"type":"text","text":"Swift Foundation extensions and useful classes & utilities."}],"url":"\/documentation\/fzswiftutils","role":"collection","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","title":"FZSwiftUtils","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence":{"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PartialSourceLazySplitSequence"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","title":"PartialSourceLazySplitSequence","type":"topic","abstract":[{"text":"A sequence from splitting a series of Collections lazily, as if they were one Collection.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"PartialSourceLazySplitSequence","kind":"identifier"}],"kind":"symbol"}}}