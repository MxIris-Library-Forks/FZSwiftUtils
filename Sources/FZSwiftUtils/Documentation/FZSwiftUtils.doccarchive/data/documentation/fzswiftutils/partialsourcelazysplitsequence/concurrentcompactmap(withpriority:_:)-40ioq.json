{"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/concurrentCompactMap(withPriority:_:)-40ioq","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"concurrentCompactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"kind":"text","text":" "},{"text":"priority","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ScP","text":"TaskPriority"},{"kind":"text","text":"? = nil, "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Any specific "},{"type":"codeVoice","code":"TaskPriority"},{"text":" to assign to","type":"text"},{"text":" ","type":"text"},{"text":"the async tasks that will perform the closure calls. The","type":"text"},{"text":" ","type":"text"},{"text":"default is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" (meaning that the system picks a priority)."}],"type":"paragraph"}],"name":"priority"},{"content":[{"inlineContent":[{"type":"text","text":"The transform to run on each element."}],"type":"paragraph"}],"name":"transform"}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The transformed values as an array. The order of","type":"text"},{"text":" ","type":"text"},{"text":"the transformed values will match the original sequence,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"except for the values that were transformed into "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The closure calls will be performed concurrently, but the call"},{"type":"text","text":" "},{"type":"text","text":"to this function wonâ€™t return until all of the closure calls"},{"type":"text","text":" "},{"type":"text","text":"have completed."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-40ioq"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"concurrentCompactMap"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"text":"?, (","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"T","preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp","text":"T"},{"kind":"text","text":"]"}],"modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"title":"concurrentCompactMap(withPriority:_:)","role":"symbol","externalID":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF::SYNTHESIZED::s:12FZSwiftUtils30PartialSourceLazySplitSequenceV","symbolKind":"method","extendedModule":"Swift","roleHeading":"Instance Method"},"sections":[],"abstract":[{"text":"Transform the sequence into an array of new values using","type":"text"},{"type":"text","text":" "},{"text":"an async closure that returns optional values. Only the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"non-"},{"code":"nil","type":"codeVoice"},{"text":" return values will be included in the new array.","type":"text"}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/concurrentCompactMap(withPriority:_:)-40ioq":{"abstract":[{"text":"Transform the sequence into an array of new values using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an async closure that returns optional values. Only the"},{"type":"text","text":" "},{"text":"non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" return values will be included in the new array.","type":"text"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/concurrentCompactMap(withPriority:_:)-40ioq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"concurrentCompactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":": "},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"kind":"text","text":"?, ("},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> ["},{"preciseIdentifier":"s:ST12FZSwiftUtilsE20concurrentCompactMap12withPriority_Sayqd__GScPSg_qd__Sg7ElementQzYactYalF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","title":"concurrentCompactMap(withPriority:_:)","role":"symbol","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-40ioq","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence":{"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","role":"symbol","kind":"symbol","abstract":[{"text":"A sequence from splitting a series of Collections lazily, as if they were one Collection.","type":"text"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","type":"topic","navigatorTitle":[{"text":"PartialSourceLazySplitSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PartialSourceLazySplitSequence","kind":"identifier"}],"title":"PartialSourceLazySplitSequence"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/Sequence-Implementations":{"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations","type":"topic","title":"Sequence Implementations"},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"role":"collection","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","type":"topic","title":"FZSwiftUtils","kind":"symbol","abstract":[{"text":"Swift Foundation extensions and useful classes & utilities.","type":"text"}],"url":"\/documentation\/fzswiftutils"}}}