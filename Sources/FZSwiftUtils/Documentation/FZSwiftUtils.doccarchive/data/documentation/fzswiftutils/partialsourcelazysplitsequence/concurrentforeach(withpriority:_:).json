{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withPriority"},{"kind":"text","text":" "},{"kind":"internalParam","text":"priority"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}]}],"kind":"declarations"},{"parameters":[{"name":"priority","content":[{"inlineContent":[{"text":"Any specific ","type":"text"},{"type":"codeVoice","code":"TaskPriority"},{"text":" to assign to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the async tasks that will perform the closure calls. The"},{"type":"text","text":" "},{"text":"default is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" (meaning that the system picks a priority)."}],"type":"paragraph"}]},{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure to run for each element."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The closure calls will be performed concurrently, but the call","type":"text"},{"type":"text","text":" "},{"text":"to this function wonâ€™t return until all of the closure calls","type":"text"},{"type":"text","text":" "},{"type":"text","text":"have completed."}]}]}],"variants":[{"paths":["\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentforeach(withpriority:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"concurrentForEach","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"kind":"text","text":"?, ("},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"symbolKind":"method","externalID":"s:ST12FZSwiftUtilsE17concurrentForEach12withPriority_yScPSg_y7ElementQzYactYaF::SYNTHESIZED::s:12FZSwiftUtils30PartialSourceLazySplitSequenceV","modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"title":"concurrentForEach(withPriority:_:)","extendedModule":"Swift","role":"symbol","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/concurrentForEach(withPriority:_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Run an async closure for each element within the sequence.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"]]},"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/Sequence-Implementations":{"type":"topic","title":"Sequence Implementations","kind":"article","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/concurrentForEach(withPriority:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"concurrentForEach"},{"text":"(","kind":"text"},{"text":"withPriority","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:ScP","kind":"typeIdentifier","text":"TaskPriority"},{"text":"?, (","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"kind":"symbol","abstract":[{"text":"Run an async closure for each element within the sequence.","type":"text"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/concurrentForEach(withPriority:_:)","type":"topic","role":"symbol","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentforeach(withpriority:_:)","title":"concurrentForEach(withPriority:_:)"},"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence":{"title":"PartialSourceLazySplitSequence","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PartialSourceLazySplitSequence"}],"abstract":[{"text":"A sequence from splitting a series of Collections lazily, as if they were one Collection.","type":"text"}],"role":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","navigatorTitle":[{"text":"PartialSourceLazySplitSequence","kind":"identifier"}]}}}