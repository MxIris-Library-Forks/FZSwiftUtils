{"metadata":{"externalID":"s:STs8IteratorSTQzRszrlE04makeA0xyF::SYNTHESIZED::s:12FZSwiftUtils30PartialSourceLazySplitSequenceV","extendedModule":"Swift","roleHeading":"Instance Method","title":"makeIterator()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Iterator"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"FZSwiftUtils"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/makeIterator()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Sequence.makeIterator()","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()"]}],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"role":"collection","abstract":[{"type":"text","text":"Swift Foundation extensions and useful classes & utilities."}],"url":"\/documentation\/fzswiftutils","kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","title":"FZSwiftUtils","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/Sequence-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","kind":"article","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations","title":"Sequence Implementations","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence":{"role":"symbol","abstract":[{"type":"text","text":"A sequence from splitting a series of Collections lazily, as if they were one Collection."}],"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PartialSourceLazySplitSequence"}],"kind":"symbol","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","navigatorTitle":[{"kind":"identifier","text":"PartialSourceLazySplitSequence"}],"title":"PartialSourceLazySplitSequence","type":"topic"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/makeIterator()":{"title":"makeIterator()","role":"symbol","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/makeIterator()","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeIterator"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Iterator","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}