{"abstract":[{"type":"text","text":"Inherited from "},{"code":"Sequence.makeIterator()","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","modules":[{"name":"FZSwiftUtils","relatedModules":["Swift"]}],"title":"makeIterator()","symbolKind":"method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Iterator"},{"text":".","type":"text"}]},"externalID":"s:STs8IteratorSTQzRszrlE04makeA0xyF::SYNTHESIZED::s:12FZSwiftUtils30PartialSourceLazySplitSequenceV","extendedModule":"Swift","role":"symbol"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"makeIterator","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/makeIterator()","interfaceLanguage":"swift"},"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Swift Foundation extensions and useful classes & utilities.","type":"text"}],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils","title":"FZSwiftUtils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence":{"type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PartialSourceLazySplitSequence","kind":"identifier"}],"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","title":"PartialSourceLazySplitSequence","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PartialSourceLazySplitSequence"}],"abstract":[{"text":"A sequence from splitting a series of Collections lazily, as if they were one Collection.","type":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/Sequence-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","title":"Sequence Implementations","kind":"article","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/Sequence-Implementations"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/PartialSourceLazySplitSequence/makeIterator()":{"url":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()","abstract":[],"identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/PartialSourceLazySplitSequence\/makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"makeIterator()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Self.Iterator","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","kind":"symbol"}}}