{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/nextCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/nextCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/previousCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/previousCaseLooping","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/randomCase","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/randomNewCase"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s12CaseIterableP","kind":"typeIdentifier","text":"CaseIterable"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fzswiftutils\/swift\/caseiterable"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift"]]},"identifier":{"url":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable","interfaceLanguage":"swift"},"metadata":{"externalID":"s:e:s:s12CaseIterableP12FZSwiftUtilsSHRzrlE04nextA0xSgvp","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"text":"CaseIterable","kind":"identifier","preciseIdentifier":"s:s12CaseIterableP"}],"navigatorTitle":[{"text":"CaseIterable","kind":"identifier"}],"symbolKind":"extension","modules":[{"relatedModules":["Swift"],"name":"FZSwiftUtils"}],"roleHeading":"Extended Protocol","title":"CaseIterable","extendedModule":"Swift","role":"symbol"},"kind":"symbol","sections":[],"references":{"doc://FZSwiftUtils/documentation/FZSwiftUtils":{"kind":"symbol","abstract":[],"title":"FZSwiftUtils","role":"collection","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils","url":"\/documentation\/fzswiftutils"},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift":{"kind":"symbol","type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift","url":"\/documentation\/fzswiftutils\/swift","title":"Swift","role":"collection","abstract":[]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/nextCaseLooping":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/nextcaselooping","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/nextCaseLooping","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"nextCaseLooping","kind":"symbol","abstract":[{"type":"text","text":"Returns the next case from "},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if there isn´t a next case. If the current case is the last case, it returns the first case.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextCaseLooping","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/previousCase":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/previouscase","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/previousCase","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"previousCase","kind":"symbol","abstract":[{"type":"text","text":"Returns the previous case from "},{"code":"Self.allCases","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if there isn´t a previous case.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"previousCase","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/nextCase":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/nextcase","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/nextCase","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"nextCase","kind":"symbol","abstract":[{"type":"text","text":"Returns the next case from "},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if there isn´t a next case.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nextCase","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/randomCase":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/randomcase","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/randomCase","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"randomCase","kind":"symbol","abstract":[{"type":"text","text":"Returns a random case from "},{"code":"Self.allCases","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomCase"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/randomNewCase":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/randomnewcase","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/randomNewCase","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"randomNewCase","kind":"symbol","abstract":[{"text":"Returns a random new case from ","type":"text"},{"code":"Self.allCases","type":"codeVoice"},{"text":" excluding self or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if there isn´t a new random case.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomNewCase","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable":{"type":"topic","url":"\/documentation\/fzswiftutils\/swift\/caseiterable","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable","title":"CaseIterable","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"CaseIterable","kind":"identifier"}],"role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s12CaseIterableP","kind":"identifier","text":"CaseIterable"}]},"doc://FZSwiftUtils/documentation/FZSwiftUtils/Swift/CaseIterable/previousCaseLooping":{"kind":"symbol","title":"previousCaseLooping","url":"\/documentation\/fzswiftutils\/swift\/caseiterable\/previouscaselooping","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousCaseLooping"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":"?","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"type":"text","text":"Returns the previous case from "},{"type":"codeVoice","code":"Self.allCases"},{"text":" or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there isn´t a previous case. If the current case is the first case, it returns the last case."}],"type":"topic","identifier":"doc:\/\/FZSwiftUtils\/documentation\/FZSwiftUtils\/Swift\/CaseIterable\/previousCaseLooping"}}}