{"interfaceLanguages":{"swift":[{"children":[{"title":"Collections","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/+(_:_:)-4i18z","title":"static func + (Element?, [Element]) -> [Element]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/+(_:_:)-69us0","title":"static func + ([Element], Element?) -> [Element]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/+=(_:_:)","title":"static func += (inout [Element], Element?)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/joined(separator:)-2esy1","title":"func joined(separator: NSAttributedString) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/joined(separator:)-5a7q1","title":"func joined(separator: String) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/reap()","title":"func reap()","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/synchronized(_:)","title":"func synchronized<T>(() throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/uniquedoptions()","title":"func uniquedOptions() -> [Element]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: `Self`, epsilon: Element) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/array\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:)-4mm62","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:)-6ct5y","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-1ilkl","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-24u4n","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-699wr","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-tplk","title":"static func < ([Element], [Element]) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_=(_:_:)-1iig","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_=(_:_:)-8lyh8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-1gnlr","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-26u4n","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-4pbpg","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-70beh","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-8u1ad","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-9iglz","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/isbetween(_:)-3nn1f","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/isbetween(_:)-6homz","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthan(_:)-8ss0f","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthan(_:)-9allw","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthanorequal(_:)-8n1eb","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthanorequal(_:)-99r5g","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/array\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:)-4mm62","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:)-6ct5y","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-1ilkl","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-24u4n","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-699wr","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_(_:_:)-tplk","title":"static func < ([Element], [Element]) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_=(_:_:)-1iig","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/_=(_:_:)-8lyh8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-1gnlr","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-26u4n","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamp(to:)-4pbpg","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-70beh","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-8u1ad","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/clamped(to:)-9iglz","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/isbetween(_:)-3nn1f","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/isbetween(_:)-6homz","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthan(_:)-8ss0f","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthan(_:)-9allw","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthanorequal(_:)-8n1eb","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/islessthanorequal(_:)-99r5g","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/array\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/array\/typename","title":"var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/swift\/array\/namedescribable-implementations","title":"NameDescribable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/caseiterable\/randomnewcase","title":"var randomNewCase: Self?","type":"property"}],"path":"\/documentation\/fzswiftutils\/swift\/caseiterable","title":"CaseIterable","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/anyflattened()-2cch","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/anyflattened()-gdpq","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/average()-5guaw","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/average()-6c0tu","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/average()-7hdu3","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/average()-7wypr","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/chunked(by:ascending:)-2vjm9","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/chunked(by:ascending:)-3xdu","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/chunked(by:ascending:)-5cl4y","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/flattened()-1y77p","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/flattened()-6k114","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/grouped(by:)-5c7ph","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/grouped(by:)-9amt9","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/index(of:)","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/indexes(of:)","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/joined(separator:)-4xqp4","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/joined(separator:)-6frqy","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/split(by:)-4q1iq","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/split(by:)-805ht","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/sum()-1a6x9","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/sum()-70bdy","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/sum()-753o7","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/sum()-9agg","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/subscript(_:)-3fewk","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/subscript(_:)-aig2","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/subscript(safe:)-442mz","title":"subscript(safe _: Range<Index>) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/subscript(safe:)-5z68q","title":"subscript(safe _: ClosedRange<Int>) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/collection\/subscript(safe:)-7vh6e","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/mutablecollection\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/mutablecollection\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/swift\/mutablecollection","title":"MutableCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/insert(_:after:)-3g30","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/insert(_:after:)-9unb2","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/insert(_:before:)-2jbif","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/insert(_:before:)-64g17","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:after:)-9rvaq","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:after:)-9sb20","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:before:)-3wjxp","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:before:)-93wnd","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:to:)-2oxbf","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(_:to:)-5b537","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(from:to:)-3c05s","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/move(from:to:)-5kfc0","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/remove(_:)-252g9","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/remove(_:)-4bc1y","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/remove(_:)-5o8ln","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/replace(_:with:)-4zzqf","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/replace(_:with:)-8qjop","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/replace(first:with:)-2omox","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/replace(first:with:)-58pd2","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/remove(at:)","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/rangereplaceablecollection","title":"RangeReplaceableCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/lazycollectionprotocol\/split(separator:allowemptyslices:)","title":"func split(separator: Elements.Element, allowEmptySlices: Bool) -> LazySplitSequence<Elements>","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/lazycollectionprotocol","title":"LazyCollectionProtocol","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/cfdictionary","title":"var cfDictionary: CFDictionary","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/nsdictionary","title":"var nsDictionary: NSDictionary","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/editeach(_:)","title":"func editEach((_ key: Key, _ value: inout Value) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/merge(_:)","title":"func merge(`Self`)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/merged(_:)","title":"func merged(`Self`) -> Dictionary<Key, Value>","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/reap()","title":"func reap()","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/synchronized(_:)","title":"func synchronized<T>(() throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/tomodel()","title":"func toModel<T>() -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/tomodel(_:decoder:)","title":"func toModel<T>(T.Type, decoder: JSONDecoder) -> T?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/typename","title":"var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/swift\/dictionary\/namedescribable-implementations","title":"NameDescribable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cfdictionary\/tomodel()","title":"func toModel<T>() -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cfdictionary\/tomodel(_:decoder:)","title":"func toModel<T>(T.Type, decoder: JSONDecoder) -> T?","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cfdictionary","title":"CFDictionary","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsdictionary\/cfdictionary","title":"var cfDictionary: CFDictionary","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsdictionary\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsdictionary","title":"NSDictionary","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/optionset\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/optionset\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/optionset\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/optionset","title":"OptionSet","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/collect()-4zl6p","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/collect()-5kuoq","title":"func collect() async -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/compactmap(_:)-3ltzu","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/compactmap(_:)-91hxf","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentcompactmap(withpriority:_:)-8g0rc","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentcompactmap(withpriority:_:)-9tu5b","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentflatmap(withpriority:_:)-4cmm2","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentflatmap(withpriority:_:)-5sfzj","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentforeach(withpriority:_:)-2w1cr","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentforeach(withpriority:_:)-7andc","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async throws -> Void) async throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentmap(withpriority:_:)-3jum6","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/concurrentmap(withpriority:_:)-8nuho","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/contains(_:)","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/first(rawvalue:)","title":"func first(rawValue: Element.RawValue) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/flatmap(_:)","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/indexes(of:)-365w5","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/indexes(of:)-99f52","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/interpolated(from:to:)-3p29y","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/interpolated(from:to:)-m0w8","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/interpolated(to:)-2z6vu","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/interpolated(to:)-39wfu","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/map(_:)","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:)-1g3g1","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:)-6a63q","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:_:)-1bv92","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:_:)-7ei20","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:_:)-8diyq","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:_:)-wiqv","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/uniqued(by:)-4u0n3","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/uniqued(by:)-8sxaz","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/subscript(firstrawvalue:)","title":"subscript(firstRawValue _: Element.RawValue) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/sequence\/subscript(rawvalue:)","title":"subscript(rawValue _: Element.RawValue) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/swift\/sequence","title":"Sequence","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/+=(_:_:)-4ojhz","title":"static func += (inout Set<Element>, Element)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/+=(_:_:)-9je5l","title":"static func += (inout Set<Element>, Set<Element>)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/reap()","title":"func reap()","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/synchronized(_:)","title":"func synchronized<T>(() throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/uniquedoptions()","title":"func uniquedOptions() -> Set<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: `Self`, epsilon: Element) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/set\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:)-4mm5v","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:)-6ct67","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-1ilks","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-1taxs","title":"static func < (Set<Element>, Set<Element>) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-24u4u","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-699wi","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_=(_:_:)-1ii9","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_=(_:_:)-8lyh1","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-1gnli","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-26u4u","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-4pbpp","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-70be8","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-8u1ak","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-9igm6","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/isbetween(_:)-3nn1m","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/isbetween(_:)-6homq","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthan(_:)-8ss06","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthan(_:)-9alm5","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthanorequal(_:)-8n1ei","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthanorequal(_:)-99r5p","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/set\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:)-4mm5v","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:)-6ct67","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-1ilks","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-1taxs","title":"static func < (Set<Element>, Set<Element>) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-24u4u","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_(_:_:)-699wi","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_=(_:_:)-1ii9","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/_=(_:_:)-8lyh1","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-1gnli","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-26u4u","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamp(to:)-4pbpp","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-70be8","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-8u1ak","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/clamped(to:)-9igm6","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/isbetween(_:)-3nn1m","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/isbetween(_:)-6homq","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthan(_:)-8ss06","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthan(_:)-9alm5","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthanorequal(_:)-8n1ei","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/islessthanorequal(_:)-99r5p","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/set\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/set\/typename","title":"var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/swift\/set\/namedescribable-implementations","title":"NameDescribable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/set","title":"Set","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(_:)-38awm","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(repeating:count:)-2x81d","title":"init(repeating: Element, count: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/indices","title":"var indices: Range<Int>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(_:)-9raes","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(contentsof:)-3488f","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(_:offsetby:limitedby:)","title":"func index(Int, offsetBy: Int, limitedBy: Int) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:at:)-5lgx5","title":"func insert(Element, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(contentsof:at:)-3bscp","title":"func insert<S>(contentsOf: S, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)-6suw6","title":"func partition(by: (Element) throws -> Bool) rethrows -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)-f0b6","title":"func remove(at: Int) -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(keepingcapacity:)-5ocj3","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)-e1j","title":"func removeAll(where: (Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst()-6dgac","title":"func removeFirst() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst(_:)-xmbx","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast()-6zoqi","title":"func removeLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast(_:)-2jcl1","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)-9jj3u","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)-95gqg","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reservecapacity(_:)-4xc7i","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/set(contents:)","title":"func set(contents: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/swapat(_:_:)-6pz5m","title":"func swapAt(Int, Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousmutablestorageifavailable(_:)-3gwxr","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Element>) throws -> R) rethrows -> R?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousstorageifavailable(_:)-1apqr","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-6jjay","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-764e2","title":"subscript(Range<Int>) -> ArraySlice<Element>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-ztc8","title":"subscript(ClosedRange<Int>) -> ArraySlice<Element>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstrange(of:)-4u1p0","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-1a44c","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/first","title":"var first: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3ojs2","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3tvh7","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3txnc","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-541xd","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-5hw7u","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6apna","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6u16j","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-94ghd","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(all:)-8iux0","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(any:)-41rnt","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstrange(of:)-79yci","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-4aeal","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-6ftd9","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/grouped(by:)-8qeir","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/grouped(by:)-9gu9p","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-1ywni","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-4rke3","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-945b9","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-3yooy","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-842oe","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-9e2cw","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(excluding:)-dj2m","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(by:)-6y4vy","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(by:)-9xwsn","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2qqxr","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-6irkv","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-3wf0c","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-5usl0","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-6jrbu","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-7ns7o","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-3b220","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4j19m","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4qbpr","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-54lx4","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/first","title":"var first: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3ojs2","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3tvh7","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-3txnc","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/average()-541xd","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-5hw7u","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6apna","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(by:ascending:)-6u16j","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-94ghd","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(all:)-8iux0","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(any:)-41rnt","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstrange(of:)-79yci","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-4aeal","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flattened()-6ftd9","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/grouped(by:)-8qeir","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/grouped(by:)-9gu9p","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-1ywni","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/index(of:)-4rke3","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-945b9","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-3yooy","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-842oe","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-9e2cw","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(excluding:)-dj2m","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(by:)-6y4vy","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(by:)-9xwsn","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2qqxr","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-6irkv","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-3wf0c","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-5usl0","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-6jrbu","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sum()-7ns7o","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-3b220","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4j19m","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4qbpr","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-54lx4","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/contiguousbytes-implementations","title":"ContiguousBytes Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basearray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/basearray\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/==(_:_:)","title":"static func == (BaseArray<Element>, BaseArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-4tdkh","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-iwx6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/==(_:_:)","title":"static func == (BaseArray<Element>, BaseArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-4tdkh","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:)-iwx6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)-29noc","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)-9l5qb","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5cizi","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5zl6","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/swapat(_:_:)-4e361","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousmutablestorageifavailable(_:)-5jpqk","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4gooi","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-7v15k","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-8wth7","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-9bp39","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)-29noc","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/partition(by:)-9l5qb","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5cizi","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sort(using:)-5zl6","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/swapat(_:_:)-4e361","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousmutablestorageifavailable(_:)-5jpqk","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-4gooi","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-7v15k","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-8wth7","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(_:)-9bp39","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-134yy","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-2wthz","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-6okbw","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(_:)-3hsj2","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(repeating:count:)-92u3d","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(_:)-5bit3","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(contentsof:)-7qh55","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:after:)-67ov8","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:after:)-95vxj","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:at:)-6s2nf","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:before:)-1030m","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:before:)-8ml1a","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(contentsof:at:)-2mw3c","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-3bjo8","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-ds27","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-50lpq","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-74uuc","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-8mxfi","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-mcsf","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-5zb5v","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-9ewty","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-3k6nx","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-4kaqm","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-6ovv2","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)-4fjw4","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)-5t0hi","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(keepingcapacity:)-6gxr9","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)-38xb9","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)-8dyum","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst()-4q8rl","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst(_:)-5f363","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast()-7h16k","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast(_:)-9fiaq","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)-4jq9x","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)-8ihf1","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-3ak8l","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-5utpq","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-5tdyl","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-8ij9r","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)-3lsc2","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)-3q1l1","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reservecapacity(_:)-4fu18","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-134yy","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-2wthz","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+(_:_:)-6okbw","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/basearray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(_:)-3hsj2","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basearray\/init(repeating:count:)-92u3d","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(_:)-5bit3","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/append(contentsof:)-7qh55","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:after:)-67ov8","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:after:)-95vxj","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:at:)-6s2nf","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:before:)-1030m","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(_:before:)-8ml1a","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/insert(contentsof:at:)-2mw3c","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-3bjo8","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:after:)-ds27","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-50lpq","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:before:)-74uuc","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-8mxfi","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(_:to:)-mcsf","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-5zb5v","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/move(from:to:)-9ewty","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-3k6nx","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-4kaqm","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(_:)-6ovv2","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)-4fjw4","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(at:)-5t0hi","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(keepingcapacity:)-6gxr9","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)-38xb9","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removeall(where:)-8dyum","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst()-4q8rl","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removefirst(_:)-5f363","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast()-7h16k","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removelast(_:)-9fiaq","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)-4jq9x","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/removesubrange(_:)-8ihf1","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-3ak8l","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:)-5utpq","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-5tdyl","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replace(first:with:)-8ij9r","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)-3lsc2","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacesubrange(_:with:)-3q1l1","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reservecapacity(_:)-4fu18","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/basearray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-28vra","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-7teor","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-9ob8t","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-88vl0","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-89246","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-2ecui","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-kbz","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-6vw4a","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-9wqde","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-52zyz","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-6qfag","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(all:)-9todh","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(any:)-2w3tl","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-6tvjo","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-7cgrl","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-8pg1f","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4mszw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4o9hp","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-5e9aq","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-1sedl","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-42uht","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(from:to:)-2genz","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(from:to:)-7x06v","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(to:)-43so2","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(to:)-69ejy","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-46bey","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-6wtwv","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-1lalu","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-4yt8z","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(excluding:)-38xap","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-13cl7","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-1llh1","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-8oh86","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-2gh7h","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-63g41","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-79bmd","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-7hwzs","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-6iq85","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-8r4g4","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2b9ng","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-3tzir","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-733ky","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousstorageifavailable(_:)-3xuj7","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-28vra","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-7teor","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compactmap(_:)-9ob8t","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-88vl0","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentcompactmap(withpriority:_:)-89246","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-2ecui","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentflatmap(withpriority:_:)-kbz","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-6vw4a","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/concurrentmap(withpriority:_:)-9wqde","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-52zyz","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(_:)-6qfag","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(all:)-9todh","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(any:)-2w3tl","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-6tvjo","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-7cgrl","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/fill(using:)-8pg1f","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4mszw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-4o9hp","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/flatmap(_:)-5e9aq","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-1sedl","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(of:)-42uht","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(from:to:)-2genz","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(from:to:)-7x06v","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(to:)-43so2","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/interpolated(to:)-69ejy","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-46bey","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/joined(separator:)-6wtwv","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-1lalu","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/map(_:)-4yt8z","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/randomelement(excluding:)-38xap","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-13cl7","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-1llh1","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:)-8oh86","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-2gh7h","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-63g41","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-79bmd","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:_:)-7hwzs","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-6iq85","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sorted(using:)-8r4g4","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/split(separator:maxsplits:omittingemptysubsequences:)-2b9ng","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-3tzir","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/uniqued(by:)-733ky","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basearray\/withcontiguousstorageifavailable(_:)-3xuj7","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basearray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/basearray","title":"BaseArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(_:)-537pm","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(repeating:count:)-1ju7d","title":"init(repeating: Element, count: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsemptyselection","title":"var allowsEmptySelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsmultipleselection","title":"var allowsMultipleSelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allowsselection","title":"var allowsSelection: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indices","title":"var indices: Range<Int>","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectedelements","title":"var selectedElements: [Element]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectedindexes","title":"var selectedIndexes: [Int]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(_:)-9asf5","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(contentsof:)-4uu3w","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselect(at:)-2tmvm","title":"func deselect(at: [Int])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselect(at:)-5hz8j","title":"func deselect(at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectfirst()","title":"func deselectFirst()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectfirst(_:)","title":"func deselectFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectlast()","title":"func deselectLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/deselectlast(_:)","title":"func deselectLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(_:offsetby:limitedby:)","title":"func index(Int, offsetBy: Int, limitedBy: Int) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:at:)-7rh24","title":"func insert(Element, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(contentsof:at:)-42v4b","title":"func insert<S>(contentsOf: S, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/partition(by:)-9w2b1","title":"func partition(by: (Element) throws -> Bool) rethrows -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)-8l8k5","title":"func remove(at: Int) -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(keepingcapacity:)-5z4if","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)-696du","title":"func removeAll(where: (Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst()-9n4gm","title":"func removeFirst() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst(_:)-47qco","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast()-1m53g","title":"func removeLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast(_:)-4x1a","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)-1fei7","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacesubrange(_:with:)-7s7vx","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reservecapacity(_:)-extv","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(_:exclusivly:)","title":"func select(AdvanceOption, exclusivly: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:)-5745l","title":"func select(at: [Int])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:)-6hhnh","title":"func select(at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/select(at:exclusivly:)","title":"func select(at: Int, exclusivly: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectfirst()","title":"func selectFirst()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectfirst(_:)","title":"func selectFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectlast()","title":"func selectLast()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/selectlast(_:)","title":"func selectLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/set(contents:)","title":"func set(contents: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/swapat(_:_:)-78j4n","title":"func swapAt(Int, Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousmutablestorageifavailable(_:)-17be4","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Element>) throws -> R) rethrows -> R?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousstorageifavailable(_:)-4ocv7","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-5uta0","title":"subscript(Range<Int>) -> ArraySlice<Element>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-7c5c3","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-8ja7d","title":"subscript(ClosedRange<Int>) -> ArraySlice<Element>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstrange(of:)-980y6","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-378ql","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first","title":"var first: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-39iwa","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-3oiwv","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-6svt6","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-8glr8","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-1micp","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-7r1ut","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-8iqgd","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-1ompu","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(all:)-3hfx0","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(any:)-569sm","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstrange(of:)-6su07","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flattened()-3luya","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flattened()-6ba88","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/grouped(by:)-4t0c6","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/grouped(by:)-7c214","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(of:)-63o7x","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(of:)-65hym","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-5g9wv","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-2iil3","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-9mgj","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-13vpo","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(excluding:)-4m1ty","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(by:)-4pxnh","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(by:)-8r7u4","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-2ayog","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-7u7ks","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-3gpoe","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-6l4qe","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-6y8jm","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-siyp","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-3iu2h","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-5gvbw","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-9s80c","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-ttz7","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first","title":"var first: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-39iwa","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-3oiwv","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-6svt6","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/average()-8glr8","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-1micp","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-7r1ut","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(by:ascending:)-8iqgd","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-1ompu","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(all:)-3hfx0","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(any:)-569sm","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstrange(of:)-6su07","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flattened()-3luya","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flattened()-6ba88","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/grouped(by:)-4t0c6","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/grouped(by:)-7c214","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(of:)-63o7x","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/index(of:)-65hym","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-5g9wv","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-2iil3","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-9mgj","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-13vpo","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(excluding:)-4m1ty","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(by:)-4pxnh","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(by:)-8r7u4","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-2ayog","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-7u7ks","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-3gpoe","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-6l4qe","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-6y8jm","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sum()-siyp","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-3iu2h","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-5gvbw","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-9s80c","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-ttz7","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/contiguousbytes-implementations","title":"ContiguousBytes Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/==(_:_:)","title":"static func == (SelectableArray<Element>, SelectableArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:)-1htd5","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:)-7umk3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/==(_:_:)","title":"static func == (SelectableArray<Element>, SelectableArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:)-1htd5","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:)-7umk3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/partition(by:)-1p4ie","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/partition(by:)-429c3","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(using:)-3ktaf","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(using:)-8ym84","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/swapat(_:_:)-3s5ic","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousmutablestorageifavailable(_:)-5y2dv","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-1by0c","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-2ifn4","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-6nxh8","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-8oc5o","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/partition(by:)-1p4ie","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/partition(by:)-429c3","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(using:)-3ktaf","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sort(using:)-8ym84","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/swapat(_:_:)-3s5ic","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousmutablestorageifavailable(_:)-5y2dv","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-1by0c","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-2ifn4","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-6nxh8","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(_:)-8oc5o","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-2uye6","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-32xba","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-3f7e9","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(_:)-s37l","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(repeating:count:)-1ylq8","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(_:)-5v6zn","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(contentsof:)-84z6n","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:after:)-52xgt","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:after:)-7m100","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:at:)-a4xx","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:before:)-1d49a","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:before:)-51zbo","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(contentsof:at:)-496ma","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:after:)-3vkyr","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:after:)-5acyc","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:before:)-1jomn","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:before:)-6c4ko","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:to:)-19z0p","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:to:)-36cg1","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(from:to:)-5u158","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(from:to:)-r5ne","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-3ffd3","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-3mej6","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-442i9","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)-3crf2","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)-92066","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(keepingcapacity:)-669zh","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)-1jvua","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)-4bvk6","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst()-9v46t","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst(_:)-8cm63","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast()-8qq8v","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast(_:)-657zy","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)-1715b","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)-8bi2n","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:)-2qko6","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:)-7jakf","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(first:with:)-22yw9","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(first:with:)-p4wu","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacesubrange(_:with:)-1xtuk","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacesubrange(_:with:)-6fhn","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reservecapacity(_:)-5tu3n","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-2uye6","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-32xba","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+(_:_:)-3f7e9","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(_:)-s37l","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/init(repeating:count:)-1ylq8","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(_:)-5v6zn","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/append(contentsof:)-84z6n","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:after:)-52xgt","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:after:)-7m100","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:at:)-a4xx","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:before:)-1d49a","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(_:before:)-51zbo","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/insert(contentsof:at:)-496ma","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:after:)-3vkyr","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:after:)-5acyc","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:before:)-1jomn","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:before:)-6c4ko","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:to:)-19z0p","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(_:to:)-36cg1","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(from:to:)-5u158","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/move(from:to:)-r5ne","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-3ffd3","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-3mej6","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(_:)-442i9","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)-3crf2","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(at:)-92066","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(keepingcapacity:)-669zh","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)-1jvua","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removeall(where:)-4bvk6","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst()-9v46t","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removefirst(_:)-8cm63","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast()-8qq8v","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removelast(_:)-657zy","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)-1715b","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/removesubrange(_:)-8bi2n","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:)-2qko6","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:)-7jakf","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(first:with:)-22yw9","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replace(first:with:)-p4wu","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacesubrange(_:with:)-1xtuk","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacesubrange(_:with:)-6fhn","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reservecapacity(_:)-5tu3n","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-1jq9","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-572yg","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-la4a","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentcompactmap(withpriority:_:)-2pab9","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentcompactmap(withpriority:_:)-54cvk","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentflatmap(withpriority:_:)-474tx","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentflatmap(withpriority:_:)-4z1y0","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentmap(withpriority:_:)-3yk51","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentmap(withpriority:_:)-9xaad","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-7f83n","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-7zwk7","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(all:)-1gr6f","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(any:)-6lq9","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-6kk8e","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-9f1gk","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-kk0","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-4s7oc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-7hwk6","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-8fw37","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-68365","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-9cor7","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(from:to:)-3k3en","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(from:to:)-6570a","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(to:)-2gxtj","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(to:)-3zz4f","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-1ept6","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-4b1e6","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-3v21b","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-57j0u","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(excluding:)-6jfq5","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-2rpri","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-45b8d","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-6jp66","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-2tlt8","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-3ep7q","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-66s8q","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-8cj0s","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(using:)-570li","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(using:)-7ulp6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-3wlsa","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued(by:)-1fj2f","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued(by:)-3cxwh","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousstorageifavailable(_:)-6h08t","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-1jq9","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-572yg","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compactmap(_:)-la4a","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentcompactmap(withpriority:_:)-2pab9","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentcompactmap(withpriority:_:)-54cvk","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentflatmap(withpriority:_:)-474tx","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentflatmap(withpriority:_:)-4z1y0","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentmap(withpriority:_:)-3yk51","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/concurrentmap(withpriority:_:)-9xaad","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-7f83n","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(_:)-7zwk7","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(all:)-1gr6f","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(any:)-6lq9","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-6kk8e","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-9f1gk","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/fill(using:)-kk0","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-4s7oc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-7hwk6","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/flatmap(_:)-8fw37","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-68365","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(of:)-9cor7","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(from:to:)-3k3en","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(from:to:)-6570a","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(to:)-2gxtj","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/interpolated(to:)-3zz4f","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-1ept6","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/joined(separator:)-4b1e6","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-3v21b","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/map(_:)-57j0u","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/randomelement(excluding:)-6jfq5","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-2rpri","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-45b8d","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:)-6jp66","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-2tlt8","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-3ep7q","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-66s8q","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:_:)-8cj0s","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(using:)-570li","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sorted(using:)-7ulp6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-3wlsa","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued(by:)-1fj2f","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/uniqued(by:)-3cxwh","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/withcontiguousstorageifavailable(_:)-6h08t","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/selectablearray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/selectablearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/selectablearray","title":"SelectableArray","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+=(_:_:)-3w7jc","title":"static func += (inout SynchronizedArray, [Element])","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+=(_:_:)-6f0k4","title":"static func += (inout SynchronizedArray, Element)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(_:)-3j76a","title":"init([Element])","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first","title":"var first: Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/last","title":"var last: Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/synchronized","title":"var synchronized: [Element]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/allsatisfy(_:)","title":"func allSatisfy((Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/append(contentsof:)","title":"func append(contentsOf: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1h30b","title":"func compactMap<ElementOfResult>((Element) -> ElementOfResult?) -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-1xuw5","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(where:)","title":"func contains(where: (Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/edit(_:)","title":"func edit((inout [Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(_:)","title":"func filter((Element) -> Bool) -> SynchronizedArray","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(where:)","title":"func first(where: (Element) -> Bool) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/foreach(_:)","title":"func forEach((Element) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:)","title":"func index(Element) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(where:)","title":"func index(where: (Element) -> Bool) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/last(where:)","title":"func last(where: (Element) -> Bool) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-6enti","title":"func map<ElementOfResult>((Element) -> ElementOfResult) -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(_:_:)-4uyxa","title":"func reduce<ElementOfResult>(ElementOfResult, (ElementOfResult, Element) -> ElementOfResult) -> ElementOfResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(into:_:)-2c3eb","title":"func reduce<ElementOfResult>(into: ElementOfResult, (inout ElementOfResult, Element) -> ()) -> ElementOfResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(at:completion:)","title":"func remove(at: Int, completion: ((Element) -> Void)?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(where:completion:)","title":"func remove(where: (Element) -> Bool, completion: (([Element]) -> Void)?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(completion:)","title":"func removeAll(completion: (([Element]) -> Void)?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:)","title":"func sorted(by: (Element, Element) -> Bool) -> SynchronizedArray","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-6ahow","title":"subscript(ClosedRange<Int>) -> ArraySlice<Element>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstrange(of:)-6fim6","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(_:offsetby:limitedby:)","title":"func index(Int, offsetBy: Int, limitedBy: Int) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-3zjck","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-3gc0q","title":"subscript(Range<Int>) -> ArraySlice<Element>","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-4d2yw","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-6j4eu","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-6wick","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-8x01l","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-208cd","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3ergt","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3kr7a","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4sdi8","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(all:)-5337o","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(any:)-594ih","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstrange(of:)-7iqsx","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-3y6r","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-4guyb","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/grouped(by:)-24z0h","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/grouped(by:)-52wtc","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-1gciv","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-95nhe","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-4emyl","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-67kv7","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-6gtep","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-6n4fl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(excluding:)-6r5ks","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(by:)-2n409","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(by:)-9r1mb","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-1p32n","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-24ihr","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-6c3cj","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-7dij6","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-9bu5e","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-9hcr7","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-16ecc","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1ybzp","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-5uqaq","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-7eqcu","title":"subscript([Index]) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-4d2yw","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-6j4eu","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-6wick","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/average()-8x01l","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-208cd","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3ergt","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(by:ascending:)-3kr7a","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4sdi8","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(all:)-5337o","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(any:)-594ih","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstrange(of:)-7iqsx","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-3y6r","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flattened()-4guyb","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/grouped(by:)-24z0h","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/grouped(by:)-52wtc","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-1gciv","title":"func index(of: Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/index(of:)-95nhe","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-4emyl","title":"func indexes<S>(of: S) -> [Self.Index]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-67kv7","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-6gtep","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-6n4fl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(excluding:)-6r5ks","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(by:)-2n409","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(by:)-9r1mb","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-1p32n","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-24ihr","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-6c3cj","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-7dij6","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-9bu5e","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sum()-9hcr7","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-16ecc","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1ybzp","title":"subscript(IndexSet) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-5uqaq","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-7eqcu","title":"subscript([Index]) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/==(_:_:)","title":"static func == (SynchronizedArray<Element>, SynchronizedArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:)-2or8u","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:)-8bxdz","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/==(_:_:)","title":"static func == (SynchronizedArray<Element>, SynchronizedArray<Element>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:)-2or8u","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:)-8bxdz","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/partition(by:)-5jnru","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/partition(by:)-9asnq","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(using:)-2bmfz","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(using:)-3e04d","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1n122","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1tise","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-5l1kb","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-899la","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-pbqn","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/editeach(_:)","title":"func editEach((inout Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(fromoffsets:tooffset:)","title":"func move(fromOffsets: IndexSet, toOffset: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/partition(by:)-5jnru","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/partition(by:)-9asnq","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(using:)-2bmfz","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sort(using:)-3e04d","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1n122","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-1tise","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-5l1kb","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-899la","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(_:)-pbqn","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-2as8h","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-3s2sg","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-96vy5","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+=(_:_:)-29hgn","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(_:)-8tmgg","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/append(_:)","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:after:)-1fc60","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:after:)-skml","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:at:)","title":"func insert(Element, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:before:)-6qxjr","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:before:)-7qn6z","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(contentsof:at:)","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:after:)-1zruc","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:after:)-24pl4","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:before:)-3kg1q","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:before:)-3kwhl","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:to:)-220nk","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:to:)-89pmg","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(from:to:)-44h5a","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(from:to:)-4te51","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-29oy7","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-3743d","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-8sa6r","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(at:)-8e9gb","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(at:)-9crwp","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(where:)-3lwjg","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(where:)-58lps","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removesubrange(_:)-1rrga","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removesubrange(_:)-1ty89","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:)-2q05n","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:)-2sq1k","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(first:with:)-2rml2","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(first:with:)-6bdu7","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacesubrange(_:with:)","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-2as8h","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-3s2sg","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+(_:_:)-96vy5","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/+=(_:_:)-29hgn","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(_:)-8tmgg","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/append(_:)","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:after:)-1fc60","title":"func insert<C>(C, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:after:)-skml","title":"func insert(Element, after: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:at:)","title":"func insert(Element, at: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:before:)-6qxjr","title":"func insert(Element, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(_:before:)-7qn6z","title":"func insert<C>(C, before: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/insert(contentsof:at:)","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:after:)-1zruc","title":"func move(Element, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:after:)-24pl4","title":"func move<S>(S, after: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:before:)-3kg1q","title":"func move<S>(S, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:before:)-3kwhl","title":"func move(Element, before: Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:to:)-220nk","title":"func move<S>(S, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(_:to:)-89pmg","title":"func move(Element, to: Self.Indices.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(from:to:)-44h5a","title":"func move(from: Int, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/move(from:to:)-4te51","title":"func move(from: IndexSet, to: Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-29oy7","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-3743d","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(_:)-8sa6r","title":"func remove<S>(S) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(at:)-8e9gb","title":"func remove(at: IndexSet) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(at:)-9crwp","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/remove(atoffsets:)","title":"func remove(atOffsets: IndexSet)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(containing:)","title":"func removeAll<Value>(containing: KeyPath<Element, Value?>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(where:)-3lwjg","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removeall(where:)-58lps","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removesubrange(_:)-1rrga","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/removesubrange(_:)-1ty89","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:)-2q05n","title":"func replace(Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:)-2sq1k","title":"func replace<C>(Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(first:with:)-2rml2","title":"func replace<C>(first: Element, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replace(first:with:)-6bdu7","title":"func replace(first: Element, with: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacesubrange(_:with:)","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rotate(positions:)","title":"func rotate(positions: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rotated(positions:)","title":"func rotated(positions: Int) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1po10","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1z1ks","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-wzqt","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-47ipx","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-4xa7l","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-1yvox","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-6rso6","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-2qgjd","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-5avu6","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4takl","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-6cgqe","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(all:)-5mnks","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(any:)-c1lw","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5b586","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5vi9k","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-7oqxe","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-452on","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-7oern","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-9q8et","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-25ja0","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-32zqw","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(from:to:)-85usf","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(from:to:)-9mgzd","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(to:)-6nrhm","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(to:)-8l1y9","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-4b1vb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-8ro5q","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-47ryn","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-ydtz","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(excluding:)-9gl44","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(_:_:)-6loi6","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(into:_:)-66fon","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-1v3xi","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-2mzgo","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-5d93x","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-5jvew","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-3dj58","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-5ofsm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-7by6e","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-6k58z","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-odoq","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1po10","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-1z1ks","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compactmap(_:)-wzqt","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-47ipx","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentcompactmap(withpriority:_:)-4xa7l","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-1yvox","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentflatmap(withpriority:_:)-6rso6","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-2qgjd","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/concurrentmap(withpriority:_:)-5avu6","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-4takl","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(_:)-6cgqe","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(all:)-5mnks","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/contains(any:)-c1lw","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5b586","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-5vi9k","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/fill(using:)-7oqxe","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-452on","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-7oern","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/flatmap(_:)-9q8et","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-25ja0","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(of:)-32zqw","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(from:to:)-85usf","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(from:to:)-9mgzd","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(to:)-6nrhm","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/interpolated(to:)-8l1y9","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-4b1vb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/joined(separator:)-8ro5q","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-47ryn","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/map(_:)-ydtz","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/randomelement(excluding:)-9gl44","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(_:_:)-6loi6","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/reduce(into:_:)-66fon","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-1v3xi","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-2mzgo","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-5d93x","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:_:)-5jvew","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-3dj58","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sorted(using:)-5ofsm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/split(separator:maxsplits:omittingemptysubsequences:)-7by6e","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-6k58z","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/uniqued(by:)-odoq","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizedarray\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/synchronizedarray","title":"SynchronizedArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(_:uniquingkeyswith:)","title":"init<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(dict:)","title":"init(dict: [Key : Value])","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Value, Key)...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(grouping:by:)","title":"init<S>(grouping: S, by: (S.Element) throws -> Key) rethrows","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(minimumcapacity:)","title":"init(minimumCapacity: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/init(uniquekeyswithvalues:)","title":"init<S>(uniqueKeysWithValues: S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/first","title":"var first: SynchronizedDictionary.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/keys","title":"var keys: [Key]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/synchronized","title":"var synchronized: [Key : Value]","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/values","title":"var values: [Value]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/edit(_:)","title":"func edit((inout [Key : Value]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/filter(_:)","title":"func filter(((_ key: Key, _ value: Value) throws -> Bool)) rethrows -> [Key : Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/foreach(_:)","title":"func forEach(((key: Key, value: Value)) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(forkey:)","title":"func index(forKey: Key) -> Dictionary<Key, Value>.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/map(_:)","title":"func map(((_ key: Key, _ value: Value) throws -> Value)) rethrows -> [Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelement()","title":"func randomElement() -> SynchronizedDictionary.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelement(using:)-8sfm4","title":"func randomElement<T>(using: inout T) -> SynchronizedDictionary.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/removevalue(forkey:)","title":"func removeValue(forKey: Key)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-9frm8","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:default:)","title":"subscript(Key, default _: () -> Value) -> Value","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/element","title":"SynchronizedDictionary.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/endindex","title":"var endIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/startindex","title":"var startIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/grouped(by:)-4zbg4","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/grouped(by:)-95338","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(after:)","title":"func index(after: Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelement(using:)-754yh","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(by:)-25a74","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(by:)-6z0a","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-1hk8c","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-5mcr2","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-6dta9","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-8vc7y","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-9vwye","title":"subscript(Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/endindex","title":"var endIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/startindex","title":"var startIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/grouped(by:)-4zbg4","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/grouped(by:)-95338","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/index(after:)","title":"func index(after: Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelement(using:)-754yh","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(by:)-25a74","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(by:)-6z0a","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-1hk8c","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-5mcr2","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-6dta9","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-8vc7y","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(_:)-9vwye","title":"subscript(Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-2wy34","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-6d18e","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-9m9cu","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentcompactmap(withpriority:_:)-7nm65","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentcompactmap(withpriority:_:)-8gy9g","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentflatmap(withpriority:_:)-2gabq","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentflatmap(withpriority:_:)-6415v","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentmap(withpriority:_:)-8vb85","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentmap(withpriority:_:)-8wc9n","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/contains(_:)","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-346x4","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-45box","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-7hhvk","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-2lehl","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-3etzs","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-irkh","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-1tfqp","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-6a5cd","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-7ct7l","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-isrv","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(using:)-6dlbb","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(using:)-9q0tm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/uniqued(by:)-1cnch","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/uniqued(by:)-88px3","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-2wy34","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-6d18e","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compactmap(_:)-9m9cu","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentcompactmap(withpriority:_:)-7nm65","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentcompactmap(withpriority:_:)-8gy9g","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentflatmap(withpriority:_:)-2gabq","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentflatmap(withpriority:_:)-6415v","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentmap(withpriority:_:)-8vb85","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/concurrentmap(withpriority:_:)-8wc9n","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/contains(_:)","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-346x4","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-45box","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/flatmap(_:)-7hhvk","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-2lehl","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-3etzs","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:)-irkh","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-1tfqp","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-6a5cd","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-7ct7l","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:_:)-isrv","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(using:)-6dlbb","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sorted(using:)-9q0tm","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/uniqued(by:)-1cnch","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/uniqued(by:)-88px3","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/synchronizeddictionary","title":"SynchronizedDictionary","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/orderedset\/init(_:)","title":"init(some Sequence<Element>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/array","title":"var array: [Element]","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/set","title":"var set: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/append(_:)","title":"func append(Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/append(contentsof:)","title":"func append(contentsOf: some Sequence<Element>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formintersection(_:)","title":"func formIntersection(some Sequence<Element>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/insert(_:at:)","title":"func insert(Element, at: Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/intersection(_:)","title":"func intersection(some Sequence<Element>) -> OrderedSet<Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/remove(_:)","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/remove(at:)","title":"func remove(at: Index) -> Element","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(_:)","title":"subscript(Index) -> Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/index","title":"OrderedSet.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstrange(of:)-9lexf","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-9x8fl","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/fzswiftutils\/orderedset\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-1f0qe","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-2zuhf","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-3a19c","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-70x2k","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-14tp5","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-2q2jv","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-3nd0u","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(all:)-ttef","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(any:)-fr6k","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstrange(of:)-3s1g7","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flattened()-7gg45","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flattened()-8j8hr","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/grouped(by:)-4etxx","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/grouped(by:)-7fcec","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-2fo7y","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-7v3pj","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-9foer","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(by:)-5epw4","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(by:)-8bq3e","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-1k021","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-2kj99","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-7a2eb","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-yuf1","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-2fkhe","title":"subscript(safe _: ClosedRange<Int>) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-2pwqc","title":"subscript(safe _: Index) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-7d7vz","title":"subscript(safe _: Range<Index>) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/orderedset\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/advance(by:current:excluding:)","title":"func advance(by: AdvanceOption, current: Element?, excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/advanceindex(by:current:excluding:)","title":"func advanceIndex(by: AdvanceOption, current: Element?, excluding: [Element]) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-1f0qe","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-2zuhf","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-3a19c","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/average()-70x2k","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(amount:)","title":"func chunked(amount: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-14tp5","title":"func chunked<C>(by: KeyPath<Element, C>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-2q2jv","title":"func chunked<C>(by: KeyPath<Element, C?>, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(by:ascending:)-3nd0u","title":"func chunked<C>(by: (Element) -> C?, ascending: Bool) -> [(C, [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/chunked(size:)","title":"func chunked(size: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(all:)-ttef","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(any:)-fr6k","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstrange(of:)-3s1g7","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flattened()-7gg45","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flattened()-8j8hr","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/grouped(by:)-4etxx","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/grouped(by:)-7fcec","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-2fo7y","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-7v3pj","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-9foer","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(by:)-5epw4","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(by:)-8bq3e","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-1k021","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-2kj99","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-7a2eb","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sum()-yuf1","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-2fkhe","title":"subscript(safe _: ClosedRange<Int>) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-2pwqc","title":"subscript(safe _: Index) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(safe:)-7d7vz","title":"subscript(safe _: Range<Index>) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/orderedset\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/fzswiftutils\/orderedset\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-6lgrn","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-8ph3t","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-9eti8","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentcompactmap(withpriority:_:)-47747","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentcompactmap(withpriority:_:)-4s71r","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentflatmap(withpriority:_:)-4e3fh","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentflatmap(withpriority:_:)-9kp","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentmap(withpriority:_:)-71o8o","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentmap(withpriority:_:)-7jhud","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(all:)-8463k","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(any:)-3v5za","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-40vz2","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-53kmd","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-8cer6","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-2mz37","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-4435i","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-9gebg","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(from:to:)-3go5r","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(from:to:)-4vq1k","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(to:)-2d48w","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(to:)-4wnxy","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-1gkpp","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-47igd","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-3vep4","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-7uv00","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-8r3n8","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-dla0","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-n417","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-29e5e","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-3z11f","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-72k3g","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-86mnw","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(using:)-4nwaa","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(using:)-7yr30","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued(by:)-5qeql","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued(by:)-9rxit","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/orderedset\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/orderedset\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-6lgrn","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-8ph3t","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compactmap(_:)-9eti8","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentcompactmap(withpriority:_:)-47747","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentcompactmap(withpriority:_:)-4s71r","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentflatmap(withpriority:_:)-4e3fh","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentflatmap(withpriority:_:)-9kp","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentmap(withpriority:_:)-71o8o","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/concurrentmap(withpriority:_:)-7jhud","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(all:)-8463k","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(any:)-3v5za","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-40vz2","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-53kmd","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/fill(using:)-8cer6","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-2mz37","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-4435i","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/flatmap(_:)-9gebg","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(from:to:)-3go5r","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(from:to:)-4vq1k","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(to:)-2d48w","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/interpolated(to:)-4wnxy","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-1gkpp","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/joined(separator:)-47igd","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-3vep4","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/map(_:)-7uv00","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-8r3n8","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-dla0","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:)-n417","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-29e5e","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-3z11f","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-72k3g","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:_:)-86mnw","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(using:)-4nwaa","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sorted(using:)-7yr30","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued(by:)-5qeql","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/uniqued(by:)-9rxit","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/orderedset\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/orderedset\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/orderedset\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/orderedset","title":"OrderedSet","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/ascending(_:)-7otqn","title":"static func ascending([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/ascending(_:)-9c08r","title":"static func ascending(PartialKeyPath<Root>...) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/descending(_:)-1f1r7","title":"static func descending([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsortingkeypath\/descending(_:)-53ow3","title":"static func descending(PartialKeyPath<Root>...) -> PartialSortingKeyPath<Root>","type":"method"}],"path":"\/documentation\/fzswiftutils\/partialsortingkeypath","title":"PartialSortingKeyPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/init(_:separator:allowemptyslices:)","title":"init(Base, separator: Base.Element, allowEmptySlices: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/allowemptyslices","title":"let allowEmptySlices: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/remaining","title":"var remaining: Base.SubSequence?","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/separator","title":"let separator: Base.Element","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/next()","title":"func next() -> Base.SubSequence?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elements","title":"var elements: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazy","title":"var lazy: Self.Elements","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-4k1cp","title":"func compactMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/drop(while:)","title":"func drop(while: (Self.Elements.Element) -> Bool) -> LazyDropWhileSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(_:)","title":"func filter((Self.Elements.Element) -> Bool) -> LazyFilterSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-3fu61","title":"func flatMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-5jcvl","title":"func flatMap<SegmentOfResult>((Self.Elements.Element) -> SegmentOfResult) -> LazySequence<FlattenSequence<LazyMapSequence<Self.Elements, SegmentOfResult>>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined()","title":"func joined() -> LazySequence<FlattenSequence<Self.Elements>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-2lbf4","title":"func map<U>((Self.Element) -> U) -> LazyMapSequence<Self.Elements, U>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/prefix(while:)","title":"func prefix(while: (Self.Elements.Element) -> Bool) -> LazyPrefixWhileSequence<Self.Elements>","type":"method"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-43f32","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-73twm","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-jazp","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-3b234","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-727qg","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-6cnyn","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-7gjnh","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-egue","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-fllb","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-3inng","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-8jyvt","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-2qg63","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-7c9z0","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-9ajih","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4ezqd","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4pmju","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-7nr0q","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(of:)-24e8k","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(of:)-8pqns","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(from:to:)-42f4b","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(from:to:)-7qx0u","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(to:)-757n0","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(to:)-97kjt","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-4flv","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-ecq8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-2tzot","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-8bk39","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-2n9kt","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-5dxcu","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-5ucc0","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-14ax9","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-2cchx","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-6j4mh","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-gu2b","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-1l080","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-9c6wu","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-3b0mf","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-45vxr","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-43f32","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-73twm","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compactmap(_:)-jazp","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-3b234","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentcompactmap(withpriority:_:)-727qg","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-6cnyn","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentflatmap(withpriority:_:)-7gjnh","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-egue","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/concurrentmap(withpriority:_:)-fllb","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-3inng","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(_:)-8jyvt","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-2qg63","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-7c9z0","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/fill(using:)-9ajih","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4ezqd","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-4pmju","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/flatmap(_:)-7nr0q","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(of:)-24e8k","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(of:)-8pqns","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(from:to:)-42f4b","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(from:to:)-7qx0u","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(to:)-757n0","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/interpolated(to:)-97kjt","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-4flv","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/joined(separator:)-ecq8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-2tzot","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/map(_:)-8bk39","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-2n9kt","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-5dxcu","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:)-5ucc0","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-14ax9","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-2cchx","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-6j4mh","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:_:)-gu2b","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-1l080","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sorted(using:)-9c6wu","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-3b0mf","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/uniqued(by:)-45vxr","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/lazysplitsequence","title":"LazySplitSequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/init(_:separator:)","title":"init(() -> Base?, separator: Base.Element)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/next()","title":"func next() -> Base.SubSequence?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elements","title":"var elements: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazy","title":"var lazy: Self.Elements","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-608h0","title":"func compactMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/drop(while:)","title":"func drop(while: (Self.Elements.Element) -> Bool) -> LazyDropWhileSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(_:)","title":"func filter((Self.Elements.Element) -> Bool) -> LazyFilterSequence<Self.Elements>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-4o667","title":"func flatMap<SegmentOfResult>((Self.Elements.Element) -> SegmentOfResult) -> LazySequence<FlattenSequence<LazyMapSequence<Self.Elements, SegmentOfResult>>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-9149f","title":"func flatMap<ElementOfResult>((Self.Elements.Element) -> ElementOfResult?) -> LazyMapSequence<LazyFilterSequence<LazyMapSequence<Self.Elements, ElementOfResult?>>, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined()","title":"func joined() -> LazySequence<FlattenSequence<Self.Elements>>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-58rnd","title":"func map<U>((Self.Element) -> U) -> LazyMapSequence<Self.Elements, U>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/prefix(while:)","title":"func prefix(while: (Self.Elements.Element) -> Bool) -> LazyPrefixWhileSequence<Self.Elements>","type":"method"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lazysequenceprotocol-implementations","title":"LazySequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-4dpth","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9cekf","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9juoh","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-40ioq","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-49k0m","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-6xzro","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-zg2q","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-12sb0","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-1x09b","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-9aqrd","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-o03n","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-2wia3","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-7ming","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-98q9n","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-24dvh","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-3o3hs","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-4jnrk","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(of:)-6h8yk","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(of:)-99zo9","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(from:to:)-2iqjo","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(from:to:)-95fxa","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(to:)-3ooat","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(to:)-4wz10","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-594tb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-p074","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-3nt7v","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-9m84w","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-53ijt","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-7bkmk","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-jjh0","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-4jkqw","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-6nutf","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-8l2za","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-9gbzp","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-1wifl","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-8qmtc","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-4mvft","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-5c645","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-4dpth","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9cekf","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compactmap(_:)-9juoh","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-40ioq","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentcompactmap(withpriority:_:)-49k0m","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-6xzro","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentflatmap(withpriority:_:)-zg2q","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-12sb0","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/concurrentmap(withpriority:_:)-1x09b","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-9aqrd","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(_:)-o03n","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-2wia3","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-7ming","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/fill(using:)-98q9n","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-24dvh","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-3o3hs","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/flatmap(_:)-4jnrk","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(of:)-6h8yk","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(of:)-99zo9","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(from:to:)-2iqjo","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(from:to:)-95fxa","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(to:)-3ooat","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/interpolated(to:)-4wz10","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-594tb","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/joined(separator:)-p074","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/makeiterator()","title":"func makeIterator() -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-3nt7v","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/map(_:)-9m84w","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-53ijt","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-7bkmk","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:)-jjh0","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-4jkqw","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-6nutf","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-8l2za","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:_:)-9gbzp","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-1wifl","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sorted(using:)-8qmtc","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-4mvft","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/uniqued(by:)-5c645","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/partialsourcelazysplitsequence","title":"PartialSourceLazySplitSequence","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/descending","title":"case descending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:)-5n2km","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:)-6wbmz","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/sequencesortorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:)-5n2km","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:)-6wbmz","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/sequencesortorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/sequencesortorder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/sequencesortorder\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/sequencesortorder","title":"SequenceSortOrder","type":"enum"},{"title":"Concurrency","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/operationqueue\/init(maxconcurrentoperationcount:)","title":"init(maxConcurrentOperationCount: Int)","type":"init"}],"path":"\/documentation\/fzswiftutils\/foundation\/operationqueue","title":"OperationQueue","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/error","title":"var error: Error?","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isasynchronous","title":"var isAsynchronous: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/iscancelled","title":"var isCancelled: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isexecuting","title":"var isExecuting: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/isready","title":"var isReady: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/onstatechange","title":"var onStateChange: ((State) -> Void)?","type":"property"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.property","title":"var state: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/resume()","title":"func resume()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/executing","title":"case executing","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/ready","title":"case ready","type":"case"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/waiting","title":"case waiting","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-9ou5i","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-x6zl","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-9ou5i","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:)-x6zl","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/asyncoperation\/state-swift.enum","title":"AsyncOperation.State","type":"enum"}],"path":"\/documentation\/fzswiftutils\/asyncoperation","title":"AsyncOperation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/init(closure:)","title":"init(closure: ((AsyncBlockOperation) -> ()))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/closure","title":"let closure: ((AsyncBlockOperation) -> ())","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/asyncblockoperation\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/fzswiftutils\/asyncblockoperation","title":"AsyncBlockOperation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/pausableoperations","title":"var pausableOperations: [(Pausable & Operation)]","type":"property"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/progress","title":"var progress: Progress","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/addoperation(_:)","title":"func addOperation(Operation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/addoperations(_:waituntilfinished:)","title":"func addOperations([Operation], waitUntilFinished: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/cancelalloperations()","title":"func cancelAllOperations()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausableoperationqueue\/resume()","title":"func resume()","type":"method"}],"path":"\/documentation\/fzswiftutils\/pausableoperationqueue","title":"PausableOperationQueue","type":"class"},{"title":"Decoding & Encoding","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/encodable\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/encodable\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/encodable\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/encodable","title":"Encodable","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsondecoder\/init(datedecodingstrategy:keydecodingstrategy:)","title":"init(dateDecodingStrategy: DateDecodingStrategy, keyDecodingStrategy: KeyDecodingStrategy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsondecoder\/decode(_:withjsonobject:options:)","title":"func decode<T>(T.Type, withJSONObject: Any, options: JSONSerialization.WritingOptions) throws -> T","type":"method"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsondecoder\/datedecodingstrategy\/formatted(_:)","title":"static func formatted(String) -> JSONDecoder.DateDecodingStrategy","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/jsondecoder\/datedecodingstrategy","title":"JSONDecoder.DateDecodingStrategy","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation\/jsondecoder","title":"JSONDecoder","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsonencoder\/init(dateencodingstrategy:outputformatting:keyencodingstrategy:)","title":"init(dateEncodingStrategy: DateEncodingStrategy, outputFormatting: OutputFormatting, keyEncodingStrategy: KeyEncodingStrategy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsonencoder\/encodejsonobject(_:options:)","title":"func encodeJSONObject<T>(T, options: JSONSerialization.ReadingOptions) throws -> Any","type":"method"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/jsonencoder\/dateencodingstrategy\/formatted(_:)","title":"static func formatted(String) -> JSONEncoder.DateEncodingStrategy","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/jsonencoder\/dateencodingstrategy","title":"JSONEncoder.DateEncodingStrategy","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation\/jsonencoder","title":"JSONEncoder","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/unkeyeddecodingcontainer\/skip()","title":"func skip() throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/unkeyeddecodingcontainer","title":"UnkeyedDecodingContainer","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-2o9dt","title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-52le3","title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/keyeddecodingcontainer","title":"KeyedDecodingContainer","type":"extension"},{"title":"Date & Time","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/nscalendar","title":"var nsCalendar: NSCalendar","type":"property"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/nsunit","title":"var nsUnit: NSCalendar.Unit?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/stringrepresentations","title":"var stringRepresentations: [String]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/timeinterval","title":"var timeInterval: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/randomnewcase","title":"var randomNewCase: Self?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/allcases","title":"static var allCases: [Calendar.Component]","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/randomnewcase","title":"var randomNewCase: Self?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/allcases","title":"static var allCases: [Calendar.Component]","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/calendar\/component","title":"Calendar.Component","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation\/calendar","title":"Calendar","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscalendar\/unit\/components","title":"var components: [Calendar.Component]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscalendar\/unit\/allcases","title":"static var allCases: NSCalendar.Unit","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscalendar\/unit","title":"NSCalendar.Unit","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscalendar","title":"NSCalendar","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/+(_:_:)","title":"static func + (`Self`, Component) -> Date","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/+=(_:_:)","title":"static func += (inout `Self`, Component)","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/-(_:_:)","title":"static func - (`Self`, Component) -> Date","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/-=(_:_:)","title":"static func -= (inout `Self`, Component)","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/==(_:_:)","title":"static func == (Date, ComparisonType) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/day","title":"var day: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/hour","title":"var hour: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/minute","title":"var minute: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/month","title":"var month: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/nanosecond","title":"var nanosecond: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/quarter","title":"var quarter: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/second","title":"var second: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/weekofmonth","title":"var weekOfMonth: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/weekofyear","title":"var weekOfYear: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/weekday","title":"var weekday: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/year","title":"var year: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/adding(_:to:)","title":"func adding(Int, to: Calendar.Component) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/end(of:)","title":"func end(of: Calendar.Component) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/isbetween(_:)","title":"func isBetween(DateInterval) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/isbetween(_:_:)","title":"func isBetween(Date, Date) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/isincurrent(_:)","title":"func isInCurrent(Calendar.Component) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/issame(_:to:in:)","title":"func isSame(Calendar.Component, to: Date, in: Calendar) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/setvalue(_:for:)","title":"func setValue(Int, for: Calendar.Component)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/start(of:)","title":"func start(of: Calendar.Component) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/timedurationsince(_:)","title":"func timeDurationSince(Date) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/value(for:)","title":"func value(for: Calendar.Component) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/last(_:_:)","title":"case last(Int, Calendar.Component)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/next(_:)","title":"case next(Calendar.Component)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/now","title":"case now","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/previous(_:)","title":"case previous(Calendar.Component)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/sameday(_:)","title":"case sameDay(Date)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/this(_:)","title":"case this(Calendar.Component)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/today","title":"case today","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/tomorrow","title":"case tomorrow","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype\/yesterday","title":"case yesterday","type":"case"}],"path":"\/documentation\/fzswiftutils\/foundation\/date\/comparisontype","title":"Date.ComparisonType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/day(_:)","title":"case day(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/hour(_:)","title":"case hour(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/minute(_:)","title":"case minute(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/month(_:)","title":"case month(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/nanosecond(_:)","title":"case nanosecond(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/quarter(_:)","title":"case quarter(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/second(_:)","title":"case second(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/week(_:)","title":"case week(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/date\/component\/year(_:)","title":"case year(Int)","type":"case"}],"path":"\/documentation\/fzswiftutils\/foundation\/date\/component","title":"Date.Component","type":"enum"}],"path":"\/documentation\/fzswiftutils\/foundation\/date","title":"Date","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/dateinterval\/init(start:duration:)","title":"init(start: Date, duration: TimeDuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/dateinterval\/timeduration","title":"var timeDuration: TimeDuration","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/dateinterval","title":"DateInterval","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/dateformatter\/init(_:)","title":"init(String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/dateformatter\/iso8601","title":"static var iso8601: DateFormatter","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/dateformatter\/zulu","title":"static var zulu: DateFormatter","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/dateformatter","title":"DateFormatter","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/datecomponentsformatter\/allowedcomponents","title":"var allowedComponents: [Calendar.Component]","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/datecomponentsformatter","title":"DateComponentsFormatter","type":"extension"},{"title":"Enums","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname-32ede","title":"var localizedName: String","type":"property"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname-8rr0z","title":"var localizedName: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/count-4x318","title":"static var count: Int","type":"property"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/count-7l7j8","title":"static var count: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/index(of:)-9fwjk","title":"static func index(of: Self) -> Int","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/index(of:)-37h3t","title":"static func index(of: Self) -> Int","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname(at:)-2dt63","title":"static func localizedName(at: Int) -> String","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/localizedname(at:)-4tbhh","title":"static func localizedName(at: Int) -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/displayableenum\/value(at:)-92md5","title":"static func value(at: Int) -> Self","type":"method"}],"title":"DisplayableEnum Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/displayableenum\/value(at:)-3k5gd","title":"static func value(at: Int) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/displayableenum","title":"DisplayableEnum","type":"protocol"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nserror\/posix(_:)","title":"static func posix(Int32) -> NSError","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nserror","title":"NSError","type":"extension"},{"title":"File & URL","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundlename","title":"var bundleName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundlenameexcludingextension","title":"var bundleNameExcludingExtension: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/contentsdirectoryurl","title":"var contentsDirectoryURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/executabledirectoryurl","title":"var executableDirectoryURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/infourl","title":"var infoURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/isapplicationbundle","title":"var isApplicationBundle: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/platform","title":"var platform: BundlePlatform","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/macos","title":"case macOS","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/macios","title":"case maciOS","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:)-4sxci","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:)-8ouqe","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:)-4sxci","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:)-8ouqe","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/bundle\/bundleplatform","title":"Bundle.BundlePlatform","type":"enum"}],"path":"\/documentation\/fzswiftutils\/foundation\/bundle","title":"Bundle","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectory(using:createifneeded:)","title":"func applicationSupportDirectory(using: ApplicationSupportDirectoryType, createIfNeeded: Bool) -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/createtemporarydirectory()","title":"func createTemporaryDirectory() throws -> URL","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/directoryexists(at:)","title":"func directoryExists(at: URL) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/directoryexists(atpath:)","title":"func directoryExists(atPath: String) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/fileexists(at:)","title":"func fileExists(at: URL) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/trashitem(at:)","title":"func trashItem(at: URL) throws -> URL","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/identifier","title":"case identifier","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/name","title":"case name","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:)-373mn","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:)-9n7q3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:)-373mn","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:)-9n7q3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/applicationsupportdirectorytype","title":"FileManager.ApplicationSupportDirectoryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/failedtomovetotrash","title":"case failedToMoveToTrash","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:)-441sg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:)-78dap","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:)-441sg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:)-78dap","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager\/errors","title":"FileManager.Errors","type":"enum"}],"path":"\/documentation\/fzswiftutils\/foundation\/filemanager","title":"FileManager","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsmetadataitem\/value(for:)","title":"func value<T>(for: String) -> T?","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsmetadataitem","title":"NSMetadataItem","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsmetadataquery\/values(of:forresultsat:)","title":"func values(of: [String], forResultsAt: Int) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsmetadataquery","title":"NSMetadataQuery","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/appkit\/nsrunningapplication\/bundle","title":"var bundle: ApplicationBundle?","type":"property"}],"path":"\/documentation\/fzswiftutils\/appkit\/nsrunningapplication","title":"NSRunningApplication","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/appkit\/nsworkspace\/applications(toopen:)-2kzhm","title":"func applications(toOpen: UTType) -> [ApplicationBundle]","type":"method"},{"path":"\/documentation\/fzswiftutils\/appkit\/nsworkspace\/applications(toopen:)-52fmx","title":"func applications(toOpen: String) -> [ApplicationBundle]","type":"method"},{"path":"\/documentation\/fzswiftutils\/appkit\/nsworkspace\/filedefinitions(for:)-20qxg","title":"func fileDefinitions(for: UTType) -> [FileTypeDefinition]","type":"method"},{"path":"\/documentation\/fzswiftutils\/appkit\/nsworkspace\/filedefinitions(for:)-7u2l","title":"func fileDefinitions(for: String) -> [FileTypeDefinition]","type":"method"}],"path":"\/documentation\/fzswiftutils\/appkit\/nsworkspace","title":"NSWorkspace","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/level","title":"var level: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/next()","title":"func next() -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/skipdescendants()","title":"func skipDescendants()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/element","title":"URL.DirectoryIterator.Element","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/options","title":"URL.DirectoryIterator.Options","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator\/predicate","title":"URL.DirectoryIterator.Predicate","type":"typealias"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryiterator","title":"URL.DirectoryIterator","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/__(_:_:)","title":"static func || (`Self`, `Self`) -> URL.FileEnumerationOption","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/conforming(to:)-15d0d","title":"static func conforming(to: UTType...) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/conforming(to:)-6rkeg","title":"static func conforming(to: [UTType]) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentaccessdate(after:)","title":"static func contentAccessDate(after: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentaccessdate(before:)","title":"static func contentAccessDate(before: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentaccessdate(between:)","title":"static func contentAccessDate(between: DateInterval) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentmodificationdate(after:)","title":"static func contentModificationDate(after: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentmodificationdate(before:)","title":"static func contentModificationDate(before: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contentmodificationdate(between:)","title":"static func contentModificationDate(between: DateInterval) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contenttype(_:)","title":"static func contentType(UTType) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contenttypes(_:)-2iulx","title":"static func contentTypes(UTType...) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/contenttypes(_:)-2zy5t","title":"static func contentTypes([UTType]) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/creationdate(after:)","title":"static func creationDate(after: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/creationdate(before:)","title":"static func creationDate(before: Date) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/creationdate(between:)","title":"static func creationDate(between: DateInterval) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/extension(_:)","title":"static func `extension`(String) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/extensions(_:)-2bj33","title":"static func extensions(String...) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/extensions(_:)-y6p3","title":"static func extensions([String]) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/filesize(isbetween:)","title":"static func fileSize(isBetween: ClosedRange<DataSize>) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/filesize(islargerorequalto:)","title":"static func fileSize(isLargerOrEqualTo: DataSize) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/filesize(islessorequalto:)","title":"static func fileSize(isLessOrEqualTo: DataSize) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/name(beginswith:)","title":"static func name(beginsWith: String) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/name(contains:)","title":"static func name(contains: String) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/name(endswith:)","title":"static func name(endsWith: String) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/type(_:)","title":"static func type(FileType) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/types(_:)-1cda0","title":"static func types(FileType...) -> URL.FileEnumerationOption","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption\/types(_:)-7cjgu","title":"static func types([FileType]) -> URL.FileEnumerationOption","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileenumerationoption","title":"URL.FileEnumerationOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/init(url:options:predicate:)","title":"init(url: URL, options: Options, predicate: Predicate)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/makeiterator()","title":"func makeIterator() -> DirectoryIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/options","title":"URL.URLSequence.Options","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/predicate","title":"URL.URLSequence.Predicate","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-36tqd","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-3qxth","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-67bxa","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentcompactmap(withpriority:_:)-2jkzi","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentcompactmap(withpriority:_:)-2qryi","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentflatmap(withpriority:_:)-6w7ob","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentflatmap(withpriority:_:)-781g8","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentmap(withpriority:_:)-3ez72","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentmap(withpriority:_:)-5htxu","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-3qwr2","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-5smp8","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-72kxb","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/map(_:)-50gmd","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/map(_:)-8zps0","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-1vowb","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-6kqgt","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-9qi59","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-1rqh7","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-5gbrb","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-7wmp0","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-x6iz","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(using:)-76olr","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(using:)-8tit6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued(by:)-6b0w3","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued(by:)-73qs6","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-36tqd","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-3qxth","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compactmap(_:)-67bxa","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentcompactmap(withpriority:_:)-2jkzi","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentcompactmap(withpriority:_:)-2qryi","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentflatmap(withpriority:_:)-6w7ob","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentflatmap(withpriority:_:)-781g8","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentmap(withpriority:_:)-3ez72","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/concurrentmap(withpriority:_:)-5htxu","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-3qwr2","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-5smp8","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/flatmap(_:)-72kxb","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/map(_:)-50gmd","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/map(_:)-8zps0","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-1vowb","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-6kqgt","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:)-9qi59","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-1rqh7","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-5gbrb","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-7wmp0","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:_:)-x6iz","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(using:)-76olr","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sorted(using:)-8tit6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued(by:)-6b0w3","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/uniqued(by:)-73qs6","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlsequence","title":"URL.URLSequence","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/contenttype","title":"var contentType: UTType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/contenttypeidentifier","title":"var contentTypeIdentifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/contenttypeidentifiertree","title":"var contentTypeIdentifierTree: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.property","title":"var extendedAttributes: ExtendedAttributes","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/fileexists","title":"var fileExists: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/filetype","title":"var fileType: FileType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isdirectory","title":"var isDirectory: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isfile","title":"var isFile: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isgif","title":"var isGIF: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isimage","title":"var isImage: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/ismultimedia","title":"var isMultimedia: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isreachable","title":"var isReachable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/isvideo","title":"var isVideo: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/parent","title":"var parent: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/queryitems","title":"var queryItems: [URLQueryItem]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/resources","title":"var resources: URLResources","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/droppedscheme()","title":"func droppedScheme() -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iterate(_:)","title":"func iterate(DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iterate(options:)","title":"func iterate(options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iterate(predicate:_:)","title":"func iterate(predicate: ((URL) -> Bool)?, DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iterate(predicate:options:)","title":"func iterate(predicate: ((URL) -> Bool)?, options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratedirectories(_:)","title":"func iterateDirectories(DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratedirectories(options:)","title":"func iterateDirectories(options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(_:)","title":"func iterateFiles(DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(by:_:)","title":"func iterateFiles(by: FileEnumerationOption, DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(by:options:)","title":"func iterateFiles(by: FileEnumerationOption, options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(contenttypes:_:)","title":"func iterateFiles(contentTypes: [UTType], DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(contenttypes:options:)","title":"func iterateFiles(contentTypes: [UTType], options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(extensions:options:)-6fsqi","title":"func iterateFiles(extensions: [String], options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(extensions:options:)-9uw4q","title":"func iterateFiles(extensions: [String], options: DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(options:)","title":"func iterateFiles(options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(types:_:)","title":"func iterateFiles(types: [FileType], DirectoryEnumerationOption...) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/iteratefiles(types:options:)","title":"func iterateFiles(types: [FileType], options: Set<DirectoryEnumerationOption>) -> URLSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/redirectedurl()-9yink","title":"func redirectedURL() async throws -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/redirectedurl()-ix9n","title":"func redirectedURL() throws -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/redirectedurl(complectionhandler:)","title":"func redirectedURL(complectionHandler: ((URL?, Error?) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/urlcomponents(resolvingagainstbase:)","title":"func urlComponents(resolvingAgainstBase: Bool) -> URLComponents?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/includehiddenfiles","title":"case includeHiddenFiles","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/includepackagedescendants","title":"case includePackageDescendants","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/includesubdirectorydescendants","title":"case includeSubdirectoryDescendants","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/maxdepth(_:)","title":"case maxDepth(Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:)-1qvj2","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:)-4qndb","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:)-1qvj2","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:)-4qndb","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/directoryenumerationoption","title":"URL.DirectoryEnumerationOption","type":"enum"}],"path":"\/documentation\/fzswiftutils\/foundation\/url","title":"URL","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlresponse\/extendedsuggestedfilename","title":"var extendedSuggestedFilename: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlresponse\/validator","title":"var validator: String?","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/urlresponse","title":"URLResponse","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/definitions","title":"var definitions: [FileTypeDefinition]","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/filetype","title":"var fileType: FileType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/filenameextensions","title":"var filenameExtensions: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/supportedapplicationurls","title":"var supportedApplicationURLs: [URL]","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/supportedapplications","title":"var supportedApplications: [ApplicationBundle]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/conforms(toany:)","title":"func conforms<S>(toAny: S) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/ac3","title":"static var ac3: UTType","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/mobile3gpp","title":"static var mobile3GPP: UTType","type":"property"},{"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype\/mobile3gpp2","title":"static var mobile3GPP2: UTType","type":"property"}],"path":"\/documentation\/fzswiftutils\/uniformtypeidentifiers\/uttype","title":"UTType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(path:)","title":"init?(path: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(runningapplication:)","title":"init?(runningApplication: NSRunningApplication)","type":"init"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/iconpath","title":"var iconPath: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/iconurl","title":"var iconURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/shortversion","title":"var shortVersion: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/supportedfileextensions","title":"var supportedFileExtensions: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/supportedfiletypes","title":"var supportedFileTypes: [FileTypeDefinition]","type":"property"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/version","title":"var version: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/open()","title":"func open()","type":"method"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/openfile(_:)","title":"func openFile(URL)","type":"method"},{"path":"\/documentation\/fzswiftutils\/applicationbundle\/openfiles(_:)","title":"func openFiles([URL])","type":"method"}],"path":"\/documentation\/fzswiftutils\/applicationbundle","title":"ApplicationBundle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/init(url:)","title":"init(url: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/deviceidentifier","title":"var deviceIdentifier: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/directoryfilescount","title":"var directoryFilesCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/fileextensionishidden","title":"var fileExtensionIsHidden: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/filegroupowneraccountname","title":"var fileGroupOwnerAccountName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/fileowneraccountname","title":"var fileOwnerAccountName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/fileposixpermissions","title":"var filePosixPermissions: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/fileprotection","title":"var fileProtection: FileProtectionType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/filesize","title":"var fileSize: DataSize","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/filesystemfilenumber","title":"var fileSystemFileNumber: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/filesystemnumber","title":"var fileSystemNumber: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/filetype","title":"var fileType: FileAttributeType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/groupowneraccountid","title":"var groupOwnerAccountID: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/hfscreatorcode","title":"var hfsCreatorCode: OSType","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/hfstypecode","title":"var hfsTypeCode: OSType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/isbusy","title":"var isBusy: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/isimmutable","title":"var isImmutable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/isreadonly","title":"var isReadOnly: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/modificationdate","title":"var modificationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/owneraccountid","title":"var ownerAccountID: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/systemfreenodes","title":"var systemFreeNodes: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/systemfreesize","title":"var systemFreeSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/systemnodes","title":"var systemNodes: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/systemsize","title":"var systemSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/url","title":"let url: URL","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/fileattributes\/subscript(_:)","title":"subscript<T>(FileAttributeKey) -> T?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/fileattributes","title":"FileAttributes","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/aliasfile","title":"case aliasFile","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/application","title":"case application","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/archive","title":"case archive","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/diskimage","title":"case diskImage","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/document","title":"case document","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/executable","title":"case executable","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/folder","title":"case folder","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/gif","title":"case gif","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/other(_:)","title":"case other(String)","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/pdf","title":"case pdf","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/presentation","title":"case presentation","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/symboliclink","title":"case symbolicLink","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/text","title":"case text","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/init(contenttype:)","title":"init?(contentType: UTType)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetype\/init(contenttypeidentifier:)","title":"init?(contentTypeIdentifier: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetype\/init(contenttypetree:)","title":"init?(contentTypeTree: [String])","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetype\/init(fileextension:)","title":"init?(fileExtension: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetype\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/commonextensions","title":"var commonExtensions: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/contenttype","title":"var contentType: UTType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/ismultimedia","title":"var isMultimedia: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/imagetypes","title":"static var imageTypes: [FileType]","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/multimediatypes","title":"static var multimediaTypes: [FileType]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/randomnewcase","title":"var randomNewCase: Self?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/allcases","title":"static let allCases: [FileType]","type":"property"}],"path":"\/documentation\/fzswiftutils\/filetype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetype\/randomnewcase","title":"var randomNewCase: Self?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/allcases","title":"static let allCases: [FileType]","type":"property"}],"path":"\/documentation\/fzswiftutils\/filetype\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/filetype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:)-3ey95","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:)-9v0dc","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:)-3ey95","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:)-9v0dc","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/filetype","title":"FileType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/application","title":"var application: ApplicationBundle?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/applicationurl","title":"var applicationURL: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/contenttypes","title":"var contentTypes: [UTType]","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/iconname","title":"var iconName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/role","title":"var role: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/applicationurl","title":"case applicationURL","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/contenttypeidentifiers","title":"case contentTypeIdentifiers","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/extensions","title":"case extensions","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/iconname","title":"case iconName","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/role","title":"case role","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-2fm9v","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-77vkd","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-2fm9v","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:)-77vkd","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/codingkeys","title":"FileTypeDefinition.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-6kd31","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-7mclk","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-6kd31","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:)-7mclk","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/filetypedefinition\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/filetypedefinition","title":"FileTypeDefinition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/init(_:)","title":"init(URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/allextendedattributes()","title":"func allExtendedAttributes() throws -> [Key : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/extendedattribute(for:)-17afk","title":"func extendedAttribute<T>(for: Key) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/extendedattribute(for:)-45iv9","title":"func extendedAttribute<T>(for: Key) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/hasextendedattribute(_:)","title":"func hasExtendedAttribute(Key) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/listextendedattributes()","title":"func listExtendedAttributes() throws -> [Key]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/removeextendedattribute(_:)","title":"func removeExtendedAttribute(Key) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/setextendedattribute(_:for:)-23wx5","title":"func setExtendedAttribute<T>(T?, for: Key) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/setextendedattribute(_:for:)-74s35","title":"func setExtendedAttribute<T>(T?, for: Key) throws","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/subscript(_:_:)","title":"subscript<T>(Key, T?) -> T?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class\/key","title":"URL.ExtendedAttributes.Key","type":"typealias"}],"path":"\/documentation\/fzswiftutils\/foundation\/url\/extendedattributes-swift.class","title":"URL.ExtendedAttributes","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/availablecapacity","title":"var availableCapacity: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isejectable","title":"var isEjectable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isreadonly","title":"var isReadOnly: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isremovable","title":"var isRemovable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/isrootfilesystem","title":"var isRootFileSystem: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/localizedname","title":"var localizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/resourcecount","title":"var resourceCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportsaccesspermissions","title":"var supportsAccessPermissions: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportsrenaming","title":"var supportsRenaming: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/supportssymboliclinks","title":"var supportsSymbolicLinks: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/totalcapacity","title":"var totalCapacity: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/url","title":"var url: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources\/uuid","title":"var uuid: String?","type":"property"}],"path":"\/documentation\/fzswiftutils\/urlresources\/volumeurlresources","title":"URLResources.VolumeURLResources","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/init(url:)","title":"init(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlresources\/addedtodirectorydate","title":"var addedToDirectoryDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/applicationisscriptable","title":"var applicationIsScriptable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/attributemodificationdate","title":"var attributeModificationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/canonicalpath","title":"var canonicalPath: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contentaccessdate","title":"var contentAccessDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contentmodificationdate","title":"var contentModificationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttype","title":"var contentType: UTType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttypeidentifier","title":"var contentTypeIdentifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/contenttypeidentifiertree","title":"var contentTypeIdentifierTree: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/creationdate","title":"var creationDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/customicon","title":"var customIcon: NSUIImage?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/documentidentifier","title":"var documentIdentifier: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/downloaddate","title":"var downloadDate: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/effectiveicon","title":"var effectiveIcon: NSUIImage?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileallocatedsize","title":"var fileAllocatedSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filecontentidentifier","title":"var fileContentIdentifier: Int64?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileprotection","title":"var fileProtection: URLFileProtection?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/fileresourcetype","title":"var fileResourceType: URLFileResourceType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filesecurity","title":"var fileSecurity: NSFileSecurity?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/filesize","title":"var fileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/generationidentifier","title":"var generationIdentifier: (NSCopying & NSSecureCoding & NSObjectProtocol)?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/hashiddenextension","title":"var hasHiddenExtension: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isaliasfile","title":"var isAliasFile: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isapplication","title":"var isApplication: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isdirectory","title":"var isDirectory: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isexcludedfrombackup","title":"var isExcludedFromBackup: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isexecutable","title":"var isExecutable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ishidden","title":"var isHidden: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ismounttrigger","title":"var isMountTrigger: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ispackage","title":"var isPackage: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ispurgeable","title":"var isPurgeable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isreadable","title":"var isReadable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isregularfile","title":"var isRegularFile: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issparse","title":"var isSparse: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issymboliclink","title":"var isSymbolicLink: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/issystemimmutable","title":"var isSystemImmutable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isubiquitousitem","title":"var isUbiquitousItem: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isuserimmutable","title":"var isUserImmutable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/isvolume","title":"var isVolume: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/iswritable","title":"var isWritable: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labelcolor","title":"var labelColor: NSUIColor?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labellocalizedname","title":"var labelLocalizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/labelnumber","title":"var labelNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/linkcount","title":"var linkCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/localizedname","title":"var localizedName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/localizedtypedescription","title":"var localizedTypeDescription: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/mayhaveextendedattributes","title":"var mayHaveExtendedAttributes: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/maysharefilecontent","title":"var mayShareFileContent: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/parentdirectory","title":"var parentDirectory: URL?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/preferredioblocksize","title":"var preferredIOBlockSize: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/quarantineproperties","title":"var quarantineProperties: [String : Any]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/supportedapplicationurls","title":"var supportedApplicationURLs: [URL]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/tags","title":"var tags: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/totalfileallocatedsize","title":"var totalFileAllocatedSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/totalfilesize","title":"var totalFileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemdownloadingstatus","title":"var ubiquitousItemDownloadingStatus: URLUbiquitousItemDownloadingStatus?","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemhasunresolvedconflicts","title":"var ubiquitousItemHasUnresolvedConflicts: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisdownloading","title":"var ubiquitousItemIsDownloading: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisuploaded","title":"var ubiquitousItemIsUploaded: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/ubiquitousitemisuploading","title":"var ubiquitousItemIsUploading: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/url","title":"var url: URL","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/volume","title":"var volume: VolumeURLResources","type":"property"},{"path":"\/documentation\/fzswiftutils\/urlresources\/wherefroms","title":"var whereFroms: [String]?","type":"property"}],"path":"\/documentation\/fzswiftutils\/urlresources","title":"URLResources","type":"class"},{"title":"Geometry","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*(_:_:)-3aqgq","title":"static func * (CGPoint, CGPoint) -> CGFloat","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*(_:_:)-3liel","title":"static func * (CGPoint, CGFloat) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*(_:_:)-7m6l2","title":"static func * (CGPoint, Double) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*(_:_:)-8zv56","title":"static func * (Double, CGPoint) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*(_:_:)-97ksc","title":"static func * (CGFloat, CGPoint) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*=(_:_:)-6fhzl","title":"static func *= (inout CGPoint, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/*=(_:_:)-bmlj","title":"static func *= (inout CGPoint, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+(_:_:)-2uooq","title":"static func + (CGPoint, CGPoint) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+(_:_:)-5rrem","title":"static func + (CGPoint, Double) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+(_:_:)-7qhvi","title":"static func + (CGPoint, CGFloat) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+=(_:_:)-1eqwl","title":"static func += (inout CGPoint, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+=(_:_:)-1ofzh","title":"static func += (inout CGPoint, CGPoint)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/+=(_:_:)-7bp19","title":"static func += (inout CGPoint, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-(_:_:)-9ut1b","title":"static func - (CGPoint, Double) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-(_:_:)-9wkqc","title":"static func - (CGPoint, CGPoint) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-(_:_:)-l9ev","title":"static func - (CGPoint, CGFloat) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-=(_:_:)-2ozsl","title":"static func -= (inout CGPoint, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-=(_:_:)-5o6ag","title":"static func -= (inout CGPoint, CGPoint)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/-=(_:_:)-8m6e","title":"static func -= (inout CGPoint, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/\/(_:_:)-1f1je","title":"static func \/ (CGPoint, CGFloat) -> CGPoint","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/\/(_:_:)-4py80","title":"static func \/ (CGPoint, Double) -> CGPoint","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/init(_:)","title":"init(CGFloat)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/init(_:_:)","title":"init(CGFloat, CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/nsvalue","title":"var nsValue: NSValue","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/scaledintegral","title":"var scaledIntegral: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/size","title":"var size: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/distance(to:)","title":"func distance(to: CGPoint) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/offset(by:)-72rlh","title":"func offset(by: CGPoint) -> CGPoint","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/offset(by:)-903l8","title":"func offset(by: CGFloat) -> CGPoint","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/offset(x:)","title":"func offset(x: CGFloat) -> CGPoint","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> CGPoint","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/offset(y:)","title":"func offset(y: CGFloat) -> CGPoint","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> CGPoint","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgpoint","title":"CGPoint","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/init(_:_:)","title":"init(CGPoint, CGSize)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/init(_:_:_:_:)","title":"init(CGFloat, CGFloat, CGFloat, CGFloat)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/init(aroundpoint:size:integralized:)","title":"init(aroundPoint: CGPoint, size: CGSize, integralized: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/init(size:)-25wbd","title":"init(size: CGFloat)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/init(size:)-4k6o0","title":"init(size: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/bottom","title":"var bottom: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/bottomcenter","title":"var bottomCenter: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/bottomleft","title":"var bottomLeft: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/bottomright","title":"var bottomRight: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/center","title":"var center: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/centerleft","title":"var centerLeft: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/centerright","title":"var centerRight: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/left","title":"var left: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/nsvalue","title":"var nsValue: NSValue","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/right","title":"var right: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaledintegral","title":"var scaledIntegral: CGRect","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/sizecentered","title":"var sizeCentered: CGSize","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/top","title":"var top: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/topcenter","title":"var topCenter: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/topleft","title":"var topLeft: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/topright","title":"var topRight: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/x","title":"var x: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/y","title":"var y: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expanded(_:edge:)","title":"func expanded(CGFloat, edge: ExpandEdge) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(byfactor:anchor:)","title":"func scaled(byFactor: CGFloat, anchor: CGPoint) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(byfactor:centered:)","title":"func scaled(byFactor: CGFloat, centered: Bool) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(to:anchor:)","title":"func scaled(to: CGSize, anchor: CGPoint) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(tofill:anchor:)","title":"func scaled(toFill: CGSize, anchor: CGPoint) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(tofit:anchor:)","title":"func scaled(toFit: CGSize, anchor: CGPoint) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(toheight:anchor:)","title":"func scaled(toHeight: CGFloat, anchor: CGPoint) -> CGRect","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/scaled(towidth:anchor:)","title":"func scaled(toWidth: CGFloat, anchor: CGPoint) -> CGRect","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/center","title":"case center","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/centerheight","title":"case centerHeight","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/centerwidth","title":"case centerWidth","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/maxxedge","title":"case maxXEdge","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/maxyedge","title":"case maxYEdge","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/minxedge","title":"case minXEdge","type":"case"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/minyedge","title":"case minYEdge","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:)-2a87u","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:)-904al","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:)-2a87u","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:)-904al","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/expandedge","title":"CGRect.ExpandEdge","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgrect","title":"CGRect","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/*(_:_:)-3iuhi","title":"static func * (CGSize, CGFloat) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/*(_:_:)-62zga","title":"static func * (CGSize, Double) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/*=(_:_:)-2chm1","title":"static func *= (inout CGSize, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/*=(_:_:)-9fxp7","title":"static func *= (inout CGSize, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+(_:_:)-1xury","title":"static func + (CGSize, CGFloat) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+(_:_:)-46pv","title":"static func + (CGSize, Double) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+(_:_:)-xhpv","title":"static func + (CGSize, CGSize) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+=(_:_:)-1xcnm","title":"static func += (inout CGSize, CGSize)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+=(_:_:)-72kh6","title":"static func += (inout CGSize, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/+=(_:_:)-7iih4","title":"static func += (inout CGSize, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-(_:_:)-1vaty","title":"static func - (CGSize, Double) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-(_:_:)-4yw7b","title":"static func - (CGSize, CGSize) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-(_:_:)-6e90c","title":"static func - (CGSize, CGFloat) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-=(_:_:)-2yq65","title":"static func -= (inout CGSize, CGFloat)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-=(_:_:)-3ojsd","title":"static func -= (inout CGSize, CGSize)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/-=(_:_:)-91wb7","title":"static func -= (inout CGSize, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/\/(_:_:)-2lgif","title":"static func \/ (CGSize, CGFloat) -> CGSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/\/(_:_:)-6xx2q","title":"static func \/ (CGSize, Double) -> CGSize","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/init(_:)","title":"init(CGFloat)","type":"init"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/init(_:_:)","title":"init(CGFloat, CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/aspectratio","title":"var aspectRatio: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/nsvalue","title":"var nsValue: NSValue","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/point","title":"var point: CGPoint","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaledintegral","title":"var scaledIntegral: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaled(byfactor:)","title":"func scaled(byFactor: CGFloat) -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaled(tofill:)","title":"func scaled(toFill: CGSize) -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaled(tofit:)","title":"func scaled(toFit: CGSize) -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaled(toheight:)","title":"func scaled(toHeight: CGFloat) -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/scaled(towidth:)","title":"func scaled(toWidth: CGFloat) -> CGSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:)-463ng","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:)-5a4zg","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-2j7er","title":"static func < (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-5qake","title":"static func > (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-7rm3o","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-90wxi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-99ndf","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-1i2gs","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-53erd","title":"static func <= (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-76g","title":"static func >= (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-8ill4","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-1afdh","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-7e07j","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-x7bv","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-4j6do","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-5t56s","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-85pmp","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/isbetween(_:)-9ii0l","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/isbetween(_:)-g2ej","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthan(_:)-33ozy","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthan(_:)-6qb10","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthanorequal(_:)-1uppr","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthanorequal(_:)-3w11m","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:)-463ng","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:)-5a4zg","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-2j7er","title":"static func < (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-5qake","title":"static func > (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-7rm3o","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-90wxi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_(_:_:)-99ndf","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-1i2gs","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-53erd","title":"static func <= (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-76g","title":"static func >= (CGSize, CGSize) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/_=(_:_:)-8ill4","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-1afdh","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-7e07j","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamp(to:)-x7bv","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-4j6do","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-5t56s","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/clamped(to:)-85pmp","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/isbetween(_:)-9ii0l","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/isbetween(_:)-g2ej","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthan(_:)-33ozy","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthan(_:)-6qb10","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthanorequal(_:)-1uppr","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/islessthanorequal(_:)-3w11m","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgsize","title":"CGSize","type":"extension"},{"title":"Hash","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/cryptokit\/hashfunction\/hash(string:)","title":"static func hash(string: String) -> Digest?","type":"method"}],"path":"\/documentation\/fzswiftutils\/cryptokit\/hashfunction","title":"HashFunction","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(path:)","title":"init(path: String) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/oshash\/init(url:)","title":"init(url: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/oshash\/bytecount","title":"static let byteCount: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/invalidfile","title":"case invalidFile","type":"case"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/tosmall","title":"case toSmall","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-5dfco","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-7wifm","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-5dfco","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:)-7wifm","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/oshash\/errors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/oshash\/errors","title":"OSHash.Errors","type":"enum"}],"path":"\/documentation\/fzswiftutils\/oshash","title":"OSHash","type":"struct"},{"title":"Media","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/days","title":"var days: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/fps","title":"var fps: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/frame","title":"var frame: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/hours","title":"var hours: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/minutes","title":"var minutes: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/rootdays","title":"var rootDays: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/roothours","title":"var rootHours: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/rootminutes","title":"var rootMinutes: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/rootseconds","title":"var rootSeconds: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/roottotalseconds","title":"var rootTotalSeconds: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/seconds","title":"var seconds: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/timeinterval","title":"var timeInterval: TimeInterval","type":"property"},{"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp\/totalseconds","title":"var totalSeconds: TimeInterval","type":"property"}],"path":"\/documentation\/fzswiftutils\/corevideo\/cvtimestamp","title":"CVTimeStamp","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/init(source:type:thumbnailoptions:imageoptions:loop:)","title":"init(source: ImageSource, type: ImageType, thumbnailOptions: ThumbnailOptions?, imageOptions: ImageOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/currentframe","title":"var currentFrame: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/next()","title":"func next() async -> CGImage?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/image(source:options:loop:)","title":"static func image(source: ImageSource, options: ImageOptions?, loop: Bool) -> ImageIterator","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/thumbnail(source:options:loop:)","title":"static func thumbnail(source: ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageIterator","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-13u6n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-9ynsg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-13u6n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:)-9ynsg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator\/imagetype","title":"ImageSource.ImageIterator.ImageType","type":"enum"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageiterator","title":"ImageSource.ImageIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shouldallowfloat","title":"var shouldAllowFloat: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shouldcache","title":"var shouldCache: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/shoulddecodeimmediately","title":"var shouldDecodeImmediately: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.property","title":"var subsampleFactor: SubsampleFactor?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shouldallowfloat","title":"case shouldAllowFloat","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shouldcache","title":"case shouldCache","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/shoulddecodeimmediately","title":"case shouldDecodeImmediately","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/subsamplefactor","title":"case subsampleFactor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-18wci","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-3i8x3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-18wci","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:)-3i8x3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/codingkeys","title":"ImageSource.ImageOptions.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor2","title":"case factor2","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor4","title":"case factor4","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/factor8","title":"case factor8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-1vay4","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-2fyb0","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-1vay4","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:)-2fyb0","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/subsamplefactor-swift.enum","title":"ImageSource.ImageOptions.SubsampleFactor","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageoptions","title":"ImageSource.ImageOptions","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/aspectratioinfo","title":"var aspectRatioInfo: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/cameraserialnumber","title":"var cameraSerialNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/continuousdrive","title":"var continuousDrive: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/firmware","title":"var firmware: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/flashexposurecomp","title":"var flashExposureComp: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/imageserialnumber","title":"var imageSerialNumber: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/lensmodel","title":"var lensModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/maxaperture","title":"var maxAperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/minaperture","title":"var minAperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/ownername","title":"var ownerName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/uniquemodelid","title":"var uniqueModelID: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/whitebalance","title":"var whiteBalance: ImageSource.ImageProperties.EXIF.WhiteBalance?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/canon","title":"ImageSource.ImageProperties.Canon","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/bodyserialnumber","title":"var bodySerialNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/brightnessvalue","title":"var brightnessValue: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/cfapattern","title":"var cFAPattern: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/cameraownername","title":"var cameraOwnerName: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/componentsconfiguration","title":"var componentsConfiguration: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/compositeimage","title":"var compositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/compressedbitsperpixel","title":"var compressedBitsPerPixel: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/contrast","title":"var contrast: Contrast?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/customrendered","title":"var customRendered: CustomRendered?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/datetimedigitized","title":"var dateTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/datetimeoriginal","title":"var dateTimeOriginal: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/devicesettingdescription","title":"var deviceSettingDescription: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/digitalzoomratio","title":"var digitalZoomRatio: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/exposureindex","title":"var exposureIndex: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/exposuremode","title":"var exposureMode: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/exposureprogram","title":"var exposureProgram: ExposureProgram?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/exposuretime","title":"var exposureTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/filesource","title":"var fileSource: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/flash","title":"var flash: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/flashenergy","title":"var flashEnergy: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/flashpixversion","title":"var flashPixVersion: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/focallenin35mmfilm","title":"var focalLenIn35mmFilm: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/focalplaneresolutionunit","title":"var focalPlaneResolutionUnit: FocalPlaneResolutionUnit?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/focalplanexresolution","title":"var focalPlaneXResolution: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/focalplaneyresolution","title":"var focalPlaneYResolution: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/gaincontrol","title":"var gainControl: GainControl?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/gamma","title":"var gamma: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/isospeedlatitudeyyy","title":"var iSOSpeedLatitudeyyy: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/isospeedlatitudezzz","title":"var iSOSpeedLatitudezzz: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/imageuniqueid","title":"var imageUniqueID: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/lensserialnumber","title":"var lensSerialNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/lensspecification","title":"var lensSpecification: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/lightsource","title":"var lightSource: LightSource?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/makernote","title":"var makerNote: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/maxaperturevalue","title":"var maxApertureValue: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/meteringmode","title":"var meteringMode: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/oecf","title":"var oECF: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/offsettime","title":"var offsetTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/offsettimedigitized","title":"var offsetTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/offsettimeoriginal","title":"var offsetTimeOriginal: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/recommendedexposureindex","title":"var recommendedExposureIndex: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/relatedsoundfile","title":"var relatedSoundFile: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/saturation","title":"var saturation: Saturation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/scenecapturetype","title":"var sceneCaptureType: SceneCaptureType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/scenetype","title":"var sceneType: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/sensingmethod","title":"var sensingMethod: SensingMethod?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/sensitivitytype","title":"var sensitivityType: SensitivityType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/sharpness","title":"var sharpness: Sharpness?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/sourceexposuretimesofcompositeimage","title":"var sourceExposureTimesOfCompositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/sourceimagenumberofcompositeimage","title":"var sourceImageNumberOfCompositeImage: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/spatialfrequencyresponse","title":"var spatialFrequencyResponse: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/spectralsensitivity","title":"var spectralSensitivity: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/standardoutputsensitivity","title":"var standardOutputSensitivity: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subjectarea","title":"var subjectArea: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subjectdistrange","title":"var subjectDistRange: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subjectdistance","title":"var subjectDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subjectdistancerange","title":"var subjectDistanceRange: SubjectDistanceRange?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subjectlocation","title":"var subjectLocation: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subsectime","title":"var subsecTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subsectimedigitized","title":"var subsecTimeDigitized: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/subsectimeoriginal","title":"var subsecTimeOriginal: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/version","title":"var version: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended\/whitebalance","title":"var whiteBalance: Double?","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/extended","title":"ImageSource.ImageProperties.EXIF.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/aperture","title":"var aperture: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/colorspace","title":"var colorSpace: CGColorSpace?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/colorspacename","title":"var colorSpaceName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/datetimeoriginal","title":"var dateTimeOriginal: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposurecompensation","title":"var exposureCompensation: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/fnumber","title":"var fNumber: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focallength","title":"var focalLength: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focallength35mm","title":"var focalLength35mm: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/isscreenshot","title":"var isScreenshot: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/isospeed","title":"var isoSpeed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/isospeedratings","title":"var isoSpeedRatings: [Double]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lensmaker","title":"var lensMaker: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lensmodel","title":"var lensModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/shutterspeed","title":"var shutterSpeed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/usercomment","title":"var userComment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/xdimension","title":"var xDimension: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/ydimension","title":"var yDimension: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/hard","title":"case hard","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/soft","title":"case soft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-7lo1w","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-8g24j","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-7lo1w","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:)-8g24j","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/contrast","title":"ImageSource.ImageProperties.EXIF.Contrast","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/customprocess","title":"case customProcess","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/normalprocess","title":"case normalProcess","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-4gbpg","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-7zt3x","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-4gbpg","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:)-7zt3x","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/customrendered","title":"ImageSource.ImageProperties.EXIF.CustomRendered","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/actionprogram","title":"case actionProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/aperturepriority","title":"case aperturePriority","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/creativeprogram","title":"case creativeProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/landscapemode","title":"case landscapeMode","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/manual","title":"case manual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/normalprogram","title":"case normalProgram","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/notdefined","title":"case notDefined","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/portraitmode","title":"case portraitMode","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/shutterpriority","title":"case shutterPriority","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-5si85","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-75qhx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-5si85","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:)-75qhx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/exposureprogram","title":"ImageSource.ImageProperties.EXIF.ExposureProgram","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofired","title":"case autoFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofirednotreturned","title":"case autoFiredNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeye","title":"case autoFiredRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeyenotreturned","title":"case autoFiredRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofiredredeyereturned","title":"case autoFiredRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autofiredreturned","title":"case autoFiredReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autonotfired","title":"case autoNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/autonotfiredredeye","title":"case autoNotFiredRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/fired","title":"case fired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/firednotreturned","title":"case firedNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/firedredeye","title":"case firedRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/firedredeyenotreturned","title":"case firedRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/firedredeyereturned","title":"case firedRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/firedreturned","title":"case firedReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/noflash","title":"case noFlash","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/noflashfunction","title":"case noFlashFunction","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/offnoflashfunction","title":"case offNoFlashFunction","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/offnotfired","title":"case offNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/offnotfirednotreturned","title":"case offNotFiredNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/offredeye","title":"case offRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onfired","title":"case onFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onnotfired","title":"case onNotFired","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onnotreturned","title":"case onNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onredeye","title":"case onRedEye","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onredeyenotreturned","title":"case onRedEyeNotReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onredeyereturned","title":"case onRedEyeReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/onreturned","title":"case onReturned","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-70d89","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-9w70j","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-70d89","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:)-9w70j","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/flashmode","title":"ImageSource.ImageProperties.EXIF.FlashMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/centimeter","title":"case centimeter","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/inch","title":"case inch","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/noabsoluteunitofmeasurement","title":"case noAbsoluteUnitOfMeasurement","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-1pxkp","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-9jek2","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-1pxkp","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:)-9jek2","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/focalplaneresolutionunit","title":"ImageSource.ImageProperties.EXIF.FocalPlaneResolutionUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/highgaindown","title":"case highGainDown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/highgainup","title":"case highGainUp","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/lowgaindown","title":"case lowGainDown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/lowgainup","title":"case lowGainUp","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-34iy2","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-72twf","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-34iy2","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:)-72twf","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/gaincontrol","title":"ImageSource.ImageProperties.EXIF.GainControl","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/cloudyweather","title":"case cloudyWeather","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/coolwhitefluorescent","title":"case coolWhiteFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/d50","title":"case d50","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/d55","title":"case d55","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/d65","title":"case d65","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/d75","title":"case d75","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/daywhitefluorescent","title":"case dayWhiteFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/daylight","title":"case daylight","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/daylightfluorescent","title":"case daylightFluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/fineweather","title":"case fineWeather","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/flash","title":"case flash","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/fluorescent","title":"case fluorescent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isostudiotungsten","title":"case isoStudioTungsten","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/otherlightsource","title":"case otherLightSource","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/shade","title":"case shade","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/standardlighta","title":"case standardLightA","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/standardlightb","title":"case standardLightB","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/standardlightc","title":"case standardLightC","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/tungstenincandescentlight","title":"case tungstenIncandescentLight","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/whitefluorescent","title":"case whiteFluorescent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-3u6xf","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-4rsd3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-3u6xf","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:)-4rsd3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/lightsource","title":"ImageSource.ImageProperties.EXIF.LightSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/average","title":"case average","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/centerweightedaverage","title":"case centerWeightedAverage","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/multispot","title":"case multiSpot","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/other","title":"case other","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/pattern","title":"case pattern","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/spot","title":"case spot","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-4ky4b","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-4mge8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-4ky4b","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:)-4mge8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/meteringmode","title":"ImageSource.ImageProperties.EXIF.MeteringMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/highsaturation","title":"case highSaturation","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/lowsaturation","title":"case lowSaturation","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/normal","title":"case normal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-1cd11","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-1dtap","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-1cd11","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:)-1dtap","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/saturation","title":"ImageSource.ImageProperties.EXIF.Saturation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/landscape","title":"case landscape","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/nightscene","title":"case nightScene","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/portrait","title":"case portrait","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/standard","title":"case standard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-58y2d","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-zu3e","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-58y2d","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:)-zu3e","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/scenecapturetype","title":"ImageSource.ImageProperties.EXIF.SceneCaptureType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/colorsequentialareasensor","title":"case colorSequentialAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/colorsequentiallinearsensor","title":"case colorSequentialLinearSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/notdefined","title":"case notDefined","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/onechipcolorareasensor","title":"case oneChipColorAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/threechipcolorareasensor","title":"case threeChipColorAreaSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/trilinearsensor","title":"case trilinearSensor","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/twochipcolorareasensor","title":"case twoChipColorAreaSensor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-3864u","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-jn4x","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-3864u","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:)-jn4x","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensingmethod","title":"ImageSource.ImageProperties.EXIF.SensingMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isospeed","title":"case isoSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/recommendedexposureindex","title":"case recommendedExposureIndex","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/recommendedexposureindexandisospeed","title":"case recommendedExposureIndexAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivity","title":"case standardOutputSensitivity","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandisospeed","title":"case standardOutputSensitivityAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandrecommendedexposureindex","title":"case standardOutputSensitivityAndRecommendedExposureIndex","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/standardoutputsensitivityandrecommendedexposureindexandisospeed","title":"case standardOutputSensitivityAndRecommendedExposureIndexAndISOSpeed","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-13m5z","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-8cpfh","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-13m5z","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:)-8cpfh","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sensitivitytype","title":"ImageSource.ImageProperties.EXIF.SensitivityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/hard","title":"case hard","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/soft","title":"case soft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-206t3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-r3cm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-206t3","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:)-r3cm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/sharpness","title":"ImageSource.ImageProperties.EXIF.Sharpness","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/closeview","title":"case closeView","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/distantview","title":"case distantView","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/macro","title":"case macro","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-6bhj3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-8hc87","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-6bhj3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:)-8hc87","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/subjectdistancerange","title":"ImageSource.ImageProperties.EXIF.SubjectDistanceRange","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/manual","title":"case manual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-4pjpu","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-fv1t","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-4pjpu","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:)-fv1t","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/whitebalance","title":"ImageSource.ImageProperties.EXIF.WhiteBalance","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.struct","title":"ImageSource.ImageProperties.EXIF","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/hasglobalcolormap","title":"var hasGlobalColorMap: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.struct","title":"ImageSource.ImageProperties.GIF","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altitude","title":"var altitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.property","title":"var altitudeRef: AltitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/areainformation","title":"var areaInformation: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/coordinate","title":"var coordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/dop","title":"var dOP: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/datestamp","title":"var dateStamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destbearing","title":"var destBearing: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destbearingref","title":"var destBearingRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destdistance","title":"var destDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destdistanceref","title":"var destDistanceRef: DistanceRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destlatitude","title":"var destLatitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destlatituderef","title":"var destLatitudeRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destlongitude","title":"var destLongitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/destlongituderef","title":"var destLongitudeRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/differental","title":"var differental: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/hpositioningerror","title":"var hPositioningError: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/imgdirection","title":"var imgDirection: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/imgdirectionref","title":"var imgDirectionRef: DirectionRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latitude","title":"var latitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.property","title":"var latitudeRef: LatitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/location","title":"var location: CLLocation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longitude","title":"var longitude: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.property","title":"var longitudeRef: LongitudeRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/mapdatum","title":"var mapDatum: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.property","title":"var measureMode: MeasureMode?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/processingmethod","title":"var processingMethod: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/satellites","title":"var satellites: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speed","title":"var speed: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.property","title":"var speedRef: SpeedRef?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.property","title":"var status: Status?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/timestamp","title":"var timeStamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/track","title":"var track: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/trackref","title":"var trackRef: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/version","title":"var version: [Double]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/abovesealevel","title":"case aboveSeaLevel","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/belowsealevel","title":"case belowSeaLevel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-4s06s","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-o38z","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-4s06s","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:)-o38z","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/altituderef-swift.enum","title":"ImageSource.ImageProperties.GPS.AltitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/magneticdirection","title":"case magneticDirection","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/truedirection","title":"case trueDirection","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:)-2kwbn","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:)-2rye7","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:)-2kwbn","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:)-2rye7","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/directionref","title":"ImageSource.ImageProperties.GPS.DirectionRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/kilometers","title":"case kilometers","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/knots","title":"case knots","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/miles","title":"case miles","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:)-2ai4p","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:)-78p6o","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:)-2ai4p","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:)-78p6o","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/distanceref","title":"ImageSource.ImageProperties.GPS.DistanceRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/north","title":"case north","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/south","title":"case south","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-4gwi0","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-7mfju","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-4gwi0","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:)-7mfju","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/latituderef-swift.enum","title":"ImageSource.ImageProperties.GPS.LatitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/east","title":"case east","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-5m5ah","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-6qer9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-5m5ah","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:)-6qer9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/longituderef-swift.enum","title":"ImageSource.ImageProperties.GPS.LongitudeRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/threedimensional","title":"case threeDimensional","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/twodimensional","title":"case twoDimensional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-55hpw","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-898nv","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-55hpw","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:)-898nv","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/measuremode-swift.enum","title":"ImageSource.ImageProperties.GPS.MeasureMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/kilometersperhour","title":"case kilometersPerHour","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/knots","title":"case knots","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/milesperhour","title":"case milesPerHour","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-4yoms","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-79n06","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-4yoms","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:)-79n06","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/speedref-swift.enum","title":"ImageSource.ImageProperties.GPS.SpeedRef","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/active","title":"case active","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/void","title":"case void","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-7pd6c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-9ciuy","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-7pd6c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:)-9ciuy","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/status-swift.enum","title":"ImageSource.ImageProperties.GPS.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gps","title":"ImageSource.ImageProperties.GPS","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/canvaspixelheight","title":"var canvasPixelHeight: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/canvaspixelsize","title":"var canvasPixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/canvaspixelwidth","title":"var canvasPixelWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.struct","title":"ImageSource.ImageProperties.HEIC","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/orientation","title":"var orientation: Orientation?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.struct","title":"ImageSource.ImageProperties.IPTC","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/densityunit","title":"var densityUnit: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/isprogressive","title":"var isProgressive: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/orientation","title":"var orientation: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/version","title":"var version: [Int]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/xdensity","title":"var xDensity: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/ydensity","title":"var yDensity: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.struct","title":"ImageSource.ImageProperties.JPEG","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/d","title":"static let D: ImageSource.ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/g","title":"static let G: ImageSource.ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/mf","title":"static let MF: ImageSource.ImageProperties.Nikon.LensType","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/vr","title":"static let VR: ImageSource.ImageProperties.Nikon.LensType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-1r3a8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-4r150","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-1r3a8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:)-4r150","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.struct","title":"ImageSource.ImageProperties.Nikon.LensType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/autoiso","title":"static let autoISO: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/continuous","title":"static let continuous: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/dlightingbracketing","title":"static let dLightingBracketing: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/delay","title":"static let delay: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/exposurebracketing","title":"static let exposureBracketing: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/ircontrol","title":"static let irControl: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/pccontrol","title":"static let pcControl: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/selftimer","title":"static let selfTimer: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/whitebalancebracketing","title":"static let whiteBalanceBracketing: ImageSource.ImageProperties.Nikon.ShootingMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-2gj1h","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-2snr3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-2gj1h","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:)-2snr3","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.struct","title":"ImageSource.ImageProperties.Nikon.ShootingMode","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/cameraserialnumber","title":"var cameraSerialNumber: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/colormode","title":"var colorMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/digitalzoom","title":"var digitalZoom: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/flashexposurecomp","title":"var flashExposureComp: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/flashsetting","title":"var flashSetting: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/focusdistance","title":"var focusDistance: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/focusmode","title":"var focusMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/isoselection","title":"var iSOSelection: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/isosetting","title":"var iSOSetting: [Int]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/imageadjustment","title":"var imageAdjustment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lensadapter","title":"var lensAdapter: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lensinfo","title":"var lensInfo: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/lenstype-swift.property","title":"var lensType: LensType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/quality","title":"var quality: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/sharpenmode","title":"var sharpenMode: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shootingmode-swift.property","title":"var shootingMode: ShootingMode?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/shuttercount","title":"var shutterCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/whitebalancemode","title":"var whiteBalanceMode: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/nikon","title":"ImageSource.ImageProperties.Nikon","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-7jqrj","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-7rs2g","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-7jqrj","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:)-7rs2g","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.struct","title":"ImageSource.ImageProperties.PNG.Extended.CompressionFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/author","title":"var author: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/canvaspixelheight","title":"var canvasPixelHeight: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/canvaspixelsize","title":"var canvasPixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/canvaspixelwidth","title":"var canvasPixelWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/chromaticities","title":"var chromaticities: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/compressionfilter-swift.property","title":"var compressionFilter: CompressionFilter?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/copyright","title":"var copyright: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/creationtime","title":"var creationTime: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/disclaimer","title":"var disclaimer: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/frameinfo","title":"var frameInfo: [String]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/gamma","title":"var gamma: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.property","title":"var interlaceType: InterlaceType?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/modificationtime","title":"var modificationTime: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/pixelsaspectratio","title":"var pixelsAspectRatio: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/profilename","title":"var profileName: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.property","title":"var sRGBIntent: sRGBIntent?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/software","title":"var software: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/warning","title":"var warning: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/xpixelspermeter","title":"var xPixelsPerMeter: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/ypixelspermeter","title":"var yPixelsPerMeter: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/adam7interlace","title":"case adam7Interlace","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/noninterlaced","title":"case nonInterlaced","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-2pw2c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-884je","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-2pw2c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:)-884je","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/interlacetype-swift.enum","title":"ImageSource.ImageProperties.PNG.Extended.InterlaceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/absolutecolorimetric","title":"case absoluteColorimetric","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/perceptual","title":"case perceptual","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/relativecolorimetric","title":"case relativeColorimetric","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/saturation","title":"case saturation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-48e8d","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-8nrij","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-48e8d","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:)-8nrij","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/srgbintent-swift.enum","title":"ImageSource.ImageProperties.PNG.Extended.sRGBIntent","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/extended","title":"ImageSource.ImageProperties.PNG.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.struct","title":"ImageSource.ImageProperties.PNG","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/artist","title":"var artist: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/compression","title":"var compression: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/copyright","title":"var copyright: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/documentname","title":"var documentName: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/hostcomputer","title":"var hostComputer: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/imagedescription","title":"var imageDescription: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/photometricinterpretation","title":"var photometricInterpretation: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/primarychromaticities","title":"var primaryChromaticities: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/resolutionunit","title":"var resolutionUnit: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/software","title":"var software: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/tilelength","title":"var tileLength: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/tilewidth","title":"var tileWidth: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/transferfunction","title":"var transferFunction: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/whitepoint","title":"var whitePoint: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/extended","title":"ImageSource.ImageProperties.TIFF.Extended","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/cameramaker","title":"var cameraMaker: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/cameramodel","title":"var cameraModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/orientation","title":"var orientation: Orientation?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/timestamp","title":"var timestamp: Date?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/xresolution","title":"var xResolution: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/yresolution","title":"var yResolution: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.struct","title":"ImageSource.ImageProperties.TIFF","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/clampeddelaytime","title":"var clampedDelayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/colormodel","title":"var colorModel: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/colorprofile","title":"var colorProfile: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/delaytime","title":"var delayTime: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/depth","title":"var depth: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/dpiheight","title":"var dpiHeight: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/dpisize","title":"var dpiSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/dpiwidth","title":"var dpiWidth: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/exif-swift.property","title":"var exif: EXIF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/filesize","title":"var fileSize: DataSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/gif-swift.property","title":"var gif: GIF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/hasalpha","title":"var hasAlpha: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/heic-swift.property","title":"var heic: HEIC?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/iptc-swift.property","title":"var iptc: IPTC?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/isscreenshot","title":"var isScreenshot: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/jpeg-swift.property","title":"var jpeg: JPEG?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/loopcount","title":"var loopCount: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.property","title":"var orientation: Orientation","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/pixelheight","title":"var pixelHeight: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/pixelsize","title":"var pixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/pixelwidth","title":"var pixelWidth: CGFloat?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/png-swift.property","title":"var png: PNG?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.property","title":"var shape: Shape?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tiff-swift.property","title":"var tiff: TIFF?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/unclampeddelaytime","title":"var unclampedDelayTime: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/down","title":"case down","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/downmirrored","title":"case downMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/leftmirrored","title":"case leftMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/right","title":"case right","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/rightmirrored","title":"case rightMirrored","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/up","title":"case up","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/upmirrored","title":"case upMirrored","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:)-5c5tf","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:)-6is0i","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:)-5c5tf","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:)-6is0i","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/orientation-swift.enum","title":"ImageSource.ImageProperties.Orientation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/landscape","title":"case landscape","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/portrait","title":"case portrait","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:)-8r73m","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:)-tnkx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:)-8r73m","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:)-tnkx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/shape-swift.enum","title":"ImageSource.ImageProperties.Shape","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imageproperties","title":"ImageSource.ImageProperties","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/source","title":"let source: ImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> ImageIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/element","title":"ImageSource.ImageSequence.Element","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-6w2ql","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-7y606","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-6w2ql","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:)-7y606","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/imagetype","title":"ImageSource.ImageSequence.ImageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-64tk0","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-9y193","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-1oamg","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-8qt6c","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-4wgaz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-814yl","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-64tk0","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/compactmap(_:)-9y193","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-1oamg","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/flatmap(_:)-8qt6c","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-4wgaz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/map(_:)-814yl","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/imagesequence","title":"ImageSource.ImageSequence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.property","title":"var createOption: CreateOption","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize","title":"var maxSize: Int?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldallowfloat","title":"var shouldAllowFloat: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldcache","title":"var shouldCache: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shoulddecodeimmediately","title":"var shouldDecodeImmediately: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/shouldtransform","title":"var shouldTransform: Bool?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.property","title":"var subsampleFactor: SubsampleFactor?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize(_:)-3iv2a","title":"static func maxSize(Int) -> ThumbnailOptions","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/maxsize(_:)-9eyd5","title":"static func maxSize(CGSize) -> ThumbnailOptions","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor(_:)","title":"static func subsampleFactor(SubsampleFactor) -> ThumbnailOptions","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/createalways","title":"case createAlways","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/createifabsent","title":"case createIfAbsent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/maxsize","title":"case maxSize","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldallowfloat","title":"case shouldAllowFloat","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldcache","title":"case shouldCache","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shoulddecodeimmediately","title":"case shouldDecodeImmediately","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/shouldtransform","title":"case shouldTransform","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/subsamplefactor","title":"case subsampleFactor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7qshw","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7xk4y","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7qshw","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:)-7xk4y","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/codingkeys","title":"ImageSource.ThumbnailOptions.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/always","title":"case always","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/ifabsent","title":"case ifAbsent","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/never","title":"case never","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-8slz1","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-9bskf","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-8slz1","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:)-9bskf","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/createoption-swift.enum","title":"ImageSource.ThumbnailOptions.CreateOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor2","title":"case factor2","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor4","title":"case factor4","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/factor8","title":"case factor8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-6s0kr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-7znem","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-6s0kr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:)-7znem","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/subsamplefactor-swift.enum","title":"ImageSource.ThumbnailOptions.SubsampleFactor","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailoptions","title":"ImageSource.ThumbnailOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(_:)","title":"init(CGImageSource)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(data:)","title":"init?(data: Data)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(image:)","title":"init?(image: NSImage)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(path:)","title":"init?(path: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imagesource\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/animationduration","title":"var animationDuration: Double?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/cgimagesource","title":"let cgImageSource: CGImageSource","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isanimatable","title":"var isAnimatable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isanimated","title":"var isAnimated: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/pixelsize","title":"var pixelSize: CGSize?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/primaryimageindex","title":"var primaryImageIndex: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.property","title":"var status: CGImageSourceStatus","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/typeidentifier","title":"var typeIdentifier: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imagesource\/uttype","title":"var utType: UTType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/getimage(at:options:)","title":"func getImage(at: Int, options: ImageOptions?) -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/getthumbnail(at:options:)","title":"func getThumbnail(at: Int, options: ThumbnailOptions?) -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/image(at:options:)","title":"func image(at: Int, options: ImageOptions?) async -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/image(at:options:completionhandler:)","title":"func image(at: Int, options: ImageOptions?, completionHandler: (CGImage?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/imageframes(options:)","title":"func imageFrames(options: ImageOptions?) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/images(options:)","title":"func images(options: ImageOptions?) -> ImageSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/properties()","title":"func properties() -> ImageProperties?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/properties(at:)","title":"func properties(at: Int) -> ImageProperties?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status(at:)","title":"func status(at: Int) -> CGImageSourceStatus","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnail(at:options:)","title":"func thumbnail(at: Int, options: ThumbnailOptions?) async -> CGImage?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnail(at:options:completionhandler:)","title":"func thumbnail(at: Int, options: ThumbnailOptions?, completionHandler: (CGImage?) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnailframes(options:)","title":"func thumbnailFrames(options: ThumbnailOptions?) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/thumbnails(options:)","title":"func thumbnails(options: ThumbnailOptions?) -> ImageSequence","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/defaultframeduration","title":"static let defaultFrameDuration: Double","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/incomplete","title":"case incomplete","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/invaliddata","title":"case invalidData","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/other(_:)","title":"case other(CGImageSourceStatus)","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/readingheader","title":"case readingHeader","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/unexpectedeof","title":"case unexpectedEOF","type":"case"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/unknowntype","title":"case unknownType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/status-swift.enum","title":"ImageSource.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/imagesource\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/imagesource\/==(_:_:)","title":"static func == (ImageSource, ImageSource) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-1fi1a","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-6r2qx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/imagesource\/==(_:_:)","title":"static func == (ImageSource, ImageSource) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-1fi1a","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:)-6r2qx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imagesource\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imagesource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imagesource","title":"ImageSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframe\/init(_:_:)","title":"init(NSUIImage, TimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframe\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframe\/image","title":"var image: NSUIImage","type":"property"}],"path":"\/documentation\/fzswiftutils\/imageframe","title":"ImageFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/init(_:_:)","title":"init(CGImage, TimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/fzswiftutils\/cgimageframe\/image","title":"var image: CGImage","type":"property"}],"path":"\/documentation\/fzswiftutils\/cgimageframe","title":"CGImageFrame","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/init(_:loop:)","title":"init(NSBitmapImageRep, loop: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/init(source:type:thumbnailoptions:imageoptions:loop:)","title":"init(source: ImageSource, type: FrameType, thumbnailOptions: ThumbnailOptions?, imageOptions: ImageOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/currentframe","title":"var currentFrame: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/framecount","title":"let frameCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/imageoptions","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/representation","title":"let representation: NSBitmapImageRep?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/source","title":"let source: ImageSource?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/thumbnailoptions","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/type","title":"let type: FrameType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/next()","title":"func next() async -> CGImageFrame?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/image(source:options:loop:)","title":"static func image(source: ImageSource, options: ImageOptions?, loop: Bool) -> ImageFrameIterator","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/thumbnail(source:options:loop:)","title":"static func thumbnail(source: ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageFrameIterator","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-1tzb8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-2yq79","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-1tzb8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:)-2yq79","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator\/frametype","title":"ImageFrameSequence.ImageFrameIterator.FrameType","type":"enum"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageframeiterator","title":"ImageFrameSequence.ImageFrameIterator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/init(_:loop:)","title":"init(NSBitmapImageRep, loop: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/init(_:type:imageoptions:thumbnailoptions:loop:)","title":"init(ImageSource, type: ImageType, imageOptions: ImageOptions?, thumbnailOptions: ThumbnailOptions?, loop: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageoptions-swift.property","title":"let imageOptions: ImageOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/loop","title":"let loop: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/representation","title":"let representation: NSBitmapImageRep?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/source","title":"let source: ImageSource?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnailoptions-swift.property","title":"let thumbnailOptions: ThumbnailOptions?","type":"property"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/type","title":"let type: ImageType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> ImageFrameIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/element","title":"ImageFrameSequence.Element","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imageoptions-swift.typealias","title":"ImageFrameSequence.ImageOptions","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnailoptions-swift.typealias","title":"ImageFrameSequence.ThumbnailOptions","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/image(_:options:loop:)","title":"static func image(ImageSource, options: ImageOptions?, loop: Bool) -> ImageFrameSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/thumbnail(_:options:loop:)","title":"static func thumbnail(ImageSource, options: ThumbnailOptions?, loop: Bool) -> ImageFrameSequence","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/thumbnail","title":"case thumbnail","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-3u8zl","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-4s47n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-3u8zl","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:)-4s47n","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/imagetype","title":"ImageFrameSequence.ImageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-3qgq8","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-53ulg","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-3y4wz","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-59q5u","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-2yzi1","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-4s1q2","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect()","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> Void) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-3qgq8","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/compactmap(_:)-53ulg","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-3y4wz","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/flatmap(_:)-59q5u","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-2yzi1","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/map(_:)-4s1q2","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/imageframesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/fzswiftutils\/imageframesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/imageframesequence","title":"ImageFrameSequence","type":"struct"},{"title":"KVO & Notifications","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/notificationcenter\/observe(name:object:queue:using:)","title":"func observe(name: NSNotification.Name?, object: Any?, queue: OperationQueue?, using: (Notification) -> Void) -> NotificationToken","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/notificationcenter","title":"NotificationCenter","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/init(_:)","title":"init(Object)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/observedobject","title":"var observedObject: Object?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:handler:)","title":"func add([PartialKeyPath<Object>], handler: ((_ keyPath: PartialKeyPath<Object>) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:sendinitalvalue:handler:)-8aimk","title":"func add<Value>(KeyPath<Object, Value>, sendInitalValue: Bool, handler: ((_ oldValue: Value, _ newValue: Value) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:sendinitalvalue:handler:)-9bvr8","title":"func add(String, sendInitalValue: Bool, handler: (_ oldValue: Any, _ newValue: Any) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/add(_:sendinitalvalue:senduniqueonly:handler:)","title":"func add<Value>(KeyPath<Object, Value>, sendInitalValue: Bool, sendUniqueOnly: Bool, handler: ((_ oldValue: Value, _ newValue: Value) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving()","title":"func isObserving() -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving(_:)-1nzh0","title":"func isObserving(String) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/isobserving(_:)-8i9c5","title":"func isObserving(PartialKeyPath<Object>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/observevalue(forkeypath:of:change:context:)","title":"func observeValue(forKeyPath: String?, of: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-2x1ql","title":"func remove(PartialKeyPath<Object>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-9ivuu","title":"func remove<S>(S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/remove(_:)-y0wp","title":"func remove(String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/removeall()","title":"func removeAll()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-2tylu","title":"subscript(String) -> ((_ oldValue: Any, _ newValue: Any) -> ())?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-3w9qx","title":"subscript<Value>(KeyPath<Object, Value>) -> ((_ oldValue: Value, _ newValue: Value) -> ())?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/keyvalueobserver\/subscript(_:)-43z59","title":"subscript<Value>(KeyPath<Object, Value>) -> ((_ oldValue: Value, _ newValue: Value) -> ())?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/keyvalueobserver","title":"KeyValueObserver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/notificationtoken\/init(notificationcenter:token:)","title":"init(notificationCenter: NotificationCenter, token: Any)","type":"init"}],"path":"\/documentation\/fzswiftutils\/notificationtoken","title":"NotificationToken","type":"class"},{"title":"Logging","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/measuretime\/printtimeelapsed(title:running:)","title":"class func printTimeElapsed(title: String, running: () -> Void) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/measuretime\/timeelapsed(running:)","title":"class func timeElapsed(running: () -> Void) -> TimeDuration","type":"method"}],"path":"\/documentation\/fzswiftutils\/measuretime","title":"MeasureTime","type":"class"},{"title":"Math","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bytecountformatter\/init(allowedunits:countstyle:)","title":"init(allowedUnits: Units, countStyle: CountStyle)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/bytecountformatter\/localizedstring(for:locale:)","title":"func localizedString(for: Any?, locale: Locale) -> String?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bytecountformatter\/localizedstring(from:locale:)","title":"func localizedString(from: Measurement<UnitInformationStorage>, locale: Locale) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/bytecountformatter\/localizedstring(frombytecount:locale:)","title":"func localizedString(fromByteCount: Int64, locale: Locale) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/bytecountformatter","title":"ByteCountFormatter","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryinteger\/digitcount","title":"var digitCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryinteger\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryinteger\/advanced(by:in:)","title":"func advanced(by: AdvanceOption, in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryinteger\/localizedstring(with:numberofdigits:locale:)","title":"func localizedString(with: String, numberOfDigits: Int, locale: Locale?) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/binaryinteger","title":"BinaryInteger","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/degreestoradians","title":"var degreesToRadians: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/placescount","title":"var placesCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/radianstodegrees","title":"var radiansToDegrees: Self","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/interpolated(from:to:)","title":"func interpolated(from: ClosedRange<Self>, to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/localizedstring(with:numberofdigits:locale:)","title":"func localizedString(with: String, numberOfDigits: Int, locale: Locale?) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/round(_:)","title":"func round(FloatingPointPlacesRoundingRule)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint\/rounded(_:)","title":"func rounded(FloatingPointPlacesRoundingRule) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/binaryfloatingpoint","title":"BinaryFloatingPoint","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/double\/scaledintegral","title":"var scaledIntegral: `Self`","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/double\/now","title":"static var now: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/double\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: Double, epsilon: Double) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/double\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/double\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/double\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/double\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/init(_:)","title":"init?<S>(S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/degreestoradians","title":"var degreesToRadians: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/placescount","title":"var placesCount: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/radianstodegrees","title":"var radiansToDegrees: CGFloat","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/scaledintegral","title":"var scaledIntegral: `Self`","type":"property"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/localizedstring(with:numberofdigits:locale:)","title":"func localizedString(with: String, numberOfDigits: Int, locale: Locale?) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/round(_:)","title":"func round(FloatingPointPlacesRoundingRule)","type":"method"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/rounded(_:)","title":"func rounded(FloatingPointPlacesRoundingRule) -> CGFloat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: CGFloat, epsilon: CGFloat) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/corefoundation\/cgfloat","title":"CGFloat","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-1cflo","title":"init(CChar)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-3x4e6","title":"init?(String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-40ug6","title":"init<Value>(Value)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-56gwu","title":"init<Value>(Value)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-5ezbt","title":"init(Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/init(_:)-8vp3n","title":"init(CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/intstring","title":"var intString: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber\/string","title":"var string: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsnumber","title":"NSNumber","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/init(maxfractiondigits:)","title":"init(maxFractionDigits: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/init(minfractiondigits:)","title":"init(minFractionDigits: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/init(minfractiondigits:maxfractiondigits:)","title":"init(minFractionDigits: Int, maxFractionDigits: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/boolvalue(from:)","title":"func boolValue(from: String) -> Bool?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/doublevalue(from:)","title":"func doubleValue(from: String) -> Double?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/floatvalue(from:)","title":"func floatValue(from: String) -> Float?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/int16value(from:)","title":"func int16Value(from: String) -> Int16?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/int32value(from:)","title":"func int32Value(from: String) -> Int32?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/int64value(from:)","title":"func int64Value(from: String) -> Int64?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/int8value(from:)","title":"func int8Value(from: String) -> Int8?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/intvalue(from:)","title":"func intValue(from: String) -> Int?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/string(from:)-3rteg","title":"func string<Value>(from: Value) -> String?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/string(from:)-3tchv","title":"func string(from: Bool) -> String?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/string(from:)-5ma0a","title":"func string<Value>(from: Value) -> String?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/string(from:)-8ed23","title":"func string(from: CChar) -> String?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/timeinterval(from:)","title":"func timeInterval(from: String) -> TimeInterval?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/uint16value(from:)","title":"func uint16Value(from: String) -> UInt16?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/uint32value(from:)","title":"func uint32Value(from: String) -> UInt32?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/uint64value(from:)","title":"func uint64Value(from: String) -> UInt64?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/uint8value(from:)","title":"func uint8Value(from: String) -> UInt8?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/uintvalue(from:)","title":"func uintValue(from: String) -> UInt?","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/value(from:)","title":"func value<C>(from: String) -> C?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/decimal(min:max:)","title":"static func decimal(min: Int, max: Int) -> NumberFormatter","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/forfloatingpoint(with:numberofdigits:locale:)","title":"static func forFloatingPoint(with: String, numberOfDigits: Int, locale: Locale?) -> NumberFormatter","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/forinteger(with:numberofdigits:locale:)","title":"static func forInteger(with: String, numberOfDigits: Int, locale: Locale?) -> NumberFormatter","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter\/percent(min:max:)","title":"static func percent(min: Int, max: Int) -> NumberFormatter","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/numberformatter","title":"NumberFormatter","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/nsrange","title":"var nsRange: NSRange","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/nsvalue","title":"var nsValue: NSValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/contains(_:)-2tovo","title":"func contains(Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/contains(_:)-6cauv","title":"func contains(ClosedRange<Int>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/contains(_:)-mtpv","title":"func contains<S>(S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/shfted(by:)","title":"func shfted(by: Int) -> Range<Bound>","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/range\/tofloating()","title":"func toFloating() -> Range<Float>","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/range","title":"Range","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/nsrange","title":"var nsRange: NSRange","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/nsvalue","title":"var nsValue: NSValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/contains(_:)-2l7td","title":"func contains(ClosedRange<Int>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/contains(_:)-6ld96","title":"func contains<S>(S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/contains(_:)-8f6re","title":"func contains(Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/offset(by:)","title":"func offset(by: Int) -> ClosedRange<Bound>","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/closedrange\/tofloating()","title":"func toFloating() -> ClosedRange<Float>","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/closedrange","title":"ClosedRange","type":"extension"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule\/toplaces(_:)","title":"case toPlaces(Int)","type":"case"},{"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule\/toplacestowardzero(_:)","title":"case toPlacesTowardZero(Int)","type":"case"}],"path":"\/documentation\/fzswiftutils\/floatingpointplacesroundingrule","title":"FloatingPointPlacesRoundingRule","type":"enum"},{"title":"Networking","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpcookiestorage\/removeallcookies()","title":"func removeAllCookies()","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpcookiestorage","title":"HTTPCookieStorage","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/allheaderfieldsmapped","title":"var allHeaderFieldsMapped: [HTTPHeaderFieldKey : String]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/statusissucess","title":"var statusIsSucess: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/lastmodified","title":"case LastModified","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/p3p","title":"case P3P","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/acceptranges","title":"case acceptRanges","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/age","title":"case age","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/allow","title":"case allow","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/cachecontrol","title":"case cacheControl","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentdisposition","title":"case contentDisposition","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentencoding","title":"case contentEncoding","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentlanguage","title":"case contentLanguage","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentlength","title":"case contentLength","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentlocation","title":"case contentLocation","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentmd5","title":"case contentMD5","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentrange","title":"case contentRange","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contentsecuritypolicy","title":"case contentSecurityPolicy","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/contenttype","title":"case contentType","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/etag","title":"case eTag","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/expires","title":"case expires","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/keepalive","title":"case keepAlive","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/link","title":"case link","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/location","title":"case location","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/pragma","title":"case pragma","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/proxyauthenticate","title":"case proxyAuthenticate","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/proxyauthorization","title":"case proxyAuthorization","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/refresh","title":"case refresh","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/retryafter","title":"case retryAfter","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/server","title":"case server","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/setcookie","title":"case setCookie","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/tk","title":"case tk","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/trailer","title":"case trailer","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/transferencoding","title":"case transferEncoding","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/vary","title":"case vary","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/via","title":"case via","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/warning","title":"case warning","type":"case"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/wwwauthenticate","title":"case wwwAuthenticate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/allcases","title":"static var allCases: [HTTPURLResponse.HTTPHeaderFieldKey]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/randomnewcase","title":"var randomNewCase: Self?","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:)-3m3wo","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:)-3teq","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:)-3m3wo","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:)-3teq","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse\/httpheaderfieldkey","title":"HTTPURLResponse.HTTPHeaderFieldKey","type":"enum"}],"path":"\/documentation\/fzswiftutils\/foundation\/httpurlresponse","title":"HTTPURLResponse","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/allhttpheaderfieldsmapped","title":"var allHTTPHeaderFieldsMapped: [HTTPRequestHeaderFieldKey : String]?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/bytesranges","title":"var bytesRanges: ClosedRange<Int>?","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/curlstring","title":"var curlString: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/addhttpheaders(_:)","title":"func addHTTPHeaders([String : String])","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/addrangeheader(for:validator:)-4kv6b","title":"func addRangeHeader(for: Data, validator: String?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest\/addrangeheader(for:validator:)-67dmi","title":"func addRangeHeader(for: URL, validator: String?)","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/urlrequest","title":"URLRequest","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsession\/downloaddata(with:)","title":"func downloadData(with: URLRequest) throws -> (data: Data, response: URLResponse?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsession\/downloadfile(with:)","title":"func downloadFile(with: URLRequest) throws -> (location: URL, response: URLResponse?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsession\/downloadtask(withresumedata:request:)","title":"func downloadTask(withResumeData: Data, request: URLRequest) -> URLSessionDownloadTask","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/urlsession","title":"URLSession","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsessionconfiguration\/allhttpheaderfieldsmapped","title":"var allHTTPHeaderFieldsMapped: [HTTPRequestHeaderFieldKey : String]?","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/urlsessionconfiguration","title":"URLSessionConfiguration","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsessiontask\/expectedcontentlength","title":"var expectedContentLength: Int64?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/urlsessiontask\/setrequest(_:)","title":"func setRequest(URLRequest)","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/urlsessiontask","title":"URLSessionTask","type":"extension"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/te","title":"case TE","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/accept","title":"case accept","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/acceptcharset","title":"case acceptCharset","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/acceptencoding","title":"case acceptEncoding","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/acceptlanguage","title":"case acceptLanguage","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/authorization","title":"case authorization","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/cachecontrol","title":"case cacheControl","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/contentlength","title":"case contentLength","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/contentmd5","title":"case contentMD5","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/contenttype","title":"case contentType","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/cookie","title":"case cookie","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/date","title":"case date","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/expect","title":"case expect","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/forwarded","title":"case forwarded","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/from","title":"case from","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/host","title":"case host","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/ifmatch","title":"case ifMatch","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/ifmodifiedsince","title":"case ifModifiedSince","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/ifnonematch","title":"case ifNoneMatch","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/ifrange","title":"case ifRange","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/ifunmodifiedsince","title":"case ifUnmodifiedSince","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/maxforwards","title":"case maxForwards","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/pragma","title":"case pragma","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/proxyauthorization","title":"case proxyAuthorization","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/range","title":"case range","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/referer","title":"case referer","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/transferencoding","title":"case transferEncoding","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/upgrade","title":"case upgrade","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/useragent","title":"case userAgent","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/via","title":"case via","type":"case"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/allcases","title":"static var allCases: [`Self`]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/randomnewcase","title":"var randomNewCase: Self?","type":"property"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:)-4193c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:)-7ng4q","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:)-4193c","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:)-7ng4q","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/httprequestheaderfieldkey","title":"HTTPRequestHeaderFieldKey","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/redirectedurl(for:)-7qxz7","title":"static func redirectedURL(for: URL) async throws -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/redirectedurl(for:)-nktu","title":"static func redirectedURL(for: URL) throws -> URL?","type":"method"},{"path":"\/documentation\/fzswiftutils\/urlredirection\/redirectedurl(for:completionhandler:)","title":"static func redirectedURL(for: URL, completionHandler: (URL?, Error?) -> ())","type":"method"}],"path":"\/documentation\/fzswiftutils\/urlredirection","title":"URLRedirection","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/reachability\/isconnectedtonetwork()","title":"static func isConnectedToNetwork() -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/reachability","title":"Reachability","type":"class"},{"title":"NSObject","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/classreflection()","title":"func classReflection() -> [String : Any]?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/containsproperty(named:)","title":"func containsProperty(named: String) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/issubclass(of:)","title":"func isSubclass(of: AnyClass) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/overrides(_:)","title":"func overrides(Selector) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/removeobserver(_:for:)","title":"func removeObserver<Value>(NSObject, for: KeyPath<NSObject, Value>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/replacemethod(_:methodsignature:hooksignature:_:)","title":"func replaceMethod<MethodSignature, HookSignature>(Selector, methodSignature: MethodSignature.Type, hookSignature: HookSignature.Type, (Hook<MethodSignature>) -> HookSignature?) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/resetmethod(_:)","title":"func resetMethod(Selector)","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/setvalue(safely:forkey:)","title":"func setValue(safely: Any?, forKey: String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/synchronized(_:)","title":"func synchronized<T>(() throws -> T) rethrows -> T","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/typeofproperty(named:)","title":"func typeOfProperty(named: String) -> Any?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/value(forkey:type:)","title":"func value<T>(forKey: String, type: T.Type) -> T?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/classreflection(includesuperclass:excludereadonlyproperties:)","title":"static func classReflection(includeSuperclass: Bool, excludeReadOnlyProperties: Bool) -> [String : Any]?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/containsproperty(_:)","title":"static func containsProperty(String) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/typeofproperty(_:)","title":"static func typeOfProperty(String) -> Any?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/associatedvalue","title":"var associatedValue: AssociatedValue<Self>","type":"property"}],"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/associatedvaluesprovider-implementations","title":"AssociatedValuesProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/typename","title":"var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject\/namedescribable-implementations","title":"NameDescribable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/objectivec\/nsobject","title":"NSObject","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/observechanges(for:sendinitalvalue:handler:)","title":"func observeChanges<Value>(for: KeyPath<Self, Value>, sendInitalValue: Bool, handler: ((_ oldValue: Value, _ newValue: Value) -> ())) -> NSKeyValueObservation","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/observechanges(for:sendinitalvalue:uniquevalues:handler:)","title":"func observeChanges<Value>(for: KeyPath<Self, Value>, sendInitalValue: Bool, uniqueValues: Bool, handler: ((_ oldValue: Value, _ newValue: Value) -> ())) -> NSKeyValueObservation","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:debounce:handler:)-2c081","title":"func onChanged<Value>(KeyPath<Self, Value?>, options: NSKeyValueObservingOptions, debounce: DispatchQueue.SchedulerTimeType.Stride, handler: ((Value?) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:debounce:handler:)-379oe","title":"func onChanged<Value>(KeyPath<Self, Value>, options: NSKeyValueObservingOptions, debounce: DispatchQueue.SchedulerTimeType.Stride, handler: ((Value) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:handler:)-16wec","title":"func onChanged<Value>(KeyPath<Self, Value?>, options: NSKeyValueObservingOptions, handler: ((Value?) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:handler:)-3y3jo","title":"func onChanged<Value>(KeyPath<Self, Value>, options: NSKeyValueObservingOptions, handler: ((Value) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:handler:)-7tt59","title":"func onChanged<Value>(KeyPath<Self, Value?>, options: NSKeyValueObservingOptions, handler: ((Value?) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:handler:)-9z4yn","title":"func onChanged<Value>(KeyPath<Self, Value>, options: NSKeyValueObservingOptions, handler: ((Value) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:throttle:handler:)-27yq0","title":"func onChanged<Value>(KeyPath<Self, Value?>, options: NSKeyValueObservingOptions, throttle: DispatchQueue.SchedulerTimeType.Stride, handler: ((Value?) -> Void)) -> AnyCancellable?","type":"method"},{"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol\/onchanged(_:options:throttle:handler:)-6t45g","title":"func onChanged<Value>(KeyPath<Self, Value>, options: NSKeyValueObservingOptions, throttle: DispatchQueue.SchedulerTimeType.Stride, handler: ((Value) -> Void)) -> AnyCancellable?","type":"method"}],"path":"\/documentation\/fzswiftutils\/objectivec\/nsobjectprotocol","title":"NSObjectProtocol","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscoding\/archivebasedcopy()","title":"func archiveBasedCopy() throws -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscoding","title":"NSCoding","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/init(get:new:static:)","title":"init<V>(get: PartialKeyPath<V>, new: PartialKeyPath<V>, static: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/init(old:new:static:)","title":"init(old: Selector, new: Selector, static: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/init(set:new:static:)","title":"init<V>(set: PartialKeyPath<V>, new: PartialKeyPath<V>, static: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/new","title":"let new: Selector","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/old","title":"let old: Selector","type":"property"},{"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair\/static","title":"let `static`: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/swizzle\/selectorpair","title":"Swizzle.SelectorPair","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-46lix","title":"init(AnyClass, () -> [SelectorPair]) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-7nkmd","title":"init(String, () -> SelectorPair) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-7xu9d","title":"init(AnyClass, () -> SelectorPair) throws","type":"init"},{"path":"\/documentation\/fzswiftutils\/swizzle\/init(_:_:)-85lvw","title":"init(String, () -> [SelectorPair]) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swizzle\/builder\/buildblock(_:)","title":"static func buildBlock(SelectorPair...) -> [SelectorPair]","type":"method"}],"path":"\/documentation\/fzswiftutils\/swizzle\/builder","title":"Swizzle.Builder","type":"enum"}],"path":"\/documentation\/fzswiftutils\/swizzle","title":"Swizzle","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/key\/init(_:)","title":"init(String)","type":"init"}],"path":"\/documentation\/fzswiftutils\/defaults\/key","title":"Defaults.Key","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/init(userdefaults:)","title":"init(userDefaults: UserDefaults)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/clear(_:)","title":"func clear<ValueType>(Key<ValueType>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-72hhq","title":"func get<ValueType>(for: Key<ValueType>) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-72wir","title":"func get<ValueType>(for: Key<ValueType>) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/get(for:)-z3ne","title":"func get<ValueType>(for: String) -> ValueType?","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/has(_:)","title":"func has<ValueType>(Key<ValueType>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/observechanges(for:sendinitalvalue:handler:)","title":"func observeChanges<ValueType>(for: Key<ValueType>, sendInitalValue: Bool, handler: ((_ oldValue: ValueType, _ newValue: ValueType) -> ()))","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/removeall(bundle:)","title":"func removeAll(bundle: Bundle)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-18uyp","title":"func set<ValueType>(ValueType?, for: String)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-5t62b","title":"func set<ValueType>(ValueType, for: Key<ValueType>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/set(_:for:)-9mlwe","title":"func set<ValueType>(ValueType, for: Key<ValueType>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaults\/stopobserving(for:)","title":"func stopObserving<ValueType>(for: Key<ValueType>)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/subscript(_:)-2h9le","title":"subscript<T>(String) -> T?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/defaults\/subscript(_:)-6w7bo","title":"subscript<T>(Key<T>) -> T?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaults\/shared","title":"static let shared: Defaults","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaults","title":"Defaults","type":"class"},{"title":"String","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/character\/+(_:_:)","title":"static func + (Character, String) -> String","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/character","title":"Character","type":"extension"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/range","title":"let range: Range<String.Index>","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/score","title":"let score: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:)-32tsh","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:)-8hcd4","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:)-32tsh","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:)-8hcd4","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatch","title":"String.StringMatch","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/+(_:_:)","title":"static func + (String, Character) -> String","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/+=(_:_:)","title":"static func += (inout `Self`, Character)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/_-_(_:_:)","title":"static func <-> (String, Selector) -> Swizzle.SelectorPair","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/_~_(_:_:)","title":"static func <~> (String, Selector) -> Swizzle.SelectorPair","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/lines","title":"var lines: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/sentences","title":"var sentences: [String]","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/words","title":"var words: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hash(_:)","title":"func hash(HashOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/height(withconstrainedwidth:font:)","title":"func height(withConstrainedWidth: CGFloat, font: NSUIFont) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/height(withconstrainedwidth:font:maxnumberoflines:linebreakmode:)","title":"func height(withConstrainedWidth: CGFloat, font: NSUIFont, maxNumberOfLines: Int, lineBreakMode: NSLineBreakMode) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/matches(between:and:includingfromto:)","title":"func matches(between: String, and: String, includingFromTo: Bool) -> [StringMatch]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/matches(for:)-4j5u7","title":"func matches(for: StringMatchOption) -> [StringMatch]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/matches(for:)-uonh","title":"func matches(for: NLTag) -> [StringMatch]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/matches(regex:)","title":"func matches(regex: String) -> [StringMatch]","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/replaceemojinumbers()","title":"func replaceEmojiNumbers() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/replacingoccurrences(_:)","title":"func replacingOccurrences<Target, Replacement>([Target : Replacement]) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/replacingoccurrences(of:with:)","title":"func replacingOccurrences<Target, Replacement>(of: [Target], with: Replacement) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/random(using:length:)-74ivu","title":"static func random(using: [RandomizationType], length: Int) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/random(using:length:)-ogva","title":"static func random(using: [RandomizationType], length: Range<Int>) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/md5","title":"case MD5","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/sha1","title":"case SHA1","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:)-2fnzp","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:)-8ahdh","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:)-2fnzp","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:)-8ahdh","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/hashoption","title":"String.HashOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/and","title":"case and","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/backslash","title":"case backslash","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/comma","title":"case comma","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/commaampersand","title":"case commaAmpersand","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/commaand","title":"case commaAnd","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/commaor","title":"case commaOr","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/line","title":"case line","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/list","title":"case list","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/listnumeric","title":"case listNumeric","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/listnumericcolon","title":"case listNumericColon","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/listnumericdot","title":"case listNumericDot","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/liststars","title":"case listStars","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/or","title":"case or","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/slash","title":"case slash","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:)-6snwl","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:)-9xacw","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:)-6snwl","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:)-9xacw","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/joinoption","title":"String.JoinOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/letters","title":"case letters","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/lettersuppercase","title":"case lettersUppercase","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/numbers","title":"case numbers","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/symbols","title":"case symbols","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:)-513gu","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:)-5u1ww","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:)-513gu","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:)-5u1ww","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/randomizationtype","title":"String.RandomizationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/characters","title":"case characters","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/lines","title":"case lines","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/paragraphs","title":"case paragraphs","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/sentences","title":"case sentences","type":"case"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/words","title":"case words","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:)-10cnr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:)-74g16","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:)-10cnr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:)-74g16","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/string\/stringmatchoption","title":"String.StringMatchOption","type":"enum"}],"path":"\/documentation\/fzswiftutils\/swift\/string","title":"String","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/mangled","title":"var mangled: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/nsrange","title":"var nsRange: NSRange","type":"property"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/unmangled","title":"var unmangled: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/contains(all:)","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/contains(any:)","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/lowercasedfirst()","title":"func lowercasedFirst() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/trimmingemojis()","title":"func trimmingEmojis() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/uppercasedfirst()","title":"func uppercasedFirst() -> String","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-1nfdv","title":"subscript(PartialRangeUpTo<Int>) -> SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-2a79m","title":"subscript(Int) -> Character","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-4eljn","title":"subscript(PartialRangeThrough<Int>) -> SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-59ev5","title":"subscript(Range<Int>) -> SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-5zdyu","title":"subscript(ClosedRange<Int>) -> SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol\/subscript(_:)-9rt71","title":"subscript(PartialRangeFrom<Int>) -> SubSequence","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/swift\/stringprotocol","title":"StringProtocol","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/range","title":"var range: NSRange","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linecontentsendindex(at:)","title":"func lineContentsEndIndex(at: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linecontentsrange(at:)","title":"func lineContentsRange(at: Int) -> NSRange","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linecontentsrange(for:)","title":"func lineContentsRange(for: NSRange) -> NSRange","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linenumber(at:)","title":"func lineNumber(at: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linerange(at:)","title":"func lineRange(at: Int) -> NSRange","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/lineranges(for:includinglastemptyline:)","title":"func lineRanges(for: [NSRange], includingLastEmptyLine: Bool) -> [NSRange]","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/linestartindex(at:)","title":"func lineStartIndex(at: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/lowerboundofcomposedcharactersequence(_:offsetby:)","title":"func lowerBoundOfComposedCharacterSequence(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/rangeofcharacter(until:at:range:)","title":"func rangeOfCharacter(until: CharacterSet, at: Int, range: NSRange?) -> NSRange","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsstring\/ranges(of:options:range:)","title":"func ranges(of: String, options: NSString.CompareOptions, range: NSRange?) -> [NSRange]","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsstring","title":"NSString","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/init(_:_:)","title":"init(String, (inout AttributeContainer) -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/nsattributedstring","title":"var nsAttributedString: NSAttributedString","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/capitalized()","title":"func capitalized() -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/height(withconstrainedwidth:)","title":"func height(withConstrainedWidth: CGFloat) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/height(withconstrainedwidth:font:maxnumberoflines:linebreakmode:)","title":"func height(withConstrainedWidth: CGFloat, font: NSUIFont, maxNumberOfLines: Int, lineBreakMode: NSLineBreakMode) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/lowercased()","title":"func lowercased() -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/uppercased()","title":"func uppercased() -> AttributedString","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-1dm7g","title":"subscript(Int) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-550a8","title":"subscript(PartialRangeFrom<Int>) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-584hc","title":"subscript(ClosedRange<Int>) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-6achc","title":"subscript(Range<Int>) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-7fglq","title":"subscript(PartialRangeThrough<Int>) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-8vwp2","title":"subscript(PartialRangeUpTo<Int>) -> AttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring\/subscript(_:)-gag2","title":"subscript(StringLiteralType) -> AttributedString?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/foundation\/attributedstring","title":"AttributedString","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributecontainer\/underlinedlink","title":"var underlinedLink: URL?","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/attributecontainer","title":"AttributeContainer","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedstringprotocol\/underlinedlink","title":"var underlinedLink: URL?","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/attributedstringprotocol","title":"AttributedStringProtocol","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/attributedsubstring\/full","title":"var full: AttributedString","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/attributedsubstring","title":"AttributedSubstring","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/+(_:_:)-2hd8c","title":"static func + (NSAttributedString, NSAttributedString) -> NSAttributedString","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/+(_:_:)-91v88","title":"static func + (NSAttributedString, String) -> NSAttributedString","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/+=(_:_:)-1zw0m","title":"static func += (inout NSAttributedString, String)","type":"op"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/+=(_:_:)-ag9a","title":"static func += (inout NSAttributedString, NSAttributedString)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/applyingattributes(_:)","title":"func applyingAttributes([Key : Any]) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/capitalized()","title":"func capitalized() -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/color(_:)","title":"func color(NSUIColor) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/font(_:)","title":"func font(NSUIFont) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/height(withconstrainedwidth:)","title":"func height(withConstrainedWidth: CGFloat) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/height(withconstrainedwidth:font:maxnumberoflines:linebreakmode:)","title":"func height(withConstrainedWidth: CGFloat, font: NSUIFont, maxNumberOfLines: Int, lineBreakMode: NSLineBreakMode) -> CGFloat","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/link(_:)","title":"func link(URL) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/lowercased()","title":"func lowercased() -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/range(of:)","title":"func range(of: String) -> NSRange","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/removingattributes(_:)","title":"func removingAttributes([Key]) -> NSAttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/uppercased()","title":"func uppercased() -> NSAttributedString","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-2ely5","title":"subscript(Int) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-2zb54","title":"subscript(ClosedRange<Int>) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-3vuj0","title":"subscript(PartialRangeUpTo<Int>) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-4inb6","title":"subscript(PartialRangeThrough<Int>) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-6jcnr","title":"subscript(Range<Int>) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-75clr","title":"subscript(StringLiteralType) -> NSAttributedString?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-8umml","title":"subscript(NSRange) -> NSAttributedString","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring\/subscript(_:)-ezm5","title":"subscript(PartialRangeFrom<Int>) -> NSAttributedString","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsattributedstring","title":"NSAttributedString","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/sentence","title":"static var sentence: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/word","title":"static var word: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/sentences(_:)-37y3f","title":"static func sentences(Int) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/sentences(_:)-61kc9","title":"static func sentences(ClosedRange<Int>) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/sentences(_:)-62ysj","title":"static func sentences(Range<Int>) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/words(_:)-4a92l","title":"static func words(Range<Int>) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/words(_:)-4e9ng","title":"static func words(ClosedRange<Int>) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/loremipsum\/words(_:)-8gu92","title":"static func words(Int) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/loremipsum","title":"loremIpsum","type":"struct"},{"title":"Predicate","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsexpression\/init(_:_:)","title":"init(String, Any...)","type":"init"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsexpression","title":"NSExpression","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/init(and:)","title":"init(and: [NSPredicate])","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/init(not:)","title":"init(not: NSPredicate)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/init(or:)","title":"init(or: [NSPredicate])","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/and(_:)","title":"static func and([NSPredicate]) -> NSCompoundPredicate","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/not(_:)","title":"static func not(NSPredicate) -> NSCompoundPredicate","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate\/or(_:)","title":"static func or([NSPredicate]) -> NSCompoundPredicate","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscompoundpredicate","title":"NSCompoundPredicate","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:value:)-28tm0","title":"init<R, C>(KeyPath<R, C>, Operator, value: C)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:value:)-29yt0","title":"init<R, C>(KeyPath<R, C?>, Operator, value: C)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:value:options:)-39i7z","title":"init<R>(KeyPath<R, String>, Operator, value: String, options: Options)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:value:options:)-5p3a7","title":"init<R>(KeyPath<R, String?>, Operator, value: String, options: Options)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:values:)-3i2kh","title":"init<R, C>(KeyPath<R, C?>, Operator, values: [C])","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:values:)-56v6r","title":"init<R, C>(KeyPath<R, C>, Operator, values: [C])","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:values:options:)-43ksc","title":"init<R>(KeyPath<R, String>, Operator, values: [String], options: Options)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:_:values:options:)-4awvu","title":"init<R>(KeyPath<R, String?>, Operator, values: [String], options: Options)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/init(_:options:)","title":"init(ComparisonExpression, options: Options)","type":"init"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/options\/predicateformat","title":"var predicateFormat: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate\/options","title":"NSComparisonPredicate.Options","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation\/nscomparisonpredicate","title":"NSComparisonPredicate","type":"extension"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/modifier","title":"ComparisonExpression.Modifier","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/operator","title":"ComparisonExpression.Operator","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/comparisonexpression\/options","title":"ComparisonExpression.Options","type":"typealias"}],"path":"\/documentation\/fzswiftutils\/comparisonexpression","title":"ComparisonExpression","type":"struct"},{"title":"Progress","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/autoupdateestimatedtimeremaining","title":"var autoUpdateEstimatedTimeRemaining: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/identifier","title":"var identifier: Any?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/addfileprogress(url:kind:)","title":"func addFileProgress(url: URL, kind: FileOperationKind)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/updateestimatedtimeremaining()","title":"func updateEstimatedTimeRemaining()","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/updateestimatedtimeremaining(datestarted:completedunits:)","title":"func updateEstimatedTimeRemaining(dateStarted: Date, completedUnits: Int64?)","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/updateestimatedtimeremaining(timeelapsed:completedunits:)","title":"func updateEstimatedTimeRemaining(timeElapsed: TimeInterval, completedUnits: Int64?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/progress\/file(url:kind:completed:size:)","title":"static func file(url: URL, kind: Progress.FileOperationKind, completed: DataSize?, size: DataSize?) -> Progress","type":"method"}],"path":"\/documentation\/fzswiftutils\/foundation\/progress","title":"Progress","type":"extension"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/unfinishedprogressstate\/completedunitcount","title":"var completedUnitCount: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/unfinishedprogressstate\/fractioncompleted","title":"var fractionCompleted: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/unfinishedprogressstate\/totalunitcount","title":"var totalUnitCount: Int64","type":"property"}],"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/unfinishedprogressstate","title":"MutableProgress.ProgressState.UnfinishedProgressState","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/completedunitcount","title":"var completedUnitCount: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/estimatedtimeremaining","title":"var estimatedTimeRemaining: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/fractioncompleted","title":"var fractionCompleted: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/throughput","title":"var throughput: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/totalunitcount","title":"var totalUnitCount: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class\/unfinished","title":"var unfinished: MutableProgress.ProgressState.UnfinishedProgressState","type":"property"}],"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.class","title":"MutableProgress.ProgressState","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/children","title":"var children: [Progress]","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/completedunitcount","title":"var completedUnitCount: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/fractioncompleted","title":"var fractionCompleted: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/progressstate-swift.property","title":"var progressState: ProgressState","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/totalunitcount","title":"var totalUnitCount: Int64","type":"property"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/userinfo","title":"var userInfo: [ProgressUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/addchild(_:)","title":"func addChild(Progress)","type":"method"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/addchild(_:withpendingunitcount:)","title":"func addChild(Progress, withPendingUnitCount: Int64)","type":"method"},{"path":"\/documentation\/fzswiftutils\/mutableprogress\/removechild(_:)","title":"func removeChild(Progress)","type":"method"}],"path":"\/documentation\/fzswiftutils\/mutableprogress","title":"MutableProgress","type":"class"},{"title":"Value Type","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(_:countstyle:)","title":"init<Value>(Value, countStyle: CountStyle)","type":"init"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(petabytes:terabytes:gigabytes:megabytes:kilobytes:bytes:countstyle:)","title":"init(petabytes: Double, terabytes: Double, gigabytes: Double, megabytes: Double, kilobytes: Double, bytes: Int, countStyle: CountStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/bytes","title":"var bytes: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/countstyle-swift.property","title":"var countStyle: CountStyle","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/formatter","title":"var formatter: ByteCountFormatter","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/gigabytes","title":"var gigabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/kilobytes","title":"var kilobytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/megabytes","title":"var megabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/petabytes","title":"var petabytes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/datasize\/terabytes","title":"var terabytes: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/string(allowedunits:includesunit:)","title":"func string(allowedUnits: ByteCountFormatter.Units, includesUnit: Bool) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/string(for:includesunit:)","title":"func string(for: Unit, includesUnit: Bool) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/countstyle-swift.typealias","title":"DataSize.CountStyle","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/zero-3ql3x","title":"static var zero: DataSize","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/bytes(_:countstyle:)","title":"static func bytes(Int, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/gigabytes(_:countstyle:)","title":"static func gigabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/kilobytes(_:countstyle:)","title":"static func kilobytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/megabytes(_:countstyle:)","title":"static func megabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/petabytes(_:countstyle:)","title":"static func petabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/terabytes(_:countstyle:)","title":"static func terabytes(Double, countStyle: CountStyle) -> DataSize","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/byte","title":"case byte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/exabyte","title":"case exabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/gigabyte","title":"case gigabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/kilobyte","title":"case kilobyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/megabyte","title":"case megabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/petabyte","title":"case petabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/terabyte","title":"case terabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/yottabyte","title":"case yottabyte","type":"case"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/zettabyte","title":"case zettabyte","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-4mme7","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-7f6fm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-4mme7","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:)-7f6fm","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datasize\/unit","title":"DataSize.Unit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+(_:_:)","title":"static func + (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+=(_:_:)-2sbc","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+=(_:_:)-8mlic","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-(_:_:)","title":"static func - (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-=(_:_:)-4pr39","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-=(_:_:)-6xslj","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/zero-9pu9z","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/fzswiftutils\/datasize\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+(_:_:)","title":"static func + (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+=(_:_:)-2sbc","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/+=(_:_:)-8mlic","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-(_:_:)","title":"static func - (`Self`, `Self`) -> DataSize","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-=(_:_:)-4pr39","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/-=(_:_:)-6xslj","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/zero-9pu9z","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/fzswiftutils\/datasize\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-49z16","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-82onh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-10glf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-2di32","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-4ob0y","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-6yy1s","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-fx2","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-2zy0f","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-43vmd","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-493hy","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-8nkce","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(max:)","title":"func clamp(max: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(min:)","title":"func clamp(min: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-6be1n","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-6rsr1","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-96zmv","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(max:)","title":"func clamped(max: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(min:)","title":"func clamped(min: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-61roz","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-svgs","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-wa4m","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isbetween(_:)-5m8hu","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isbetween(_:)-8rbaa","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-1eigr","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-73yyu","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-3miuf","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-4qrye","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-49z16","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:)-82onh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-10glf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-2di32","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-4ob0y","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-6yy1s","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_(_:_:)-fx2","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-2zy0f","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-43vmd","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-493hy","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datasize\/_=(_:_:)-8nkce","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(max:)","title":"func clamp(max: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(min:)","title":"func clamp(min: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-6be1n","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-6rsr1","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamp(to:)-96zmv","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(max:)","title":"func clamped(max: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(min:)","title":"func clamped(min: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-61roz","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-svgs","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/clamped(to:)-wa4m","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isbetween(_:)-5m8hu","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isbetween(_:)-8rbaa","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-1eigr","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthan(_:)-73yyu","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-3miuf","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/islessthanorequal(_:)-4qrye","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/datasize\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-1yhvx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-49f95","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-1yhvx","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:)-49f95","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datasize\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datasize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datasize\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/fzswiftutils\/datasize\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datasize","title":"DataSize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(nanoseconds:milliseconds:seconds:minutes:hours:days:weeks:months:years:)","title":"init(nanoseconds: Double, milliseconds: Double, seconds: Double, minutes: Double, hours: Double, days: Double, weeks: Double, months: Double, years: Double)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(dateinterval:)","title":"init(dateInterval: DateInterval)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(from:to:)","title":"init(from: Date, to: Date)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/nanoseconds(_:)","title":"static func nanoseconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/milliseconds(_:)","title":"static func milliseconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/seconds(_:)","title":"static func seconds(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/minutes(_:)","title":"static func minutes(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/hours(_:)","title":"static func hours(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/days(_:)","title":"static func days(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/weeks(_:)","title":"static func weeks(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/months(_:)","title":"static func months(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/years(_:)","title":"static func years(Double) -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/zero","title":"static var zero: TimeDuration","type":"property"},{"title":"Values","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/nanoseconds","title":"var nanoseconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/milliseconds","title":"var milliseconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/minutes","title":"var minutes: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/hours","title":"var hours: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/days","title":"var days: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/weeks","title":"var weeks: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/months","title":"var months: Double","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/years","title":"var years: Double","type":"property"},{"title":"String","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/stringcompact","title":"var stringCompact: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string(for:style:)","title":"func string(for: Unit, style: DateComponentsFormatter.UnitsStyle) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/string(allowedunits:style:)","title":"func string(allowedUnits: Units, style: DateComponentsFormatter.UnitsStyle) -> String","type":"method"},{"title":"Date","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/startdate(end:)","title":"func startDate(end: Date) -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/enddate(start:)","title":"func endDate(start: Date) -> Date","type":"method"},{"title":"Enumeration","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/day","title":"case day","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hour","title":"case hour","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/millisecond","title":"case millisecond","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/minute","title":"case minute","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/month","title":"case month","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/nanosecond","title":"case nanoSecond","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/second","title":"case second","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/week","title":"case week","type":"case"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/year","title":"case year","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/nextcase","title":"var nextCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/nextcaselooping","title":"var nextCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/previouscase","title":"var previousCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/previouscaselooping","title":"var previousCaseLooping: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/randomcase","title":"var randomCase: Self?","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/randomnewcase","title":"var randomNewCase: Self?","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-5fh3q","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-9n95l","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-5fh3q","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:)-9n95l","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/unit","title":"TimeDuration.Unit","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(unit:)","title":"init(unit: Unit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/all","title":"static let all: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/allcompact","title":"static let allCompact: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/alldetailed","title":"static let allDetailed: Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/day","title":"static let day: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/hour","title":"static let hour: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/millisecond","title":"static let millisecond: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/minute","title":"static let minute: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/month","title":"static let month: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/nanosecond","title":"static let nanoSecond: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/second","title":"static let second: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/week","title":"static let week: TimeDuration.Units","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/year","title":"static let year: TimeDuration.Units","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-4yqh9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-73csj","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-4yqh9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:)-73csj","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(all:)","title":"func contains(all: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/contains(any:)","title":"func contains(any: [Self.Element]) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/elements()","title":"func elements() -> AnySequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/units\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/units","title":"TimeDuration.Units","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/seconds","title":"case seconds","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-20jz5","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-gpny","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-20jz5","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:)-gpny","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration\/codingkeys","title":"TimeDuration.CodingKeys","type":"enum"},{"title":"Timer","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/init(timeinterval:repeats:block:)","title":"init(timeInterval: TimeDuration, repeats: Bool, block: ((Timer) -> Void))","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/init(timeinterval:target:selector:userinfo:repeats:)","title":"init(timeInterval: TimeDuration, target: Any, selector: Selector, userInfo: Any?, repeats: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/init(timeinterval:target:selector:userinfo:repeats:)","title":"init(timeInterval: TimeDuration, target: Any, selector: Selector, userInfo: Any?, repeats: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/init(fireat:interval:target:selector:userinfo:repeats:)","title":"init(fireAt: Date, interval: TimeDuration, target: Any, selector: Selector, userInfo: Any?, repeats: Bool)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/scheduledtimer(withtimeinterval:repeats:block:)","title":"static func scheduledTimer(withTimeInterval: TimeDuration, repeats: Bool, block: ((Timer) -> Void)) -> Timer","type":"method"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/scheduledtimer(timeinterval:target:selector:userinfo:repeats:)","title":"static func scheduledTimer(timeInterval: TimeDuration, target: Any, selector: Selector, userInfo: Any?, repeats: Bool) -> Timer","type":"method"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-3uwh9","title":"static func += (inout `Self`, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(_:)-3wm2l","title":"init(Double)","type":"init"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(_:)-65u3c","title":"init(CMTime)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:_:)","title":"static func + (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-3zzce","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-7xz04","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-(_:_:)","title":"static func - (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-79gzv","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-8ess3","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+(_:_:)","title":"static func + (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-3zzce","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/+=(_:_:)-7xz04","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-(_:_:)","title":"static func - (`Self`, `Self`) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-79gzv","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/-=(_:_:)-8ess3","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-3wjvb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-5anev","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-2dzek","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-3rl9b","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-75re3","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-791ub","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-8fda6","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-3xdkl","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-450p7","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-4azk3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-ypsw","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-1i14u","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-3mn9a","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-91o21","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-2turk","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-8oldc","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-9jhhm","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isbetween(_:)-45e3t","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isbetween(_:)-4d9fg","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-27dgc","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-87r51","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-6c02u","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-81dwc","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-3wjvb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:)-5anev","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-2dzek","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-3rl9b","title":"static func > (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-75re3","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-791ub","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_(_:_:)-8fda6","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-3xdkl","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-450p7","title":"static func <= (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-4azk3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/_=(_:_:)-ypsw","title":"static func >= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-1i14u","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-3mn9a","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamp(to:)-91o21","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-2turk","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-8oldc","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/clamped(to:)-9jhhm","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isbetween(_:)-45e3t","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isbetween(_:)-4d9fg","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-27dgc","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthan(_:)-87r51","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-6c02u","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/islessthanorequal(_:)-81dwc","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/timeduration\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/timeduration\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/*(_:_:)","title":"static func * (TimeDuration, Int) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/*=(_:_:)","title":"static func *= (inout Self, Int)","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/(_:_:)-7i12i","title":"static func \/ (TimeDuration, TimeDuration) -> Double","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/(_:_:)-9meu8","title":"static func \/ (TimeDuration, Int) -> TimeDuration","type":"op"},{"path":"\/documentation\/fzswiftutils\/timeduration\/\/=(_:_:)","title":"static func \/= (inout Self, Int)","type":"op"}],"path":"\/documentation\/fzswiftutils\/timeduration\/durationprotocol-implementations","title":"DurationProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-2ymkz","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-7tq5o","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-2ymkz","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:)-7tq5o","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/timeduration\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/timeduration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/timeduration","title":"TimeDuration","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamp(max:)","title":"func clamp(max: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamp(min:)","title":"func clamp(min: Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamp(to:)-11nut","title":"func clamp(to: PartialRangeFrom<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamp(to:)-248mj","title":"func clamp(to: PartialRangeUpTo<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamp(to:)-7j0o","title":"func clamp(to: ClosedRange<Self>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamped(max:)","title":"func clamped(max: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamped(min:)","title":"func clamped(min: Self) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamped(to:)-4tnuf","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamped(to:)-5l67i","title":"func clamped(to: PartialRangeUpTo<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/clamped(to:)-bxzj","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/isbetween(_:)-1uq7","title":"func isBetween(ClosedRange<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/isbetween(_:)-8tkt1","title":"func isBetween(Range<Self>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/islessthan(_:)-86zed","title":"func isLessThan(any Comparable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/islessthan(_:)-9ebpt","title":"func isLessThan((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/islessthanorequal(_:)-9rcv3","title":"func isLessThanOrEqual((any Comparable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/islessthanorequal(_:)-pvcw","title":"func isLessThanOrEqual(any Comparable) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/_(_:_:)-3gyhs","title":"static func < (Self, any Comparable) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/comparable\/_(_:_:)-4uoei","title":"static func < (Self, (any Comparable)?) -> Bool","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/comparable\/comparable-implementations","title":"Comparable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/comparable","title":"Comparable","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/equatable\/isequal(_:)-6xns2","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/equatable\/isequal(_:)-m518","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/equatable\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/equatable","title":"Equatable","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/partialkeypath\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/partialkeypath\/isequal(_:)","title":"func isEqual(PartialKeyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/partialkeypath\/islessthan(_:)","title":"func isLessThan(PartialKeyPath<Root>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/partialkeypath\/islessthanorequal(_:)","title":"func isLessThanOrEqual(PartialKeyPath<Root>) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/partialkeypath","title":"PartialKeyPath","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/optional\/optional","title":"var optional: `Self`","type":"property"}],"path":"\/documentation\/fzswiftutils\/swift\/optional\/optionalprotocol-implementations","title":"OptionalProtocol Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/optional","title":"Optional","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/call(_:values:)-5b1kg","title":"func call<V>(String, values: [Any?]) -> V?","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/call(_:values:)-4z5n2","title":"func call(String, values: [Any?]) -> Any?","type":"method"}],"title":"KeyValueCodable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/call(_:values:)-4lai5","title":"func call(String, values: [Any?]) -> Any?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/setvalue(_:for:)-8m0ay","title":"func setValue(Any?, for: String)","type":"method"}],"title":"KeyValueCodable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/setvalue(_:for:)-7fwpq","title":"func setValue(Any?, for: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/value(for:)-2rlrj","title":"func value(for: String) -> Any?","type":"method"},{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/value(for:)-5pz5z","title":"func value<V>(for: String) -> V?","type":"method"}],"title":"KeyValueCodable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/value(for:)-92kkc","title":"func value(for: String) -> Any?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/subscript(key:)-1x7ns","title":"subscript<V>(key _: String) -> V?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/keyvaluecodable\/subscript(key:)-590m8","title":"subscript(key _: String) -> Any?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/keyvaluecodable","title":"KeyValueCodable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-7o8yl","title":"var typeName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-5y402","title":"static var typeName: String","type":"property"}],"title":"NameDescribable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-2s6yx","title":"var typeName: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-7o8yl","title":"var typeName: String","type":"property"},{"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-5y402","title":"static var typeName: String","type":"property"}],"title":"NameDescribable Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/namedescribable\/typename-2wcju","title":"static var typeName: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/namedescribable","title":"NameDescribable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/optionalprotocol\/wrapped","title":"Wrapped","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/optionalprotocol\/optional","title":"var optional: Wrapped?","type":"property"}],"path":"\/documentation\/fzswiftutils\/optionalprotocol","title":"OptionalProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/outlineitem\/children","title":"var children: [Self]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/outlineitem\/isexpandable-3jqi1","title":"var isExpandable: Bool","type":"property"}],"title":"OutlineItem Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/outlineitem\/isexpandable-65ml","title":"var isExpandable: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/outlineitem","title":"OutlineItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/children","title":"var children: [any ExpandingOutlineItem]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpandable-6x79k","title":"var isExpandable: Bool","type":"property"}],"title":"ExpandingOutlineItem Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpandable-1x2dd","title":"var isExpandable: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/isexpanded","title":"var isExpanded: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/collapseall(includingsubchildren:)","title":"func collapseAll(includingSubchildren: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/expandingoutlineitem\/expandall(includingsubchildren:)","title":"func expandAll(includingSubchildren: Bool)","type":"method"}],"path":"\/documentation\/fzswiftutils\/expandingoutlineitem","title":"ExpandingOutlineItem","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausable\/ispaused","title":"var isPaused: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/pausable\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/fzswiftutils\/pausable\/resume()","title":"func resume()","type":"method"}],"path":"\/documentation\/fzswiftutils\/pausable","title":"Pausable","type":"protocol"},{"title":"PropertyWrappers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevaluetimestamp","title":"DateValueTimestamp","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/datevalueiso8601","title":"DateValueISO8601","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/datevalueyearmonthday","title":"DateValueYearMonthDay","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultzero","title":"DefaultZero","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultfalse","title":"DefaultFalse","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaulttrue","title":"DefaultTrue","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultemptyarray","title":"DefaultEmptyArray","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/defaultemptydictionary","title":"DefaultEmptyDictionary","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/init(wrappedvalue:)","title":"init(wrappedValue: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/wrappedvalue","title":"var wrappedValue: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/datevalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datevalue\/==(_:_:)","title":"static func == (DateValue<Formatter>, DateValue<Formatter>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-4ga27","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-5tgx9","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/datevalue\/==(_:_:)","title":"static func == (DateValue<Formatter>, DateValue<Formatter>) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-4ga27","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:)-5tgx9","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevalue\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/datevalue","title":"DateValue","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/rawvalue","title":"RawValue","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/decode(_:)","title":"static func decode(RawValue) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy\/encode(_:)","title":"static func encode(Date) -> RawValue","type":"method"}],"path":"\/documentation\/fzswiftutils\/datevaluecodablestrategy","title":"DateValueCodableStrategy","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/init(wrappedvalue:)","title":"init(wrappedValue: Default.DefaultValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/wrappedvalue","title":"var wrappedValue: Default.DefaultValue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-4o19o","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-9g795","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-4o19o","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:)-9g795","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/defaultcodable\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/defaultcodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/defaultcodable","title":"DefaultCodable","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy\/defaultvalue-swift.associatedtype","title":"DefaultValue","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy\/defaultvalue-swift.type.property","title":"static var defaultValue: DefaultValue","type":"property"}],"path":"\/documentation\/fzswiftutils\/defaultcodablestrategy","title":"DefaultCodableStrategy","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/defaultemptyarraystrategy\/defaultvalue","title":"static var defaultValue: [T]","type":"property"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/defaultemptyarraystrategy","title":"PropertyWrapperStrategies.DefaultEmptyArrayStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/defaultemptydictionarystrategy\/defaultvalue","title":"static var defaultValue: [Key : Value]","type":"property"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/defaultemptydictionarystrategy","title":"PropertyWrapperStrategies.DefaultEmptyDictionaryStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/false\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/false","title":"PropertyWrapperStrategies.False","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/iso8601\/decode(_:)","title":"static func decode(String) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/iso8601\/encode(_:)","title":"static func encode(Date) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/iso8601","title":"PropertyWrapperStrategies.ISO8601","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/timestampstrategy\/decode(_:)","title":"static func decode(TimeInterval) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/timestampstrategy\/encode(_:)","title":"static func encode(Date) -> TimeInterval","type":"method"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/timestampstrategy","title":"PropertyWrapperStrategies.TimestampStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/true\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/true","title":"PropertyWrapperStrategies.True","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/yearmonthday\/decode(_:)","title":"static func decode(String) throws -> Date","type":"method"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/yearmonthday\/encode(_:)","title":"static func encode(Date) -> String","type":"method"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/yearmonthday","title":"PropertyWrapperStrategies.YearMonthDay","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/zero\/defaultvalue","title":"static var defaultValue: Int","type":"property"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies\/zero","title":"PropertyWrapperStrategies.Zero","type":"struct"}],"path":"\/documentation\/fzswiftutils\/propertywrapperstrategies","title":"PropertyWrapperStrategies","type":"struct"},{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/associatedvalue","title":"AssociatedValue","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/hook\/original","title":"var original: MethodSignature","type":"property"}],"path":"\/documentation\/fzswiftutils\/hook","title":"Hook","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/abc","title":"ABC","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/approximateequatable\/epsilon","title":"Epsilon","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/approximateequatable\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: Self, epsilon: Epsilon) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/approximateequatable","title":"ApproximateEquatable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/associatedvaluesprovider\/associatedvalue","title":"var associatedValue: AssociatedValue<Self>","type":"property"}],"path":"\/documentation\/fzswiftutils\/associatedvaluesprovider","title":"AssociatedValuesProvider","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/fileconvertible\/init(contentsof:)-1bxrf","title":"init(contentsOf: URL) throws","type":"init"}],"title":"FileConvertible Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/fileconvertible\/init(contentsof:)-bfdu","title":"init(contentsOf: URL) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/fileconvertible\/write(to:options:)-4do83","title":"func write(to: URL, options: Data.WritingOptions) throws","type":"method"}],"title":"FileConvertible Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/fileconvertible\/write(to:options:)-749n3","title":"func write(to: URL, options: Data.WritingOptions) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/fileconvertible","title":"FileConvertible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/floatingpointinitializable\/init(_:)-7yufw","title":"init(Double)","type":"init"},{"path":"\/documentation\/fzswiftutils\/floatingpointinitializable\/init(_:)-7zur9","title":"init(Float)","type":"init"}],"path":"\/documentation\/fzswiftutils\/floatingpointinitializable","title":"FloatingPointInitializable","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/*(_:_:)","title":"static func * (Self, Self) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/*=(_:_:)-5lx9b","title":"static func *= (inout Self, Self)","type":"op"}],"title":"MultiplicativeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/*=(_:_:)-192kg","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/\/(_:_:)","title":"static func \/ (Self, Self) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/\/=(_:_:)-7byvs","title":"static func \/= (inout Self, Self)","type":"op"}],"title":"MultiplicativeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic\/\/=(_:_:)-hlri","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/multiplicativearithmetic","title":"MultiplicativeArithmetic","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/option\/optionkey-swift.associatedtype","title":"OptionKey","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/option\/optionkey-swift.property","title":"var optionKey: OptionKey","type":"property"}],"path":"\/documentation\/fzswiftutils\/option","title":"Option","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weakreference\/t","title":"T","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weakreference\/object","title":"var object: T?","type":"property"}],"path":"\/documentation\/fzswiftutils\/weakreference","title":"WeakReference","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(_:uniquingkeyswith:)","title":"init<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(dict:)","title":"init(dict: [Key : Value])","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Value, Key)...)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(grouping:by:)","title":"init<S>(grouping: S, by: (S.Element) throws -> Key) rethrows","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(minimumcapacity:)","title":"init(minimumCapacity: Int)","type":"init"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(uniquekeyswithvalues:)","title":"init<S>(uniqueKeysWithValues: S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/capacity","title":"var capacity: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/first","title":"var first: BaseDictionary.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/keys","title":"var keys: [Key]","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/values","title":"var values: [Value]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/edit(_:)","title":"func edit((inout [Key : Value]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/filter(_:)","title":"func filter(((_ key: Key, _ value: Value) throws -> Bool)) rethrows -> [Key : Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/foreach(_:)","title":"func forEach(((key: Key, value: Value)) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(forkey:)","title":"func index(forKey: Key) -> Dictionary<Key, Value>.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/map(_:)","title":"func map(((_ key: Key, _ value: Value) throws -> Value)) rethrows -> [Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/merge(_:uniquingkeyswith:)-4wdk3","title":"func merge([Key : Value], uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/merge(_:uniquingkeyswith:)-6g849","title":"func merge<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/merging(_:uniquingkeyswith:)-3jit8","title":"func merging([Key : Value], uniquingKeysWith: (Value, Value) throws -> Value) rethrows -> [Key : Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/merging(_:uniquingkeyswith:)-q522","title":"func merging<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows -> [Key : Value]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelement()","title":"func randomElement() -> `Self`.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelement(using:)-7o5tb","title":"func randomElement<T>(using: inout T) -> `Self`.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/remove(at:)","title":"func remove(at: Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/removevalue(forkey:)","title":"func removeValue(forKey: Key)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/updatevalue(_:forkey:)","title":"func updateValue(Value, forKey: Key) -> Value?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-1lir1","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:default:)","title":"subscript(Key, default _: () -> Value) -> Value","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/element","title":"BaseDictionary.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/endindex","title":"var endIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/startindex","title":"var startIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/grouped(by:)-4k36u","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/grouped(by:)-98l2f","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(after:)","title":"func index(after: Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelement(using:)-5we9h","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(by:)-30nmw","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(by:)-6051g","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-834bz","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-88iar","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-8e50n","title":"subscript(Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-8n3nw","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-9xhn3","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/endindex","title":"var endIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/startindex","title":"var startIndex: Dictionary<Key, Value>.Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/grouped(by:)-4k36u","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/grouped(by:)-98l2f","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/index(after:)","title":"func index(after: Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelement(using:)-5we9h","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(by:)-30nmw","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(by:)-6051g","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-834bz","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-88iar","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-8e50n","title":"subscript(Dictionary<Key, Value>.Index) -> Dictionary<Key, Value>.Element","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-8n3nw","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(_:)-9xhn3","title":"subscript([Index]) -> [Element]","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:)-26cm9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:)-50uqg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:)-26cm9","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:)-50uqg","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-1va3u","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-2yebj","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-4wjn0","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentcompactmap(withpriority:_:)-4jeks","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentcompactmap(withpriority:_:)-5tpx4","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentflatmap(withpriority:_:)-5jtt2","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentflatmap(withpriority:_:)-7c92l","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentmap(withpriority:_:)-4ficd","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentmap(withpriority:_:)-78h4y","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/contains(_:)","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-2il9b","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-56ads","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-5owto","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-1cqpt","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-5up8v","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-68q10","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-5wzms","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-69bwf","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-6a87x","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-8q7p3","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(using:)-3mzfi","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(using:)-5fmsh","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/uniqued(by:)-47t4n","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/uniqued(by:)-5rbon","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-1va3u","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-2yebj","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compactmap(_:)-4wjn0","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentcompactmap(withpriority:_:)-4jeks","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentcompactmap(withpriority:_:)-5tpx4","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentflatmap(withpriority:_:)-5jtt2","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentflatmap(withpriority:_:)-7c92l","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentmap(withpriority:_:)-4ficd","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/concurrentmap(withpriority:_:)-78h4y","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/contains(_:)","title":"func contains<T>(KeyPath<Element, T?>) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-2il9b","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-56ads","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/flatmap(_:)-5owto","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indexes(of:)","title":"func indexes<T>(of: KeyPath<Element, T?>) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-1cqpt","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-5up8v","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:)-68q10","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-5wzms","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-69bwf","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-6a87x","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:_:)-8q7p3","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(using:)-3mzfi","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/sorted(using:)-5fmsh","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/uniqued(by:)-47t4n","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/uniqued(by:)-5rbon","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/basedictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/fzswiftutils\/basedictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/basedictionary","title":"BaseDictionary","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/+(_:_:)-2700t","title":"static func + (Options, Options) -> Options","type":"op"},{"path":"\/documentation\/fzswiftutils\/options\/+(_:_:)-3os28","title":"static func + (Options, Element) -> Options","type":"op"},{"path":"\/documentation\/fzswiftutils\/options\/+=(_:_:)-34usu","title":"static func += (inout Options, Element)","type":"op"},{"path":"\/documentation\/fzswiftutils\/options\/+=(_:_:)-52ngl","title":"static func += (inout Options, Options)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/init()","title":"init()","type":"init"},{"path":"\/documentation\/fzswiftutils\/options\/init(_:)-7ne7y","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/options\/init(arrayliteral:)-8oqdo","title":"init(arrayLiteral: Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-7v5rv","title":"func compactMap<ElementOfResult>((Element) throws -> ElementOfResult) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(_:)","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> Options<Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formintersection(_:)","title":"func formIntersection(Options<Element>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Options<Element>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formunion(_:)","title":"func formUnion(Options<Element>)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/insert(_:)-2eekn","title":"func insert(Element) -> (inserted: Bool, memberAfterInsert: Element)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/insert(_:)-5txkc","title":"func insert<S>(S)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/intersection(_:)","title":"func intersection(Options<Element>) -> Options<Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/makeiterator()","title":"func makeIterator() -> Set<Element>.Iterator","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/remove(_:)","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/symmetricdifference(_:)","title":"func symmetricDifference(Options<Element>) -> Options<Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/union(_:)","title":"func union(Options<Element>) -> Options<Element>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/update(with:)","title":"func update(with: Element) -> Element?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(_:)","title":"subscript(Index) -> Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/index","title":"Options.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-5m1a6","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-7pwum","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-9qnin","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-p2qk","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(all:)-5hwrj","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(any:)-9biiv","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flattened()-7oia1","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flattened()-91sne","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/grouped(by:)-1yjt0","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/grouped(by:)-1zk8u","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-4v6av","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-5fp5u","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-9oshu","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(by:)-7pabi","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(by:)-9pe17","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-2d84r","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-4yhsk","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-77umx","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-99fl0","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/options\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/anyflattened()","title":"func anyFlattened() -> [Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asynccompactmap(_:completion:)","title":"func asyncCompactMap<R>((Element, (R?) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncmap(_:completion:)","title":"func asyncMap<R>((Element, (R) -> Void) -> Void, completion: ([R]) -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-5m1a6","title":"func average() -> Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-7pwum","title":"func average() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-9qnin","title":"func average() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/average()-p2qk","title":"func average() -> Double","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(all:)-5hwrj","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(any:)-9biiv","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flattened()-7oia1","title":"func flattened<V>() -> [V]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flattened()-91sne","title":"func flattened() -> [Element.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/grouped(by:)-1yjt0","title":"func grouped<Key>(by: (Element) throws -> Key) rethrows -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/grouped(by:)-1zk8u","title":"func grouped<Key>(by: KeyPath<Element, Key>) -> [Key : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-4v6av","title":"func joined(separator: AttributedString) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-5fp5u","title":"func joined(separator: String) -> AttributedString","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-9oshu","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement(excluding:)","title":"func randomElement(excluding: [Element]) -> Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:)","title":"func randomElements(amount: Int) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:excluding:unique:)","title":"func randomElements(amount: Int, excluding: [Element], unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/randomelements(amount:unique:)","title":"func randomElements(amount: Int, unique: Bool) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(by:)-7pabi","title":"func split<Key>(by: KeyPath<Element, Key>) -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(by:)-9pe17","title":"func split<Key>(by: (Element) throws -> Key) rethrows -> [(key: Key, values: [Element])]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-2d84r","title":"func sum() -> DataSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-4yhsk","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-77umx","title":"func sum() -> Self.Element","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sum()-99fl0","title":"func sum() -> TimeDuration","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/totalsize()","title":"func totalSize() -> CGSize","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/union()","title":"func union() -> CGRect","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/options\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/options\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/fzswiftutils\/options\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/options\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/fzswiftutils\/options\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/tocfdictionary()","title":"func toCFDictionary() -> CFDictionary","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/todictionary()","title":"func toDictionary() -> [String : Any]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/todictionary(encoder:)","title":"func toDictionary(encoder: JSONEncoder) -> [String : Any]","type":"method"}],"path":"\/documentation\/fzswiftutils\/options\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:)-11mhr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:)-3hn5g","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/options\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:)-11mhr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:)-3hn5g","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/options\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-3ln8a","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-5rfvb","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-97gy4","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentcompactmap(withpriority:_:)-3wxqm","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentcompactmap(withpriority:_:)-91evl","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentflatmap(withpriority:_:)-1dnet","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentflatmap(withpriority:_:)-3ncwm","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentmap(withpriority:_:)-1nkb","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentmap(withpriority:_:)-5vcq4","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(all:)-966a","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(any:)-3rk4e","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-16h7g","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-45i33","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-7s04a","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-6aaea","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-800si","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-jbvx","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(from:to:)-3beo4","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(from:to:)-900b7","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(to:)-4482d","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(to:)-5z66j","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-4e7sk","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-743us","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-65ybe","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-97k3j","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-3pib8","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-9lcu4","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-ad2o","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-16rjw","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-4vpb6","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-5o4fi","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-9mlis","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(using:)-2grfx","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(using:)-6dfum","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued(by:)-2ueb0","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued(by:)-8na3m","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/options\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/asset","title":"var asSet: Set<Element>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/ids","title":"var ids: [Element.ID]","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/nonnil","title":"var nonNil: [Element.Wrapped]","type":"property"},{"path":"\/documentation\/fzswiftutils\/options\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asynccompactmap(_:)","title":"func asyncCompactMap<T>((Element) async throws -> T?) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncflatmap(_:)","title":"func asyncFlatMap<T>((Element) async throws -> T) async rethrows -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/clip()","title":"func clip()","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/collect()","title":"func collect() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/collect(completion:)","title":"func collect(completion: ([Element]) -> ())","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-3ln8a","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-5rfvb","title":"func compactMap<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compactmap(_:)-97gy4","title":"func compactMap<T>(KeyPath<Element, T?>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentcompactmap(withpriority:_:)-3wxqm","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async -> T?) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentcompactmap(withpriority:_:)-91evl","title":"func concurrentCompactMap<T>(withPriority: TaskPriority?, (Element) async throws -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentflatmap(withpriority:_:)-1dnet","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentflatmap(withpriority:_:)-3ncwm","title":"func concurrentFlatMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentforeach(withpriority:_:)","title":"func concurrentForEach(withPriority: TaskPriority?, (Element) async -> Void) async","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentmap(withpriority:_:)-1nkb","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async -> T) async -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/concurrentmap(withpriority:_:)-5vcq4","title":"func concurrentMap<T>(withPriority: TaskPriority?, (Element) async throws -> T) async throws -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(all:)-966a","title":"func contains<S>(all: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(any:)-3rk4e","title":"func contains<S>(any: S) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/count(of:)","title":"func count<T>(of: KeyPath<Element, T?>) -> Int","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/difference(to:)","title":"func difference<S>(to: S) -> (removed: [Element], added: [Element])","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-16h7g","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-45i33","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/fill(using:)-7s04a","title":"func fill(using: NSCompositingOperation)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/filter(contains:)","title":"func filter<T>(contains: KeyPath<Element, T?>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/filter(matchingcategory:)","title":"func filter<T>(matchingCategory: CMTypedTag<T>.Category) -> [CMTypedTag<T>]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(_:)","title":"func first<T>(KeyPath<Element, T?>) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(matchingcategory:)","title":"func first<T>(matchingCategory: CMTypedTag<T>.Category) -> CMTypedTag<T>?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/firstvalue(matchingcategory:)","title":"func firstValue<T>(matchingCategory: CMTypedTag<T>.Category) -> T?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-6aaea","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-800si","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/flatmap(_:)-jbvx","title":"func flatMap<T, S>(KeyPath<Element, S>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(for:)","title":"func indexes<S>(for: S) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(of:)","title":"func indexes(of: Element) -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/indexes(where:)","title":"func indexes(where: (Element) throws -> Bool) rethrows -> IndexSet","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(from:to:)-3beo4","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(from:to:)-900b7","title":"func interpolated(from: ClosedRange<Element>, to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(to:)-4482d","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/interpolated(to:)-5z66j","title":"func interpolated(to: ClosedRange<Element>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(by:)","title":"func joined(by: String.JoinOption) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-4e7sk","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/joined(separator:)-743us","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-65ybe","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/map(_:)-97k3j","title":"func map<T>(KeyPath<Element, T>) -> [T]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/numberofoccurences()","title":"func numberOfOccurences() -> [Int : [Element]]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/numberofoccurencesbyelement()","title":"func numberOfOccurencesByElement() -> [Element : Int]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/rawvalues()","title":"func rawValues() -> [Element.RawValue]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-3pib8","title":"func sorted(by: PartialSortingKeyPath<Element>...) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-9lcu4","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:)-ad2o","title":"func sorted(by: [PartialSortingKeyPath<Element>]) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-16rjw","title":"func sorted<Value>(by: ((Element) -> Value?), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-4vpb6","title":"func sorted<Value>(by: ((Element) -> Value), SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-5o4fi","title":"func sorted<Value>(by: KeyPath<Element, Value?>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:_:)-9mlis","title":"func sorted<Value>(by: KeyPath<Element, Value>, SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(by:order:)","title":"func sorted(by: [PartialKeyPath<Element>], order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(using:)-2grfx","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sorted(using:)-6dfum","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/sortedbyoccurences(order:)","title":"func sortedByOccurences(order: SequenceSortOrder) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued()","title":"func uniqued() -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued(by:)-2ueb0","title":"func uniqued<T>(by: (Element) -> T) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/uniqued(by:)-8na3m","title":"func uniqued<T>(by: KeyPath<Element, T>) -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(firstid:)","title":"subscript(firstID _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(id:)","title":"subscript(id _: Element.ID) -> Element?","type":"subscript"},{"path":"\/documentation\/fzswiftutils\/options\/subscript(ids:)","title":"subscript<S>(ids _: S) -> [Element]","type":"subscript"}],"path":"\/documentation\/fzswiftutils\/options\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/init(_:)-38hle","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/fzswiftutils\/options\/init(arrayliteral:)-8f30r","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/options\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/fzswiftutils\/options\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/fzswiftutils\/options\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/options","title":"Options","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/==(_:_:)","title":"static func == (Weak<T>, Weak<T>) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/object","title":"var object: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:)-6a9vr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:)-8salt","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/weak\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:)-6a9vr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:)-8salt","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/weak\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/weak\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/weak","title":"Weak","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/debugprint(indent:leading:_:separator:terminator:)","title":"func debugPrint(indent: Int, leading: String, Any..., separator: String, terminator: String)","type":"func"},{"path":"\/documentation\/fzswiftutils\/debugprint(leading:_:separator:terminator:)","title":"func debugPrint(leading: String, Any..., separator: String, terminator: String)","type":"func"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:)","title":"func getAssociatedValue<T>(key: String, object: AnyObject) -> T?","type":"func"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:initialvalue:)-11x88","title":"func getAssociatedValue<T>(key: String, object: AnyObject, initialValue: () -> T) -> T","type":"func"},{"path":"\/documentation\/fzswiftutils\/getassociatedvalue(key:object:initialvalue:)-3xhj0","title":"func getAssociatedValue<T>(key: String, object: AnyObject, initialValue: () -> T) -> T","type":"func"},{"path":"\/documentation\/fzswiftutils\/getenumcasename(for:)","title":"func getEnumCaseName<T>(for: T) -> String?","type":"func"},{"path":"\/documentation\/fzswiftutils\/print(indent:leading:_:separator:terminator:)","title":"func print(indent: Int, leading: String, Any..., separator: String, terminator: String)","type":"func"},{"path":"\/documentation\/fzswiftutils\/print(leading:_:separator:terminator:)","title":"func print(leading: String, Any..., separator: String, terminator: String)","type":"func"},{"path":"\/documentation\/fzswiftutils\/set(associatedvalue:key:object:)","title":"func set<T>(associatedValue: T?, key: String, object: AnyObject)","type":"func"},{"path":"\/documentation\/fzswiftutils\/set(weakassociatedvalue:key:object:)","title":"func set<T>(weakAssociatedValue: T?, key: String, object: AnyObject)","type":"func"},{"path":"\/documentation\/fzswiftutils\/synchronized(_:_:)","title":"func synchronized<T>(Any, () throws -> T) rethrows -> T","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/!(_:)-7hkh3","title":"func ! (NSPredicate) -> NSPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!(_:)-brwy","title":"func ! <Root>((Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-5emrz","title":"func != <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-5ws46","title":"func != (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-7p3rz","title":"func != <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-8d5cl","title":"func != <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-92966","title":"func != <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/!=(_:_:)-9a5p1","title":"func != <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-42wmy","title":"func !== <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-65esh","title":"func !== (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-87u3b","title":"func !== <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-99dhk","title":"func !== <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/!==(_:_:)-9orbp","title":"func !== <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-13fah","title":"func && <Root>((Root) -> Bool, () -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-1d9kl","title":"func && (NSPredicate, NSPredicate) -> NSCompoundPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-2dpi","title":"func && <Root>((Root) -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/&&(_:_:)-4v0p","title":"func && <Root>(() -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-214ij","title":"func *=* <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-3qvh3","title":"func *=* <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-47rwl","title":"func *=* (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-4frcj","title":"func *=* <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-5n82","title":"func *=* <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-6jp9s","title":"func *=* <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-7y8dy","title":"func *=* <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-8q5q9","title":"func *=* <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*=*(_:_:)-f2y7","title":"func *=* <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-1eune","title":"func *== <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-387tb","title":"func *== <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-3m7co","title":"func *== <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-7ltou","title":"func *== <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-7r8cv","title":"func *== <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-8nzt1","title":"func *== (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-9o1j9","title":"func *== <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-9wiur","title":"func *== <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/*==(_:_:)-woli","title":"func *== <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/+(_:_:)","title":"func + <Key, Value>([Key : Value], [Key : Value]) -> [Key : Value]","type":"op"},{"path":"\/documentation\/fzswiftutils\/+=(_:_:)","title":"func += <Key, Value>(inout [Key : Value], [Key : Value])","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-15wfk","title":"func == <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-1icw9","title":"func == <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-27f2u","title":"func == <Root, Value>((Root) -> Value, (Value, Value)) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-3e34g","title":"func == <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-3yye3","title":"func == <C, R>(KeyPath<R, C>, ClosedRange<C>) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-4126e","title":"func == <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-7mhn6","title":"func == <C, R>(KeyPath<R, C?>, ClosedRange<C>) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-7t8hm","title":"func == <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-80eds","title":"func == <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-80t95","title":"func == <C, R>(KeyPath<R, C?>, ClosedRange<C>) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8ckib","title":"func == <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8jat0","title":"func == <C, R>(KeyPath<R, C>, ClosedRange<C>) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-8kisw","title":"func == <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-950wu","title":"func == (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-9wngz","title":"func == <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==(_:_:)-pu9c","title":"func == <Root, Value>((Root) -> Value?, (Value, Value)) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-3g48o","title":"func ==* <R>(KeyPath<R, String>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-5mmpg","title":"func ==* <R, C>(KeyPath<R, String>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-5ve4e","title":"func ==* <R>(KeyPath<R, String>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-6ax4y","title":"func ==* <R, C>(KeyPath<R, String?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-70c5t","title":"func ==* <R, C>(KeyPath<R, String>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-7tmfu","title":"func ==* <R>(KeyPath<R, String?>, String) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-9dpmp","title":"func ==* <R, C>(KeyPath<R, String?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-9lxs4","title":"func ==* <R>(KeyPath<R, String?>, String) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/==*(_:_:)-xlkw","title":"func ==* (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-3d2w2","title":"func === <C, R, V>(KeyPath<R, C?>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-4u0uy","title":"func === <C, R, V>(KeyPath<R, C>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-6gyv7","title":"func === (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-nqwn","title":"func === <C, R, V>(KeyPath<R, C>, V) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/===(_:_:)-pboo","title":"func === <C, R, V>(KeyPath<R, C?>, V) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-3dy2a","title":"func ± <Value>(Value, Value) -> (Value, Value)","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-5a953","title":"func < (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-5cbsm","title":"func < <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-68c7h","title":"func < <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-6hgks","title":"func > <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-730sf","title":"func > <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-7q61b","title":"func < <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-7we36","title":"func > (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-87gcd","title":"func > <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-8doyl","title":"func > <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-8trl4","title":"func < <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-9foij","title":"func > <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-9hjjz","title":"func < <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-mib4","title":"func < <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_(_:_:)-z933","title":"func > <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-1iagn","title":"func <= <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-2wt4i","title":"func >= <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-39dxj","title":"func <= <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-4y8n","title":"func >= <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-4yrsb","title":"func <= (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-69ze3","title":"func <= <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6i9zn","title":"func >= <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6ru1a","title":"func >= <C, R>(KeyPath<R, C>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6ui50","title":"func <= <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-6zdll","title":"func >= <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-764d3","title":"func >= <C, R>(KeyPath<R, C>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-9hpks","title":"func >= (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-9ovfv","title":"func <= <C, R>(KeyPath<R, C?>, C) -> NSComparisonPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/_=(_:_:)-ck9o","title":"func <= <C, R>(KeyPath<R, C?>, C) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-50fgk","title":"func <<! <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-5nw7d","title":"func >>! <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-7f0qv","title":"func <<! <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__!(_:_:)-7hg2k","title":"func >>! <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-1x15l","title":"func << <Root>(PartialKeyPath<Root>) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-200m4","title":"func >> <Root>(PartialKeyPath<Root>) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-5or4s","title":"func << <Root>([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:)-6izm9","title":"func >> <Root>([PartialKeyPath<Root>]) -> PartialSortingKeyPath<Root>","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1ljy0","title":"func << <Root, Value>((Root) -> Value?, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1rp1i","title":"func << <Root, Value>((Root) -> Value, Value) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-1t9h7","title":"func || <Root>((Root) -> Bool, () -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-2317a","title":"func << <Root, Value>((Root) -> Value?, PartialRangeThrough<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-2bqco","title":"func >< (NSExpression, NSExpression) -> ComparisonExpression","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-36vir","title":"func << <Root, S>((Root) -> S.Element, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3ltm0","title":"func || <Root>((Root) -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3qp9f","title":"func << <Root, S>((Root) -> S.Element?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-3yd62","title":"func << <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-4lu3u","title":"func || <Root>(() -> Bool, (Root) -> Bool) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-4nx77","title":"func << <Root, Value>((Root) -> Value?, ClosedRange<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-53cyv","title":"func << <Root, Value>((Root) -> Value, PartialRangeThrough<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-5jj8o","title":"func << <Root, Value>((Root) -> Value?, PartialRangeUpTo<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-62suo","title":"func << <Root, Value>((Root) -> Value, ClosedRange<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6ad2x","title":"func << <Root, Value>((Root) -> Value, PartialRangeFrom<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6pvyz","title":"func >> <Root, S>((Root) -> S, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-6tvwr","title":"func >> <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-752ir","title":"func << <Root, S>((Root) -> S?, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-7w7ak","title":"func || (NSPredicate, NSPredicate) -> NSCompoundPredicate","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-8lwm1","title":"func << <Root, Value>((Root) -> Value?, PartialRangeFrom<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-8zboe","title":"func >> <Root, S>((Root) -> S?, S.Element) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-965rc","title":"func >> <Root, S>((Root) -> S, S.Element) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__(_:_:)-98ooj","title":"func << <Root, Value>((Root) -> Value, PartialRangeUpTo<Value>) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__~(_:_:)-1v9lk","title":"func <<~ <Root, S>((Root) -> S.Element, S) -> (Root) -> Bool","type":"op"},{"path":"\/documentation\/fzswiftutils\/__~(_:_:)-3oses","title":"func <<~ <Root, S>((Root) -> S.Element?, S) -> (Root) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nsuibezierpath","title":"NSUIBezierPath","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionview","title":"NSUICollectionView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewcompositionallayout","title":"NSUICollectionViewCompositionalLayout","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewcompositionallayoutconfiguration","title":"NSUICollectionViewCompositionalLayoutConfiguration","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewdelegate","title":"NSUICollectionViewDelegate","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewitem","title":"NSUICollectionViewItem","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewlayout","title":"NSUICollectionViewLayout","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicollectionviewlayoutattributes","title":"NSUICollectionViewLayoutAttributes","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuicolor","title":"NSUIColor","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiedgeinsets","title":"NSUIEdgeInsets","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifont","title":"NSUIFont","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifontdescriptor","title":"NSUIFontDescriptor","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuifonttextstyle","title":"NSUIFontTextStyle","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuihostingcontroller","title":"NSUIHostingController","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimage","title":"NSUIImage","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimagesymbolconfiguration","title":"NSUIImageSymbolConfiguration","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiimagesymbolscale","title":"NSUIImageSymbolScale","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuilayoutguide","title":"NSUILayoutGuide","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuinib","title":"NSUINib","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuisegmentedcontrol","title":"NSUISegmentedControl","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuistackview","title":"NSUIStackView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuistoryboard","title":"NSUIStoryboard","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiview","title":"NSUIView","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/nsuiviewcontroller","title":"NSUIViewController","type":"typealias"},{"path":"\/documentation\/fzswiftutils\/vecttt","title":"Vecttt","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/first","title":"case first","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/last","title":"case last","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/next","title":"case next","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/nextlooping","title":"case nextLooping","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/previous","title":"case previous","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/previouslooping","title":"case previousLooping","type":"case"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/random","title":"case random","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-4mrtu","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-8edoc","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/advanceoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-4mrtu","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:)-8edoc","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/advanceoption\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/advanceoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/advanceoption","title":"AdvanceOption","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/build(block:)","title":"static func build(block: (DateFormatComponents.Type) -> String) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day(_:)","title":"static func day(Day) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour(_:)","title":"static func hour(Hour) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute(_:)","title":"static func minute(Minute) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month(_:)","title":"static func month(Month) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter(_:)","title":"static func quarter(Quarter) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second(_:)","title":"static func second(Second) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year(_:)","title":"static func year(Year) -> String","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone(_:)","title":"static func zone(Zone) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/d","title":"case d","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/dd","title":"case dd","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/e","title":"case e","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/eeee","title":"case eeee","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/eeeee","title":"case eeeee","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/eeeeee","title":"case eeeeee","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/f","title":"case f","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:)-3wkin","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:)-88834","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:)-3wkin","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:)-88834","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/day","title":"DateFormatComponents.Day","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/a","title":"case a","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/h","title":"case h","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/h24","title":"case h24","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/hh","title":"case hh","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/hh24","title":"case hh24","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:)-55bne","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:)-7obfs","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:)-55bne","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:)-7obfs","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/hour","title":"DateFormatComponents.Hour","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/m","title":"case m","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/mm","title":"case mm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:)-3wawn","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:)-8rcco","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:)-3wawn","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:)-8rcco","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/minute","title":"DateFormatComponents.Minute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/m","title":"case m","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/mm","title":"case mm","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/mmm","title":"case mmm","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/mmmm","title":"case mmmm","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/mmmmm","title":"case mmmmm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:)-20s97","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:)-2luev","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:)-20s97","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:)-2luev","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/month","title":"DateFormatComponents.Month","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/q","title":"case q","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/qq","title":"case qq","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/qqq","title":"case qqq","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/qqqq","title":"case qqqq","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:)-61erx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:)-66td8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:)-61erx","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:)-66td8","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/quarter","title":"DateFormatComponents.Quarter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/s","title":"case s","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/ss","title":"case ss","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/sss","title":"case sss","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:)-1cfrv","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:)-6ihqr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:)-1cfrv","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:)-6ihqr","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/second","title":"DateFormatComponents.Second","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/y","title":"case y","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/yy","title":"case yy","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/yyyy","title":"case yyyy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:)-1mpb6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:)-6fyxe","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:)-1mpb6","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:)-6fyxe","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/year","title":"DateFormatComponents.Year","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/zabbreviation","title":"case zAbbreviation","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/zzz","title":"case zzz","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/zzzz","title":"case zzzz","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/zzzzabbreviation","title":"case zzzzAbbreviation","type":"case"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/zzzzzabbreviation","title":"case zzzzzAbbreviation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:)-27lol","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:)-39oki","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:)-27lol","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:)-39oki","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents\/zone","title":"DateFormatComponents.Zone","type":"enum"}],"path":"\/documentation\/fzswiftutils\/dateformatcomponents","title":"DateFormatComponents","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/unpacking","title":"case unpacking","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:)-2rssn","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:)-5eykq","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/nscodingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:)-2rssn","title":"func isEqual(any Equatable) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:)-5eykq","title":"func isEqual((any Equatable)?) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/isequal(_:for:)","title":"func isEqual(Self, for: [PartialKeyPath<Self>]) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/nscodingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nscodingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/nscodingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/nscodingerror","title":"NSCodingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/failedtoallocateclasspair(class:subclassname:)","title":"case failedToAllocateClassPair(class: AnyClass, subclassName: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/nsobjectswizzleerror","title":"NSObjectSwizzleError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-4po8r","title":"static func .* (Self, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-5vkbq","title":"static func .* (Self, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-6fill","title":"static func .* (Self, Float) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-6s4r7","title":"static func .* (Self, Double) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-7osom","title":"static func .* (Self, ArraySlice<Float>) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-9mpuq","title":"static func .* (Self, ArraySlice<Double>) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-9vp3","title":"static func .* (ArraySlice<Float>, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.*(_:_:)-lv9c","title":"static func .* (ArraySlice<Double>, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-1p92u","title":"static func .+ (Self, ArraySlice<Double>) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-2zw8v","title":"static func .+ (Self, ArraySlice<Float>) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-3kw93","title":"static func .+ (Self, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-6ibrm","title":"static func .+ (Self, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-8jx0u","title":"static func .+ (ArraySlice<Float>, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.+(_:_:)-z3al","title":"static func .+ (ArraySlice<Double>, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-14qkk","title":"static func .- (Self, ArraySlice<Double>) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-1q1ld","title":"static func .- (Self, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-31osc","title":"static func .- (Self, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-4lxg","title":"static func .- (ArraySlice<Float>, Self) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-9ydtn","title":"static func .- (ArraySlice<Double>, Self) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.-(_:_:)-pb84","title":"static func .- (Self, ArraySlice<Float>) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.\/(_:_:)-3cnlm","title":"static func .\/ (Self, Double) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer\/'.\/(_:_:)-3i51","title":"static func .\/ (Self, Float) -> [Float]","type":"op"}],"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratebuffer","title":"AccelerateBuffer","type":"extension"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-194us","title":"static func .*= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-2ebk5","title":"static func .*= (inout Self, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-30b5d","title":"static func .*= (inout ArraySlice<Float>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-4ml40","title":"static func .*= (inout Self, ArraySlice<Float>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-7jrw0","title":"static func .*= (inout ArraySlice<Double>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-7zzn5","title":"static func .*= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-96swa","title":"static func .*= (inout Self, Float)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.*=(_:_:)-9o3r5","title":"static func .*= (inout Self, ArraySlice<Double>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-38svk","title":"static func .+= (inout ArraySlice<Double>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-3djeg","title":"static func .+= (inout Self, ArraySlice<Double>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-4g7qy","title":"static func .+= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-6c0q8","title":"static func .+= (inout Self, ArraySlice<Float>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-8gual","title":"static func .+= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.+=(_:_:)-bmv2","title":"static func .+= (inout ArraySlice<Float>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-5v0un","title":"static func .-= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-6z9hu","title":"static func .-= (inout Self, ArraySlice<Float>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-7gd2v","title":"static func .-= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-8m5ye","title":"static func .-= (inout ArraySlice<Float>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-8vwk0","title":"static func .-= (inout Self, ArraySlice<Double>)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.-=(_:_:)-9xojj","title":"static func .-= (inout ArraySlice<Double>, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.\/=(_:_:)-1of2v","title":"static func .\/= (inout Self, Float)","type":"op"},{"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer\/'.\/=(_:_:)-4v5xx","title":"static func .\/= (inout Self, Double)","type":"op"}],"path":"\/documentation\/fzswiftutils\/accelerate\/acceleratemutablebuffer","title":"AccelerateMutableBuffer","type":"extension"}],"path":"\/documentation\/fzswiftutils\/accelerate","title":"Accelerate","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/dispatch\/dispatchqueue\/asyncafter(timeinterval:execute:)-5xylc","title":"func asyncAfter(timeInterval: TimeDuration, execute: DispatchWorkItem)","type":"method"},{"path":"\/documentation\/fzswiftutils\/dispatch\/dispatchqueue\/asyncafter(timeinterval:execute:)-90uid","title":"func asyncAfter(timeInterval: TimeInterval, execute: DispatchWorkItem)","type":"method"},{"path":"\/documentation\/fzswiftutils\/dispatch\/dispatchqueue\/asyncafter(timeinterval:qos:flags:execute:)-17wgk","title":"func asyncAfter(timeInterval: TimeInterval, qos: DispatchQoS, flags: DispatchWorkItemFlags, execute: () -> Void)","type":"method"},{"path":"\/documentation\/fzswiftutils\/dispatch\/dispatchqueue\/asyncafter(timeinterval:qos:flags:execute:)-6wc3z","title":"func asyncAfter(timeInterval: TimeDuration, qos: DispatchQoS, flags: DispatchWorkItemFlags, execute: () -> Void)","type":"method"}],"path":"\/documentation\/fzswiftutils\/dispatch\/dispatchqueue","title":"DispatchQueue","type":"extension"}],"path":"\/documentation\/fzswiftutils\/dispatch","title":"Dispatch","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsvalue\/init(cgaffinetransform:)","title":"init(cgAffineTransform: CGAffineTransform)","type":"init"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsvalue\/init(directionaledgeinsets:)","title":"init(directionalEdgeInsets: NSDirectionalEdgeInsets)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsvalue\/cgaffinetransformvalue","title":"var cgAffineTransformValue: CGAffineTransform","type":"property"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsvalue\/directionaledgeinsetsvalue","title":"var directionalEdgeInsetsValue: NSDirectionalEdgeInsets","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsvalue","title":"NSValue","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/timer\/init(fire:interval:repeats:block:)","title":"init(fire: Date, interval: TimeDuration, repeats: Bool, block: ((Timer) -> Void))","type":"init"}],"path":"\/documentation\/fzswiftutils\/foundation\/timer","title":"Timer","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/foundation\/nsedgeinsets\/nsvalue","title":"var nsValue: NSValue","type":"property"}],"path":"\/documentation\/fzswiftutils\/foundation\/nsedgeinsets","title":"NSEdgeInsets","type":"extension"}],"path":"\/documentation\/fzswiftutils\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/objectivec\/selector\/_-_(_:_:)-1yiuo","title":"static func <-> (Selector, String) -> Swizzle.SelectorPair","type":"op"},{"path":"\/documentation\/fzswiftutils\/objectivec\/selector\/_-_(_:_:)-81h92","title":"static func <-> (Selector, Selector) -> Swizzle.SelectorPair","type":"op"},{"path":"\/documentation\/fzswiftutils\/objectivec\/selector\/_~_(_:_:)-2cmcr","title":"static func <~> (Selector, String) -> Swizzle.SelectorPair","type":"op"},{"path":"\/documentation\/fzswiftutils\/objectivec\/selector\/_~_(_:_:)-8iubo","title":"static func <~> (Selector, Selector) -> Swizzle.SelectorPair","type":"op"}],"path":"\/documentation\/fzswiftutils\/objectivec\/selector","title":"Selector","type":"extension"}],"path":"\/documentation\/fzswiftutils\/objectivec","title":"ObjectiveC","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/quartzcore\/catransform3d\/nsvalue","title":"var nsValue: NSValue","type":"property"}],"path":"\/documentation\/fzswiftutils\/quartzcore\/catransform3d","title":"CATransform3D","type":"extension"}],"path":"\/documentation\/fzswiftutils\/quartzcore","title":"QuartzCore","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/additivearithmetic\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/additivearithmetic","title":"AdditiveArithmetic","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/numeric\/isapproximatelyequal(to:absolutetolerance:relativetolerance:)","title":"func isApproximatelyEqual(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude) -> Bool","type":"method"},{"path":"\/documentation\/fzswiftutils\/swift\/numeric\/isapproximatelyequal(to:relativetolerance:norm:)","title":"func isApproximatelyEqual(to: Self, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/numeric","title":"Numeric","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*(_:_:)-2d9a8","title":"static func .* (`Self`, `Self`) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*(_:_:)-2wzrz","title":"static func .* (`Self`, Float) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*(_:_:)-8aegb","title":"static func .* (`Self`, Double) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*(_:_:)-9pgf0","title":"static func .* (`Self`, `Self`) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*=(_:_:)-4v5h9","title":"static func .*= (inout `Self`, Float)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*=(_:_:)-5g6w8","title":"static func .*= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*=(_:_:)-8s2k4","title":"static func .*= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.*=(_:_:)-9uehf","title":"static func .*= (inout `Self`, Double)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.+(_:_:)-8g1m9","title":"static func .+ (`Self`, `Self`) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.+(_:_:)-9ygq0","title":"static func .+ (`Self`, `Self`) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.+=(_:_:)-12fxi","title":"static func .+= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.+=(_:_:)-15y5y","title":"static func .+= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.-(_:_:)-21dl0","title":"static func .- (`Self`, `Self`) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.-(_:_:)-95t4l","title":"static func .- (`Self`, `Self`) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.-=(_:_:)-19zze","title":"static func .-= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.-=(_:_:)-8io4w","title":"static func .-= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.\/(_:_:)-3rypj","title":"static func .\/ (`Self`, Double) -> [Double]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.\/(_:_:)-98mbl","title":"static func .\/ (`Self`, Float) -> [Float]","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.\/=(_:_:)-7lhjs","title":"static func .\/= (inout `Self`, Float)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/arrayslice\/'.\/=(_:_:)-94yei","title":"static func .\/= (inout `Self`, Double)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/arrayslice","title":"ArraySlice","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/float\/scaledintegral","title":"var scaledIntegral: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/float\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: Float, epsilon: Float) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swift\/float\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/float\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/float\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/float\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/float16\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/float16\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/float16\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/float16","title":"Float16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/int\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/int\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/int\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/int16\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/int16\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/int16\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/int16","title":"Int16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/int32\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/int32\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/int32\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/int64\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/int64\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/int64\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/int64","title":"Int64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/int8\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/int8\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/int8\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/int8","title":"Int8","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/uint\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/uint\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/uint\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/uint","title":"UInt","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/uint16\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/uint16\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/uint16\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/uint32\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/uint32\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/uint32\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/uint64\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/uint64\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/uint64\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/uint64","title":"UInt64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swift\/uint8\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"path":"\/documentation\/fzswiftutils\/swift\/uint8\/\/=(_:_:)","title":"static func \/= (inout Self, Self)","type":"op"}],"path":"\/documentation\/fzswiftutils\/swift\/uint8\/multiplicativearithmetic-implementations","title":"MultiplicativeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swift\/uint8","title":"UInt8","type":"extension"}],"path":"\/documentation\/fzswiftutils\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/swiftui\/animatablepair\/isapproximatelyequal(to:epsilon:)","title":"func isApproximatelyEqual(to: AnimatablePair<First, Second>, epsilon: Double) -> Bool","type":"method"}],"path":"\/documentation\/fzswiftutils\/swiftui\/animatablepair\/approximateequatable-implementations","title":"ApproximateEquatable Implementations","type":"symbol"}],"path":"\/documentation\/fzswiftutils\/swiftui\/animatablepair","title":"AnimatablePair","type":"extension"}],"path":"\/documentation\/fzswiftutils\/swiftui","title":"SwiftUI","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fzswiftutils\/_concurrency\/asyncsequence\/collect()-1ecd6","title":"func collect() async rethrows -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/_concurrency\/asyncsequence\/collect()-2fm7y","title":"func collect() throws -> [Element]","type":"method"},{"path":"\/documentation\/fzswiftutils\/_concurrency\/asyncsequence\/collect(completion:)","title":"func collect(completion: ([Element]) -> Void) throws","type":"method"}],"path":"\/documentation\/fzswiftutils\/_concurrency\/asyncsequence","title":"AsyncSequence","type":"extension"}],"path":"\/documentation\/fzswiftutils\/_concurrency","title":"_Concurrency","type":"extension"}],"path":"\/documentation\/fzswiftutils","title":"FZSwiftUtils","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}